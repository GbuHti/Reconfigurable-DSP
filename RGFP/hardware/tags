!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/0c4369e/
$(OBJs)	build/Makefile	/^$(OBJs):%.o:$(SrcDir)\/%.cpp$/;"	t
%.o	build/Makefile	/^$(OBJs):%.o:$(SrcDir)\/%.cpp$/;"	t
A0	core/csr.h	/^            unsigned A0: 2;             \/\/ WARL$/;"	m	struct:csr_pmpcfg::__anon50a6ad1b120a::__anon50a6ad1b1308	typeref:typename:unsigned:2
A0	vp/csr.h	/^            unsigned A0: 2;             \/\/ WARL$/;"	m	struct:csr_pmpcfg::__anon8468e878120a::__anon8468e8781308	typeref:typename:unsigned:2
ADD	PEs/PE.h	/^			ADD,$/;"	e	enum:PE::op_type
ADD	core/instr.cpp	/^    static T ADD(unsigned rd, unsigned rs1, unsigned rs2) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
ADD	core/instr.h	/^    ADD,$/;"	e	enum:Opcode::mapping
ADD	vp/instr.cpp	/^    static T ADD(unsigned rd, unsigned rs1, unsigned rs2) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
ADD	vp/instr.h	/^        ADD,$/;"	e	enum:Opcode::mapping
ADDI	core/instr.cpp	/^    static T ADDI(unsigned rd, unsigned rs1, int I_imm) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
ADDI	core/instr.h	/^    ADDI,$/;"	e	enum:Opcode::mapping
ADDI	vp/instr.cpp	/^    static T ADDI(unsigned rd, unsigned rs1, int I_imm) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
ADDI	vp/instr.h	/^        ADDI,$/;"	e	enum:Opcode::mapping
ADDR_SPACE	vp/flash.h	/^    static const unsigned int ADDR_SPACE = DATA_ADDR + BLOCKSIZE;$/;"	m	struct:Flashcontroller	typeref:typename:const unsigned int
AMOADD_W	core/instr.h	/^    AMOADD_W,$/;"	e	enum:Opcode::mapping
AMOADD_W	vp/instr.h	/^        AMOADD_W,$/;"	e	enum:Opcode::mapping
AMOAND_W	core/instr.h	/^    AMOAND_W,$/;"	e	enum:Opcode::mapping
AMOAND_W	vp/instr.h	/^        AMOAND_W,$/;"	e	enum:Opcode::mapping
AMOMAXU_W	core/instr.h	/^    AMOMAXU_W,$/;"	e	enum:Opcode::mapping
AMOMAXU_W	vp/instr.h	/^        AMOMAXU_W,$/;"	e	enum:Opcode::mapping
AMOMAX_W	core/instr.h	/^    AMOMAX_W,$/;"	e	enum:Opcode::mapping
AMOMAX_W	vp/instr.h	/^        AMOMAX_W,$/;"	e	enum:Opcode::mapping
AMOMINU_W	core/instr.h	/^    AMOMINU_W,$/;"	e	enum:Opcode::mapping
AMOMINU_W	vp/instr.h	/^        AMOMINU_W,$/;"	e	enum:Opcode::mapping
AMOMIN_W	core/instr.h	/^    AMOMIN_W,$/;"	e	enum:Opcode::mapping
AMOMIN_W	vp/instr.h	/^        AMOMIN_W,$/;"	e	enum:Opcode::mapping
AMOOR_W	core/instr.h	/^    AMOOR_W,$/;"	e	enum:Opcode::mapping
AMOOR_W	vp/instr.h	/^        AMOOR_W,$/;"	e	enum:Opcode::mapping
AMOSWAP_W	core/instr.h	/^    AMOSWAP_W,$/;"	e	enum:Opcode::mapping
AMOSWAP_W	vp/instr.h	/^        AMOSWAP_W,$/;"	e	enum:Opcode::mapping
AMOXOR_W	core/instr.h	/^    AMOXOR_W,$/;"	e	enum:Opcode::mapping
AMOXOR_W	vp/instr.h	/^        AMOXOR_W,$/;"	e	enum:Opcode::mapping
AND	core/instr.cpp	/^    static T AND(unsigned rd, unsigned rs1, unsigned rs2) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
AND	core/instr.h	/^    AND,$/;"	e	enum:Opcode::mapping
AND	vp/instr.cpp	/^    static T AND(unsigned rd, unsigned rs1, unsigned rs2) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
AND	vp/instr.h	/^        AND,$/;"	e	enum:Opcode::mapping
ANDI	core/instr.cpp	/^    static T ANDI(unsigned rd, unsigned rs1, int I_imm) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
ANDI	core/instr.h	/^    ANDI,$/;"	e	enum:Opcode::mapping
ANDI	vp/instr.cpp	/^    static T ANDI(unsigned rd, unsigned rs1, int I_imm) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
ANDI	vp/instr.h	/^        ANDI,$/;"	e	enum:Opcode::mapping
AON	vp/sifive/aon.h	/^    AON(sc_core::sc_module_name) {$/;"	f	struct:AON
AON	vp/sifive/aon.h	/^struct AON : public sc_core::sc_module {$/;"	s
AUIPC	core/instr.h	/^    AUIPC,$/;"	e	enum:Opcode::mapping
AUIPC	vp/instr.h	/^        AUIPC,$/;"	e	enum:Opcode::mapping
AbstractMapping	vp/tlm_map.h	/^    struct AbstractMapping {$/;"	s	namespace:vp::map
AccessMode	vp/csr.h	/^    enum AccessMode {$/;"	g	struct:csr_base
Addr_Target_0_Claim_Response	vp/plic.h	/^        Addr_Target_0_Claim_Response        = 4$/;"	e	enum:PLIC::__anon2f5647180103
Addr_Target_0_Priority_Threshold	vp/plic.h	/^        Addr_Target_0_Priority_Threshold    = 0,$/;"	e	enum:PLIC::__anon2f5647180103
AddressMapping	vp/tlm_map.h	/^    struct AddressMapping : public AbstractMapping {$/;"	s	namespace:vp::map
Allocate_thread	RFU/ReconfigController.cpp	/^void ReconfigController::Allocate_thread()$/;"	f	class:ReconfigController	typeref:typename:void
BEQ	core/instr.cpp	/^    static T BEQ(unsigned rs1, unsigned rs2, int B_imm) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
BEQ	core/instr.h	/^    BEQ,$/;"	e	enum:Opcode::mapping
BEQ	vp/instr.cpp	/^    static T BEQ(unsigned rs1, unsigned rs2, int B_imm) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
BEQ	vp/instr.h	/^        BEQ,$/;"	e	enum:Opcode::mapping
BGE	core/instr.h	/^    BGE,$/;"	e	enum:Opcode::mapping
BGE	vp/instr.h	/^        BGE,$/;"	e	enum:Opcode::mapping
BGEU	core/instr.h	/^    BGEU,$/;"	e	enum:Opcode::mapping
BGEU	vp/instr.h	/^        BGEU,$/;"	e	enum:Opcode::mapping
BIT_RANGE	core/instr.h	/^#define BIT_RANGE(/;"	d
BIT_RANGE	vp/instr.h	/^#define BIT_RANGE(/;"	d
BIT_SINGLE	core/instr.h	/^#define BIT_SINGLE(/;"	d
BIT_SINGLE	vp/instr.h	/^#define BIT_SINGLE(/;"	d
BIT_SINGLE_P1	core/instr.h	/^#define BIT_SINGLE_P1(/;"	d
BIT_SINGLE_P1	vp/instr.h	/^#define BIT_SINGLE_P1(/;"	d
BIT_SINGLE_PN	core/instr.h	/^#define BIT_SINGLE_PN(/;"	d
BIT_SINGLE_PN	vp/instr.h	/^#define BIT_SINGLE_PN(/;"	d
BIT_SLICE	core/instr.h	/^#define BIT_SLICE(/;"	d
BIT_SLICE	vp/instr.h	/^#define BIT_SLICE(/;"	d
BLOCKSIZE	vp/flash.h	/^    static const unsigned int BLOCKSIZE = 512;$/;"	m	struct:Flashcontroller	typeref:typename:const unsigned int
BLT	core/instr.h	/^    BLT,$/;"	e	enum:Opcode::mapping
BLT	vp/instr.h	/^        BLT,$/;"	e	enum:Opcode::mapping
BLTU	core/instr.h	/^    BLTU,$/;"	e	enum:Opcode::mapping
BLTU	vp/instr.h	/^        BLTU,$/;"	e	enum:Opcode::mapping
BNE	core/instr.cpp	/^    static T BNE(unsigned rs1, unsigned rs2, int B_imm) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
BNE	core/instr.h	/^    BNE,$/;"	e	enum:Opcode::mapping
BNE	vp/instr.cpp	/^    static T BNE(unsigned rs1, unsigned rs2, int B_imm) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
BNE	vp/instr.h	/^        BNE,$/;"	e	enum:Opcode::mapping
BUS_H	core/bus.h	/^#define BUS_H$/;"	d
B_imm	core/instr.h	/^    inline int32_t B_imm() {$/;"	f	struct:Instruction	typeref:typename:int32_t
B_imm	vp/instr.h	/^    inline int32_t B_imm() {$/;"	f	struct:Instruction	typeref:typename:int32_t
BasicTimer	vp/basic_timer.h	/^    BasicTimer(sc_core::sc_module_name, uint32_t irq_number)$/;"	f	struct:BasicTimer
BasicTimer	vp/basic_timer.h	/^struct BasicTimer : public sc_core::sc_module {$/;"	s
Blockbuffer	vp/flash.h	/^	Blockbuffer(int fileDescriptor) : offs(0), dirty(false), active(false), fd(fileDescriptor){};$/;"	f	struct:Blockbuffer
Blockbuffer	vp/flash.h	/^template<size_t width> struct Blockbuffer$/;"	s
Bus	core/bus.h	/^	Bus(sc_core::sc_module_name name)$/;"	f	struct:Bus
Bus	core/bus.h	/^struct Bus: public sc_core::sc_module$/;"	s
CLINT	vp/clint.h	/^    CLINT(sc_core::sc_module_name) {$/;"	f	struct:CLINT
CLINT	vp/clint.h	/^struct CLINT : public clint_if,$/;"	s
CLINT_IF_H	core/clint_if.h	/^#define CLINT_IF_H$/;"	d
CONFIG_ADD	RFU/contextreg_if.h	/^	CONFIG_ADD		= 0b000,$/;"	e	enum:op
CONFIG_LOAD	RFU/contextreg_if.h	/^	CONFIG_LOAD		= 0b100,$/;"	e	enum:op
CONFIG_MUL	RFU/contextreg_if.h	/^	CONFIG_MUL		= 0b001,$/;"	e	enum:op
CONFIG_SIN	RFU/contextreg_if.h	/^	CONFIG_SIN		= 0b011,$/;"	e	enum:op
CONFIG_SQRT	RFU/contextreg_if.h	/^	CONFIG_SQRT		= 0b010,$/;"	e	enum:op
CONFIG_STORE	RFU/contextreg_if.h	/^	CONFIG_STORE	= 0b101,$/;"	e	enum:op
CONTEXTREG_IF_H	RFU/contextreg_if.h	/^#define CONTEXTREG_IF_H$/;"	d
CSRRC	core/instr.h	/^    CSRRC,$/;"	e	enum:Opcode::mapping
CSRRC	vp/instr.h	/^        CSRRC,$/;"	e	enum:Opcode::mapping
CSRRCI	core/instr.h	/^    CSRRCI,$/;"	e	enum:Opcode::mapping
CSRRCI	vp/instr.h	/^        CSRRCI,$/;"	e	enum:Opcode::mapping
CSRRS	core/instr.h	/^    CSRRS,$/;"	e	enum:Opcode::mapping
CSRRS	vp/instr.h	/^        CSRRS,$/;"	e	enum:Opcode::mapping
CSRRSI	core/instr.h	/^    CSRRSI,$/;"	e	enum:Opcode::mapping
CSRRSI	vp/instr.h	/^        CSRRSI,$/;"	e	enum:Opcode::mapping
CSRRW	core/instr.h	/^    CSRRW,$/;"	e	enum:Opcode::mapping
CSRRW	vp/instr.h	/^        CSRRW,$/;"	e	enum:Opcode::mapping
CSRRWI	core/instr.h	/^    CSRRWI,$/;"	e	enum:Opcode::mapping
CSRRWI	vp/instr.h	/^        CSRRWI,$/;"	e	enum:Opcode::mapping
CSR_CYCLEH_ADDR	core/csr.h	/^    CSR_CYCLEH_ADDR = 0xC80,$/;"	e	enum:csr_addresses
CSR_CYCLEH_ADDR	vp/csr.h	/^    CSR_CYCLEH_ADDR = 0xC80,$/;"	e	enum:csr_addresses
CSR_CYCLE_ADDR	core/csr.h	/^    CSR_CYCLE_ADDR = 0xC00,$/;"	e	enum:csr_addresses
CSR_CYCLE_ADDR	vp/csr.h	/^    CSR_CYCLE_ADDR = 0xC00,$/;"	e	enum:csr_addresses
CSR_H	core/csr.h	/^#define CSR_H$/;"	d
CSR_INSTRETH_ADDR	core/csr.h	/^    CSR_INSTRETH_ADDR = 0xC82,$/;"	e	enum:csr_addresses
CSR_INSTRETH_ADDR	vp/csr.h	/^    CSR_INSTRETH_ADDR = 0xC82,$/;"	e	enum:csr_addresses
CSR_INSTRET_ADDR	core/csr.h	/^    CSR_INSTRET_ADDR = 0xC02,$/;"	e	enum:csr_addresses
CSR_INSTRET_ADDR	vp/csr.h	/^    CSR_INSTRET_ADDR = 0xC02,$/;"	e	enum:csr_addresses
CSR_MARCHID_ADDR	core/csr.h	/^    CSR_MARCHID_ADDR = 0xF12,$/;"	e	enum:csr_addresses
CSR_MARCHID_ADDR	vp/csr.h	/^    CSR_MARCHID_ADDR = 0xF12,$/;"	e	enum:csr_addresses
CSR_MCAUSE_ADDR	core/csr.h	/^    CSR_MCAUSE_ADDR = 0x342,$/;"	e	enum:csr_addresses
CSR_MCAUSE_ADDR	vp/csr.h	/^    CSR_MCAUSE_ADDR = 0x342,$/;"	e	enum:csr_addresses
CSR_MCYCLEH_ADDR	core/csr.h	/^    CSR_MCYCLEH_ADDR = 0xB80,$/;"	e	enum:csr_addresses
CSR_MCYCLEH_ADDR	vp/csr.h	/^    CSR_MCYCLEH_ADDR = 0xB80,$/;"	e	enum:csr_addresses
CSR_MCYCLE_ADDR	core/csr.h	/^    CSR_MCYCLE_ADDR = 0xB00,$/;"	e	enum:csr_addresses
CSR_MCYCLE_ADDR	vp/csr.h	/^    CSR_MCYCLE_ADDR = 0xB00,$/;"	e	enum:csr_addresses
CSR_MEPC_ADDR	core/csr.h	/^    CSR_MEPC_ADDR = 0x341,$/;"	e	enum:csr_addresses
CSR_MEPC_ADDR	vp/csr.h	/^    CSR_MEPC_ADDR = 0x341,$/;"	e	enum:csr_addresses
CSR_MHARTID_ADDR	core/csr.h	/^    CSR_MHARTID_ADDR = 0xF14,$/;"	e	enum:csr_addresses
CSR_MHARTID_ADDR	vp/csr.h	/^    CSR_MHARTID_ADDR = 0xF14,$/;"	e	enum:csr_addresses
CSR_MIE_ADDR	core/csr.h	/^    CSR_MIE_ADDR = 0x304,$/;"	e	enum:csr_addresses
CSR_MIE_ADDR	vp/csr.h	/^    CSR_MIE_ADDR = 0x304,$/;"	e	enum:csr_addresses
CSR_MIMPID_ADDR	core/csr.h	/^    CSR_MIMPID_ADDR = 0xF13,$/;"	e	enum:csr_addresses
CSR_MIMPID_ADDR	vp/csr.h	/^    CSR_MIMPID_ADDR = 0xF13,$/;"	e	enum:csr_addresses
CSR_MINSTRETH_ADDR	core/csr.h	/^    CSR_MINSTRETH_ADDR = 0xB82,$/;"	e	enum:csr_addresses
CSR_MINSTRETH_ADDR	vp/csr.h	/^    CSR_MINSTRETH_ADDR = 0xB82,$/;"	e	enum:csr_addresses
CSR_MINSTRET_ADDR	core/csr.h	/^    CSR_MINSTRET_ADDR = 0xB02,$/;"	e	enum:csr_addresses
CSR_MINSTRET_ADDR	vp/csr.h	/^    CSR_MINSTRET_ADDR = 0xB02,$/;"	e	enum:csr_addresses
CSR_MIP_ADDR	core/csr.h	/^    CSR_MIP_ADDR = 0x344,$/;"	e	enum:csr_addresses
CSR_MIP_ADDR	vp/csr.h	/^    CSR_MIP_ADDR = 0x344,$/;"	e	enum:csr_addresses
CSR_MISA_ADDR	core/csr.h	/^    CSR_MISA_ADDR = 0x301,$/;"	e	enum:csr_addresses
CSR_MISA_ADDR	vp/csr.h	/^    CSR_MISA_ADDR = 0x301,$/;"	e	enum:csr_addresses
CSR_MSCRATCH_ADDR	core/csr.h	/^    CSR_MSCRATCH_ADDR = 0x340,$/;"	e	enum:csr_addresses
CSR_MSCRATCH_ADDR	vp/csr.h	/^    CSR_MSCRATCH_ADDR = 0x340,$/;"	e	enum:csr_addresses
CSR_MSTATUS_ADDR	core/csr.h	/^    CSR_MSTATUS_ADDR = 0x300,$/;"	e	enum:csr_addresses
CSR_MSTATUS_ADDR	vp/csr.h	/^    CSR_MSTATUS_ADDR = 0x300,$/;"	e	enum:csr_addresses
CSR_MTIMEH_ADDR	core/csr.h	/^    CSR_MTIMEH_ADDR  = 0xB81,$/;"	e	enum:csr_addresses
CSR_MTIMEH_ADDR	vp/csr.h	/^    CSR_MTIMEH_ADDR  = 0xB81,$/;"	e	enum:csr_addresses
CSR_MTIME_ADDR	core/csr.h	/^    CSR_MTIME_ADDR  = 0xB01,$/;"	e	enum:csr_addresses
CSR_MTIME_ADDR	vp/csr.h	/^    CSR_MTIME_ADDR  = 0xB01,$/;"	e	enum:csr_addresses
CSR_MTVAL_ADDR	core/csr.h	/^    CSR_MTVAL_ADDR = 0x343,$/;"	e	enum:csr_addresses
CSR_MTVAL_ADDR	vp/csr.h	/^    CSR_MTVAL_ADDR = 0x343,$/;"	e	enum:csr_addresses
CSR_MTVEC_ADDR	core/csr.h	/^    CSR_MTVEC_ADDR = 0x305,$/;"	e	enum:csr_addresses
CSR_MTVEC_ADDR	vp/csr.h	/^    CSR_MTVEC_ADDR = 0x305,$/;"	e	enum:csr_addresses
CSR_MVENDORID_ADDR	core/csr.h	/^    CSR_MVENDORID_ADDR = 0xF11,$/;"	e	enum:csr_addresses
CSR_MVENDORID_ADDR	vp/csr.h	/^    CSR_MVENDORID_ADDR = 0xF11,$/;"	e	enum:csr_addresses
CSR_TABLE_ADD_COUNTER_64	core/csr.h	/^#define CSR_TABLE_ADD_COUNTER_64(/;"	d
CSR_TABLE_ADD_COUNTER_64	vp/csr.h	/^#define CSR_TABLE_ADD_COUNTER_64(/;"	d
CSR_TABLE_DEFINE_COUNTER	core/csr.h	/^#define CSR_TABLE_DEFINE_COUNTER(/;"	d
CSR_TABLE_DEFINE_COUNTER	vp/csr.h	/^#define CSR_TABLE_DEFINE_COUNTER(/;"	d
CSR_TIMEH_ADDR	core/csr.h	/^    CSR_TIMEH_ADDR  = 0xC81,$/;"	e	enum:csr_addresses
CSR_TIMEH_ADDR	vp/csr.h	/^    CSR_TIMEH_ADDR  = 0xC81,$/;"	e	enum:csr_addresses
CSR_TIME_ADDR	core/csr.h	/^    CSR_TIME_ADDR  = 0xC01,$/;"	e	enum:csr_addresses
CSR_TIME_ADDR	vp/csr.h	/^    CSR_TIME_ADDR  = 0xC01,$/;"	e	enum:csr_addresses
CXX	build/Makefile	/^CXX = g++$/;"	m
C_ADD	core/instr.cpp	/^        C_ADD,$/;"	e	enum:Compressed::Opcode	file:
C_ADD	vp/instr.cpp	/^        C_ADD,$/;"	e	enum:Compressed::Opcode	file:
C_ADDI	core/instr.cpp	/^        C_ADDI,$/;"	e	enum:Compressed::Opcode	file:
C_ADDI	vp/instr.cpp	/^        C_ADDI,$/;"	e	enum:Compressed::Opcode	file:
C_ADDI16SP	core/instr.cpp	/^        C_ADDI16SP,$/;"	e	enum:Compressed::Opcode	file:
C_ADDI16SP	vp/instr.cpp	/^        C_ADDI16SP,$/;"	e	enum:Compressed::Opcode	file:
C_ADDI16SP_NZIMM	core/instr.cpp	/^int32_t C_ADDI16SP_NZIMM(int32_t n) {$/;"	f	typeref:typename:int32_t
C_ADDI16SP_NZIMM	vp/instr.cpp	/^int32_t C_ADDI16SP_NZIMM(int32_t n) {$/;"	f	typeref:typename:int32_t
C_ADDI4SPN	core/instr.cpp	/^        C_ADDI4SPN,$/;"	e	enum:Compressed::Opcode	file:
C_ADDI4SPN	vp/instr.cpp	/^        C_ADDI4SPN,$/;"	e	enum:Compressed::Opcode	file:
C_ADDI4SPN_NZUIMM	core/instr.cpp	/^unsigned C_ADDI4SPN_NZUIMM(uint32_t n) {$/;"	f	typeref:typename:unsigned
C_ADDI4SPN_NZUIMM	vp/instr.cpp	/^unsigned C_ADDI4SPN_NZUIMM(uint32_t n) {$/;"	f	typeref:typename:unsigned
C_AND	core/instr.cpp	/^        C_AND,$/;"	e	enum:Compressed::Opcode	file:
C_AND	vp/instr.cpp	/^        C_AND,$/;"	e	enum:Compressed::Opcode	file:
C_ANDI	core/instr.cpp	/^        C_ANDI,$/;"	e	enum:Compressed::Opcode	file:
C_ANDI	vp/instr.cpp	/^        C_ANDI,$/;"	e	enum:Compressed::Opcode	file:
C_BEQZ	core/instr.cpp	/^        C_BEQZ,$/;"	e	enum:Compressed::Opcode	file:
C_BEQZ	vp/instr.cpp	/^        C_BEQZ,$/;"	e	enum:Compressed::Opcode	file:
C_BNEZ	core/instr.cpp	/^        C_BNEZ,$/;"	e	enum:Compressed::Opcode	file:
C_BNEZ	vp/instr.cpp	/^        C_BNEZ,$/;"	e	enum:Compressed::Opcode	file:
C_BRANCH_IMM	core/instr.cpp	/^int32_t C_BRANCH_IMM(int32_t n) {$/;"	f	typeref:typename:int32_t
C_BRANCH_IMM	vp/instr.cpp	/^int32_t C_BRANCH_IMM(int32_t n) {$/;"	f	typeref:typename:int32_t
C_EBREAK	core/instr.cpp	/^        C_EBREAK,$/;"	e	enum:Compressed::Opcode	file:
C_EBREAK	vp/instr.cpp	/^        C_EBREAK,$/;"	e	enum:Compressed::Opcode	file:
C_Illegal	core/instr.cpp	/^        C_Illegal,$/;"	e	enum:Compressed::Opcode	file:
C_Illegal	vp/instr.cpp	/^        C_Illegal,$/;"	e	enum:Compressed::Opcode	file:
C_J	core/instr.cpp	/^        C_J,$/;"	e	enum:Compressed::Opcode	file:
C_J	vp/instr.cpp	/^        C_J,$/;"	e	enum:Compressed::Opcode	file:
C_JAL	core/instr.cpp	/^        C_JAL,$/;"	e	enum:Compressed::Opcode	file:
C_JAL	vp/instr.cpp	/^        C_JAL,$/;"	e	enum:Compressed::Opcode	file:
C_JALR	core/instr.cpp	/^        C_JALR,$/;"	e	enum:Compressed::Opcode	file:
C_JALR	vp/instr.cpp	/^        C_JALR,$/;"	e	enum:Compressed::Opcode	file:
C_JAL_IMM	core/instr.cpp	/^int32_t C_JAL_IMM(int32_t n) {$/;"	f	typeref:typename:int32_t
C_JAL_IMM	vp/instr.cpp	/^int32_t C_JAL_IMM(int32_t n) {$/;"	f	typeref:typename:int32_t
C_JR	core/instr.cpp	/^        C_JR,$/;"	e	enum:Compressed::Opcode	file:
C_JR	vp/instr.cpp	/^        C_JR,$/;"	e	enum:Compressed::Opcode	file:
C_J_IMM	core/instr.cpp	/^int32_t C_J_IMM(int32_t n) {$/;"	f	typeref:typename:int32_t
C_J_IMM	vp/instr.cpp	/^int32_t C_J_IMM(int32_t n) {$/;"	f	typeref:typename:int32_t
C_LI	core/instr.cpp	/^        C_LI,$/;"	e	enum:Compressed::Opcode	file:
C_LI	vp/instr.cpp	/^        C_LI,$/;"	e	enum:Compressed::Opcode	file:
C_LUI	core/instr.cpp	/^        C_LUI,$/;"	e	enum:Compressed::Opcode	file:
C_LUI	vp/instr.cpp	/^        C_LUI,$/;"	e	enum:Compressed::Opcode	file:
C_LUI_NZIMM	core/instr.cpp	/^int32_t C_LUI_NZIMM(int32_t n) {$/;"	f	typeref:typename:int32_t
C_LUI_NZIMM	vp/instr.cpp	/^int32_t C_LUI_NZIMM(int32_t n) {$/;"	f	typeref:typename:int32_t
C_LW	core/instr.cpp	/^        C_LW,$/;"	e	enum:Compressed::Opcode	file:
C_LW	vp/instr.cpp	/^        C_LW,$/;"	e	enum:Compressed::Opcode	file:
C_LWSP	core/instr.cpp	/^        C_LWSP,$/;"	e	enum:Compressed::Opcode	file:
C_LWSP	vp/instr.cpp	/^        C_LWSP,$/;"	e	enum:Compressed::Opcode	file:
C_LWSP_UIMM	core/instr.cpp	/^uint32_t C_LWSP_UIMM(uint32_t n) {$/;"	f	typeref:typename:uint32_t
C_LWSP_UIMM	vp/instr.cpp	/^uint32_t C_LWSP_UIMM(uint32_t n) {$/;"	f	typeref:typename:uint32_t
C_LW_UIMM	core/instr.cpp	/^unsigned C_LW_UIMM(uint32_t n) {$/;"	f	typeref:typename:unsigned
C_LW_UIMM	vp/instr.cpp	/^unsigned C_LW_UIMM(uint32_t n) {$/;"	f	typeref:typename:unsigned
C_MV	core/instr.cpp	/^        C_MV,$/;"	e	enum:Compressed::Opcode	file:
C_MV	vp/instr.cpp	/^        C_MV,$/;"	e	enum:Compressed::Opcode	file:
C_NOP	core/instr.cpp	/^        C_NOP,$/;"	e	enum:Compressed::Opcode	file:
C_NOP	vp/instr.cpp	/^        C_NOP,$/;"	e	enum:Compressed::Opcode	file:
C_OR	core/instr.cpp	/^        C_OR,$/;"	e	enum:Compressed::Opcode	file:
C_OR	vp/instr.cpp	/^        C_OR,$/;"	e	enum:Compressed::Opcode	file:
C_Reserved	core/instr.cpp	/^        C_Reserved,$/;"	e	enum:Compressed::Opcode	file:
C_Reserved	vp/instr.cpp	/^        C_Reserved,$/;"	e	enum:Compressed::Opcode	file:
C_SLLI	core/instr.cpp	/^        C_SLLI,$/;"	e	enum:Compressed::Opcode	file:
C_SLLI	vp/instr.cpp	/^        C_SLLI,$/;"	e	enum:Compressed::Opcode	file:
C_SRAI	core/instr.cpp	/^        C_SRAI,$/;"	e	enum:Compressed::Opcode	file:
C_SRAI	vp/instr.cpp	/^        C_SRAI,$/;"	e	enum:Compressed::Opcode	file:
C_SRLI	core/instr.cpp	/^        C_SRLI,$/;"	e	enum:Compressed::Opcode	file:
C_SRLI	vp/instr.cpp	/^        C_SRLI,$/;"	e	enum:Compressed::Opcode	file:
C_SUB	core/instr.cpp	/^        C_SUB,$/;"	e	enum:Compressed::Opcode	file:
C_SUB	vp/instr.cpp	/^        C_SUB,$/;"	e	enum:Compressed::Opcode	file:
C_SW	core/instr.cpp	/^        C_SW,$/;"	e	enum:Compressed::Opcode	file:
C_SW	vp/instr.cpp	/^        C_SW,$/;"	e	enum:Compressed::Opcode	file:
C_SWSP	core/instr.cpp	/^        C_SWSP,$/;"	e	enum:Compressed::Opcode	file:
C_SWSP	vp/instr.cpp	/^        C_SWSP,$/;"	e	enum:Compressed::Opcode	file:
C_SWSP_UIMM	core/instr.cpp	/^uint32_t C_SWSP_UIMM(uint32_t n) {$/;"	f	typeref:typename:uint32_t
C_SWSP_UIMM	vp/instr.cpp	/^uint32_t C_SWSP_UIMM(uint32_t n) {$/;"	f	typeref:typename:uint32_t
C_SW_UIMM	core/instr.cpp	/^unsigned C_SW_UIMM(uint32_t n) {$/;"	f	typeref:typename:unsigned
C_SW_UIMM	vp/instr.cpp	/^unsigned C_SW_UIMM(uint32_t n) {$/;"	f	typeref:typename:unsigned
C_XOR	core/instr.cpp	/^        C_XOR,$/;"	e	enum:Compressed::Opcode	file:
C_XOR	vp/instr.cpp	/^        C_XOR,$/;"	e	enum:Compressed::Opcode	file:
Clint	core/clint_if.h	/^	Clint$/;"	f	struct:Clint
Clint	core/clint_if.h	/^struct Clint: public clint_if, $/;"	s
CombinedMemoryInterface	core/mem_if.cpp	/^CombinedMemoryInterface::CombinedMemoryInterface$/;"	f	class:CombinedMemoryInterface
CombinedMemoryInterface	core/mem_if.h	/^struct CombinedMemoryInterface : public sc_core::sc_module$/;"	s
CombinedMemoryInterface	vp/iss.h	/^    CombinedMemoryInterface(sc_core::sc_module_name, tlm_utils::tlm_quantumkeeper &keeper)$/;"	f	struct:CombinedMemoryInterface
CombinedMemoryInterface	vp/iss.h	/^struct CombinedMemoryInterface : public sc_core::sc_module,$/;"	s
Compressed	core/instr.cpp	/^namespace Compressed {$/;"	n	file:
Compressed	vp/instr.cpp	/^namespace Compressed {$/;"	n	file:
ConnectionInfo	core/bus.h	/^	struct ConnectionInfo {$/;"	s	struct:Bus
CoreExecStatus	core/iss.h	/^enum class CoreExecStatus {$/;"	g
CoreExecStatus	vp/iss.h	/^enum class CoreExecStatus {$/;"	g
DATA_ADDR	vp/flash.h	/^    static const unsigned int DATA_ADDR = FLASH_SIZE_REG + sizeof(uint64_t);$/;"	m	struct:Flashcontroller	typeref:typename:const unsigned int
DEFINE_H	RFU/define.h	/^#define DEFINE_H$/;"	d
DEVICE_H	core/device.h	/^#define DEVICE_H$/;"	d
DEVICE_PROXY_H	core/device_proxy.h	/^#define DEVICE_PROXY_H$/;"	d
DIV	PEs/PE.h	/^			DIV,$/;"	e	enum:PE::op_type
DIV	core/instr.h	/^    DIV,$/;"	e	enum:Opcode::mapping
DIV	vp/instr.h	/^        DIV,$/;"	e	enum:Opcode::mapping
DIVU	core/instr.h	/^    DIVU,$/;"	e	enum:Opcode::mapping
DIVU	vp/instr.h	/^        DIVU,$/;"	e	enum:Opcode::mapping
DIV_REG_ADDR	vp/sifive/uart.h	/^        DIV_REG_ADDR = 0x18,$/;"	e	enum:UART::__anon566b6a010103
DST_ADDR	core/dma.h	/^        DST_ADDR = 4,$/;"	e	enum:SimpleDMA::__anon50b533050203
DST_ADDR	vp/dma.h	/^        DST_ADDR = 4,$/;"	e	enum:SimpleDMA::__anon84776e620203
DataMemoryProxy	vp/iss.h	/^    DataMemoryProxy(direct_memory_interface &dmi, data_memory_interface *next_memory, tlm_utils:/;"	f	struct:DataMemoryProxy
DataMemoryProxy	vp/iss.h	/^struct DataMemoryProxy : public data_memory_interface {$/;"	s
DebugCoreRunner	vp/gdb_stub.h	/^    DebugCoreRunner(ISS &core, const debug_memory_mapping &mm)$/;"	f	struct:DebugCoreRunner
DebugCoreRunner	vp/gdb_stub.h	/^struct DebugCoreRunner : public sc_core::sc_module {$/;"	s
Device	core/device.h	/^struct Device$/;"	s
DeviceProxy	core/device_proxy.cpp	/^DeviceProxy::DeviceProxy$/;"	f	class:DeviceProxy
DeviceProxy	core/device_proxy.h	/^struct DeviceProxy:public sc_core::sc_module$/;"	s
Direct	core/csr.h	/^        Direct = 0,$/;"	e	enum:csr_mtvec::Mode
Direct	vp/csr.h	/^        Direct = 0,$/;"	e	enum:csr_mtvec::Mode
DirectCoreRunner	core/iss.h	/^    DirectCoreRunner(ISS &core)$/;"	f	struct:DirectCoreRunner
DirectCoreRunner	core/iss.h	/^struct DirectCoreRunner : public sc_core::sc_module {$/;"	s
DirectCoreRunner	vp/iss.h	/^    DirectCoreRunner(ISS &core)$/;"	f	struct:DirectCoreRunner
DirectCoreRunner	vp/iss.h	/^struct DirectCoreRunner : public sc_core::sc_module {$/;"	s
DirectoryOfThisScript	.ycm_extra_conf.py	/^def DirectoryOfThisScript():$/;"	f
Dispatch_thread	RFU/ReconfigController.cpp	/^void ReconfigController::Dispatch_thread()$/;"	f	class:ReconfigController	typeref:typename:void
Display	vp/display.cpp	/^Display::Display(sc_module_name)$/;"	f	class:Display
Display	vp/display.hpp	/^struct Display : public sc_core::sc_module$/;"	s
EBREAK	core/instr.cpp	/^    static T EBREAK() {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
EBREAK	core/instr.h	/^    EBREAK,$/;"	e	enum:Opcode::mapping
EBREAK	vp/instr.cpp	/^    static T EBREAK() {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
EBREAK	vp/instr.h	/^        EBREAK,$/;"	e	enum:Opcode::mapping
ECALL	core/instr.h	/^    ECALL,$/;"	e	enum:Opcode::mapping
ECALL	vp/instr.h	/^        ECALL,$/;"	e	enum:Opcode::mapping
ELFLoader	core/elf_loader.h	/^    ELFLoader(const char *filename)$/;"	f	struct:ELFLoader
ELFLoader	core/elf_loader.h	/^struct ELFLoader {$/;"	s
ELFLoader	vp/elf_loader.h	/^    ELFLoader(const char *filename)$/;"	f	struct:ELFLoader
ELFLoader	vp/elf_loader.h	/^struct ELFLoader {$/;"	s
ELF_NIDENT	core/elf_loader.h	/^#define ELF_NIDENT /;"	d
ELF_NIDENT	vp/elf_loader.h	/^#define ELF_NIDENT /;"	d
EXTRACT_SIGN_BIT	core/instr.h	/^#define EXTRACT_SIGN_BIT(/;"	d
EXTRACT_SIGN_BIT	vp/instr.h	/^#define EXTRACT_SIGN_BIT(/;"	d
Elf32_Addr	core/elf_loader.h	/^typedef uint32_t Elf32_Addr;	\/\/ Unsigned address$/;"	t	typeref:typename:uint32_t
Elf32_Addr	vp/elf_loader.h	/^typedef uint32_t Elf32_Addr;	\/\/ Unsigned address$/;"	t	typeref:typename:uint32_t
Elf32_Ehdr	core/elf_loader.h	/^} Elf32_Ehdr;$/;"	t	typeref:struct:__anon947b0a800108
Elf32_Ehdr	vp/elf_loader.h	/^} Elf32_Ehdr;$/;"	t	typeref:struct:__anonb9f73b3d0108
Elf32_Half	core/elf_loader.h	/^typedef uint16_t Elf32_Half;	\/\/ Unsigned half int$/;"	t	typeref:typename:uint16_t
Elf32_Half	vp/elf_loader.h	/^typedef uint16_t Elf32_Half;	\/\/ Unsigned half int$/;"	t	typeref:typename:uint16_t
Elf32_Off	core/elf_loader.h	/^typedef uint32_t Elf32_Off;	    \/\/ Unsigned offset$/;"	t	typeref:typename:uint32_t
Elf32_Off	vp/elf_loader.h	/^typedef uint32_t Elf32_Off;	    \/\/ Unsigned offset$/;"	t	typeref:typename:uint32_t
Elf32_Phdr	core/elf_loader.h	/^} Elf32_Phdr;$/;"	t	typeref:struct:__anon947b0a800208
Elf32_Phdr	vp/elf_loader.h	/^} Elf32_Phdr;$/;"	t	typeref:struct:__anonb9f73b3d0208
Elf32_PhdrType	core/elf_loader.h	/^enum Elf32_PhdrType {$/;"	g
Elf32_PhdrType	vp/elf_loader.h	/^enum Elf32_PhdrType {$/;"	g
Elf32_Shdr	core/elf_loader.h	/^} Elf32_Shdr;$/;"	t	typeref:struct:__anon947b0a800308
Elf32_Shdr	vp/elf_loader.h	/^} Elf32_Shdr;$/;"	t	typeref:struct:__anonb9f73b3d0308
Elf32_Sword	core/elf_loader.h	/^typedef int32_t  Elf32_Sword;	\/\/ Signed int$/;"	t	typeref:typename:int32_t
Elf32_Sword	vp/elf_loader.h	/^typedef int32_t  Elf32_Sword;	\/\/ Signed int$/;"	t	typeref:typename:int32_t
Elf32_Sym	core/elf_loader.h	/^} Elf32_Sym;$/;"	t	typeref:struct:__anon947b0a800408
Elf32_Sym	vp/elf_loader.h	/^} Elf32_Sym;$/;"	t	typeref:struct:__anonb9f73b3d0408
Elf32_Word	core/elf_loader.h	/^typedef uint32_t Elf32_Word;	\/\/ Unsigned int$/;"	t	typeref:typename:uint32_t
Elf32_Word	vp/elf_loader.h	/^typedef uint32_t Elf32_Word;	\/\/ Unsigned int$/;"	t	typeref:typename:uint32_t
EthernetDevice	vp/ethernet.cpp	/^EthernetDevice::EthernetDevice(sc_core::sc_module_name, uint32_t irq_number, uint8_t *mem, std::/;"	f	class:EthernetDevice
EthernetDevice	vp/ethernet.h	/^struct EthernetDevice : public sc_core::sc_module {$/;"	s
F12_EBREAK	core/instr.h	/^        F12_EBREAK = 0b000000000001,$/;"	e	enum:Opcode::parts
F12_EBREAK	vp/instr.h	/^        F12_EBREAK = 0b000000000001,$/;"	e	enum:Opcode::parts
F12_ECALL	core/instr.h	/^        F12_ECALL  = 0b000000000000,$/;"	e	enum:Opcode::parts
F12_ECALL	vp/instr.h	/^        F12_ECALL  = 0b000000000000,$/;"	e	enum:Opcode::parts
F12_MRET	core/instr.h	/^        F12_MRET   = 0b001100000010,$/;"	e	enum:Opcode::parts
F12_MRET	vp/instr.h	/^        F12_MRET   = 0b001100000010,$/;"	e	enum:Opcode::parts
F12_SRET	core/instr.h	/^        F12_SRET   = 0b000100000010,$/;"	e	enum:Opcode::parts
F12_SRET	vp/instr.h	/^        F12_SRET   = 0b000100000010,$/;"	e	enum:Opcode::parts
F12_URET	core/instr.h	/^                F12_URET   = 0b000000000010,$/;"	e	enum:Opcode::parts
F12_URET	vp/instr.h	/^                F12_URET   = 0b000000000010,$/;"	e	enum:Opcode::parts
F12_WFI	core/instr.h	/^        F12_WFI    = 0b000100000101,$/;"	e	enum:Opcode::parts
F12_WFI	vp/instr.h	/^        F12_WFI    = 0b000100000101,$/;"	e	enum:Opcode::parts
F3_ADD	core/instr.h	/^        F3_ADD    = 0b000,$/;"	e	enum:Opcode::parts
F3_ADD	vp/instr.h	/^        F3_ADD    = 0b000,$/;"	e	enum:Opcode::parts
F3_ADDI	core/instr.h	/^        F3_ADDI   = 0b000,$/;"	e	enum:Opcode::parts
F3_ADDI	vp/instr.h	/^        F3_ADDI   = 0b000,$/;"	e	enum:Opcode::parts
F3_AND	core/instr.h	/^        F3_AND    = 0b111,$/;"	e	enum:Opcode::parts
F3_AND	vp/instr.h	/^        F3_AND    = 0b111,$/;"	e	enum:Opcode::parts
F3_ANDI	core/instr.h	/^        F3_ANDI   = 0b111,$/;"	e	enum:Opcode::parts
F3_ANDI	vp/instr.h	/^        F3_ANDI   = 0b111,$/;"	e	enum:Opcode::parts
F3_BEQ	core/instr.h	/^        F3_BEQ    = 0b000,$/;"	e	enum:Opcode::parts
F3_BEQ	vp/instr.h	/^        F3_BEQ    = 0b000,$/;"	e	enum:Opcode::parts
F3_BGE	core/instr.h	/^        F3_BGE    = 0b101,$/;"	e	enum:Opcode::parts
F3_BGE	vp/instr.h	/^        F3_BGE    = 0b101,$/;"	e	enum:Opcode::parts
F3_BGEU	core/instr.h	/^        F3_BGEU   = 0b111,$/;"	e	enum:Opcode::parts
F3_BGEU	vp/instr.h	/^        F3_BGEU   = 0b111,$/;"	e	enum:Opcode::parts
F3_BLT	core/instr.h	/^        F3_BLT    = 0b100,$/;"	e	enum:Opcode::parts
F3_BLT	vp/instr.h	/^        F3_BLT    = 0b100,$/;"	e	enum:Opcode::parts
F3_BLTU	core/instr.h	/^        F3_BLTU   = 0b110,$/;"	e	enum:Opcode::parts
F3_BLTU	vp/instr.h	/^        F3_BLTU   = 0b110,$/;"	e	enum:Opcode::parts
F3_BNE	core/instr.h	/^        F3_BNE    = 0b001,$/;"	e	enum:Opcode::parts
F3_BNE	vp/instr.h	/^        F3_BNE    = 0b001,$/;"	e	enum:Opcode::parts
F3_CSRRC	core/instr.h	/^        F3_CSRRC   = 0b011,$/;"	e	enum:Opcode::parts
F3_CSRRC	vp/instr.h	/^        F3_CSRRC   = 0b011,$/;"	e	enum:Opcode::parts
F3_CSRRCI	core/instr.h	/^        F3_CSRRCI  = 0b111,$/;"	e	enum:Opcode::parts
F3_CSRRCI	vp/instr.h	/^        F3_CSRRCI  = 0b111,$/;"	e	enum:Opcode::parts
F3_CSRRS	core/instr.h	/^        F3_CSRRS   = 0b010,$/;"	e	enum:Opcode::parts
F3_CSRRS	vp/instr.h	/^        F3_CSRRS   = 0b010,$/;"	e	enum:Opcode::parts
F3_CSRRSI	core/instr.h	/^        F3_CSRRSI  = 0b110,$/;"	e	enum:Opcode::parts
F3_CSRRSI	vp/instr.h	/^        F3_CSRRSI  = 0b110,$/;"	e	enum:Opcode::parts
F3_CSRRW	core/instr.h	/^                F3_CSRRW   = 0b001,$/;"	e	enum:Opcode::parts
F3_CSRRW	vp/instr.h	/^                F3_CSRRW   = 0b001,$/;"	e	enum:Opcode::parts
F3_CSRRWI	core/instr.h	/^        F3_CSRRWI  = 0b101,$/;"	e	enum:Opcode::parts
F3_CSRRWI	vp/instr.h	/^        F3_CSRRWI  = 0b101,$/;"	e	enum:Opcode::parts
F3_DIV	core/instr.h	/^        F3_DIV    = 0b100,$/;"	e	enum:Opcode::parts
F3_DIV	vp/instr.h	/^        F3_DIV    = 0b100,$/;"	e	enum:Opcode::parts
F3_DIVU	core/instr.h	/^        F3_DIVU   = 0b101,$/;"	e	enum:Opcode::parts
F3_DIVU	vp/instr.h	/^        F3_DIVU   = 0b101,$/;"	e	enum:Opcode::parts
F3_JALR	core/instr.h	/^        F3_JALR   = 0b000,$/;"	e	enum:Opcode::parts
F3_JALR	vp/instr.h	/^        F3_JALR   = 0b000,$/;"	e	enum:Opcode::parts
F3_LB	core/instr.h	/^        F3_LB     = 0b000,$/;"	e	enum:Opcode::parts
F3_LB	vp/instr.h	/^        F3_LB     = 0b000,$/;"	e	enum:Opcode::parts
F3_LBU	core/instr.h	/^        F3_LBU    = 0b100,$/;"	e	enum:Opcode::parts
F3_LBU	vp/instr.h	/^        F3_LBU    = 0b100,$/;"	e	enum:Opcode::parts
F3_LH	core/instr.h	/^        F3_LH     = 0b001,$/;"	e	enum:Opcode::parts
F3_LH	vp/instr.h	/^        F3_LH     = 0b001,$/;"	e	enum:Opcode::parts
F3_LHU	core/instr.h	/^        F3_LHU    = 0b101,$/;"	e	enum:Opcode::parts
F3_LHU	vp/instr.h	/^        F3_LHU    = 0b101,$/;"	e	enum:Opcode::parts
F3_LW	core/instr.h	/^        F3_LW     = 0b010,$/;"	e	enum:Opcode::parts
F3_LW	vp/instr.h	/^        F3_LW     = 0b010,$/;"	e	enum:Opcode::parts
F3_MUL	core/instr.h	/^        F3_MUL    = 0b000,$/;"	e	enum:Opcode::parts
F3_MUL	vp/instr.h	/^        F3_MUL    = 0b000,$/;"	e	enum:Opcode::parts
F3_MULH	core/instr.h	/^        F3_MULH   = 0b001,$/;"	e	enum:Opcode::parts
F3_MULH	vp/instr.h	/^        F3_MULH   = 0b001,$/;"	e	enum:Opcode::parts
F3_MULHSU	core/instr.h	/^        F3_MULHSU = 0b010,$/;"	e	enum:Opcode::parts
F3_MULHSU	vp/instr.h	/^        F3_MULHSU = 0b010,$/;"	e	enum:Opcode::parts
F3_MULHU	core/instr.h	/^        F3_MULHU  = 0b011,$/;"	e	enum:Opcode::parts
F3_MULHU	vp/instr.h	/^        F3_MULHU  = 0b011,$/;"	e	enum:Opcode::parts
F3_OR	core/instr.h	/^        F3_OR     = 0b110,$/;"	e	enum:Opcode::parts
F3_OR	vp/instr.h	/^        F3_OR     = 0b110,$/;"	e	enum:Opcode::parts
F3_ORI	core/instr.h	/^        F3_ORI    = 0b110,$/;"	e	enum:Opcode::parts
F3_ORI	vp/instr.h	/^        F3_ORI    = 0b110,$/;"	e	enum:Opcode::parts
F3_REM	core/instr.h	/^        F3_REM    = 0b110,$/;"	e	enum:Opcode::parts
F3_REM	vp/instr.h	/^        F3_REM    = 0b110,$/;"	e	enum:Opcode::parts
F3_REMU	core/instr.h	/^        F3_REMU   = 0b111,$/;"	e	enum:Opcode::parts
F3_REMU	vp/instr.h	/^        F3_REMU   = 0b111,$/;"	e	enum:Opcode::parts
F3_SB	core/instr.h	/^        F3_SB     = 0b000,$/;"	e	enum:Opcode::parts
F3_SB	vp/instr.h	/^        F3_SB     = 0b000,$/;"	e	enum:Opcode::parts
F3_SH	core/instr.h	/^        F3_SH     = 0b001,$/;"	e	enum:Opcode::parts
F3_SH	vp/instr.h	/^        F3_SH     = 0b001,$/;"	e	enum:Opcode::parts
F3_SLL	core/instr.h	/^        F3_SLL    = 0b001,$/;"	e	enum:Opcode::parts
F3_SLL	vp/instr.h	/^        F3_SLL    = 0b001,$/;"	e	enum:Opcode::parts
F3_SLLI	core/instr.h	/^        F3_SLLI   = 0b001,$/;"	e	enum:Opcode::parts
F3_SLLI	vp/instr.h	/^        F3_SLLI   = 0b001,$/;"	e	enum:Opcode::parts
F3_SLT	core/instr.h	/^        F3_SLT    = 0b010,$/;"	e	enum:Opcode::parts
F3_SLT	vp/instr.h	/^        F3_SLT    = 0b010,$/;"	e	enum:Opcode::parts
F3_SLTI	core/instr.h	/^        F3_SLTI   = 0b010,$/;"	e	enum:Opcode::parts
F3_SLTI	vp/instr.h	/^        F3_SLTI   = 0b010,$/;"	e	enum:Opcode::parts
F3_SLTIU	core/instr.h	/^        F3_SLTIU  = 0b011,$/;"	e	enum:Opcode::parts
F3_SLTIU	vp/instr.h	/^        F3_SLTIU  = 0b011,$/;"	e	enum:Opcode::parts
F3_SLTU	core/instr.h	/^        F3_SLTU   = 0b011,$/;"	e	enum:Opcode::parts
F3_SLTU	vp/instr.h	/^        F3_SLTU   = 0b011,$/;"	e	enum:Opcode::parts
F3_SRA	core/instr.h	/^        F3_SRA    = 0b101,$/;"	e	enum:Opcode::parts
F3_SRA	vp/instr.h	/^        F3_SRA    = 0b101,$/;"	e	enum:Opcode::parts
F3_SRL	core/instr.h	/^        F3_SRL    = 0b101,$/;"	e	enum:Opcode::parts
F3_SRL	vp/instr.h	/^        F3_SRL    = 0b101,$/;"	e	enum:Opcode::parts
F3_SRLI	core/instr.h	/^        F3_SRLI   = 0b101,$/;"	e	enum:Opcode::parts
F3_SRLI	vp/instr.h	/^        F3_SRLI   = 0b101,$/;"	e	enum:Opcode::parts
F3_SUB	core/instr.h	/^        F3_SUB    = 0b000,$/;"	e	enum:Opcode::parts
F3_SUB	vp/instr.h	/^        F3_SUB    = 0b000,$/;"	e	enum:Opcode::parts
F3_SW	core/instr.h	/^        F3_SW     = 0b010,$/;"	e	enum:Opcode::parts
F3_SW	vp/instr.h	/^        F3_SW     = 0b010,$/;"	e	enum:Opcode::parts
F3_SYS	core/instr.h	/^        F3_SYS     = 0b000,$/;"	e	enum:Opcode::parts
F3_SYS	vp/instr.h	/^        F3_SYS     = 0b000,$/;"	e	enum:Opcode::parts
F3_XOR	core/instr.h	/^        F3_XOR    = 0b100,$/;"	e	enum:Opcode::parts
F3_XOR	vp/instr.h	/^        F3_XOR    = 0b100,$/;"	e	enum:Opcode::parts
F3_XORI	core/instr.h	/^        F3_XORI   = 0b100,$/;"	e	enum:Opcode::parts
F3_XORI	vp/instr.h	/^        F3_XORI   = 0b100,$/;"	e	enum:Opcode::parts
F5_AMOADD_W	core/instr.h	/^        F5_AMOADD_W   = 0b00000,$/;"	e	enum:Opcode::parts
F5_AMOADD_W	vp/instr.h	/^        F5_AMOADD_W   = 0b00000,$/;"	e	enum:Opcode::parts
F5_AMOAND_W	core/instr.h	/^        F5_AMOAND_W   = 0b01100,$/;"	e	enum:Opcode::parts
F5_AMOAND_W	vp/instr.h	/^        F5_AMOAND_W   = 0b01100,$/;"	e	enum:Opcode::parts
F5_AMOMAXU_W	core/instr.h	/^        F5_AMOMAXU_W  = 0b11100,$/;"	e	enum:Opcode::parts
F5_AMOMAXU_W	vp/instr.h	/^        F5_AMOMAXU_W  = 0b11100,$/;"	e	enum:Opcode::parts
F5_AMOMAX_W	core/instr.h	/^        F5_AMOMAX_W   = 0b10100,$/;"	e	enum:Opcode::parts
F5_AMOMAX_W	vp/instr.h	/^        F5_AMOMAX_W   = 0b10100,$/;"	e	enum:Opcode::parts
F5_AMOMINU_W	core/instr.h	/^        F5_AMOMINU_W  = 0b11000,$/;"	e	enum:Opcode::parts
F5_AMOMINU_W	vp/instr.h	/^        F5_AMOMINU_W  = 0b11000,$/;"	e	enum:Opcode::parts
F5_AMOMIN_W	core/instr.h	/^        F5_AMOMIN_W   = 0b10000,$/;"	e	enum:Opcode::parts
F5_AMOMIN_W	vp/instr.h	/^        F5_AMOMIN_W   = 0b10000,$/;"	e	enum:Opcode::parts
F5_AMOOR_W	core/instr.h	/^        F5_AMOOR_W    = 0b01000,$/;"	e	enum:Opcode::parts
F5_AMOOR_W	vp/instr.h	/^        F5_AMOOR_W    = 0b01000,$/;"	e	enum:Opcode::parts
F5_AMOSWAP_W	core/instr.h	/^        F5_AMOSWAP_W  = 0b00001,$/;"	e	enum:Opcode::parts
F5_AMOSWAP_W	vp/instr.h	/^        F5_AMOSWAP_W  = 0b00001,$/;"	e	enum:Opcode::parts
F5_AMOXOR_W	core/instr.h	/^        F5_AMOXOR_W   = 0b00100,$/;"	e	enum:Opcode::parts
F5_AMOXOR_W	vp/instr.h	/^        F5_AMOXOR_W   = 0b00100,$/;"	e	enum:Opcode::parts
F5_LR_W	core/instr.h	/^        F5_LR_W       = 0b00010,$/;"	e	enum:Opcode::parts
F5_LR_W	vp/instr.h	/^        F5_LR_W       = 0b00010,$/;"	e	enum:Opcode::parts
F5_SC_W	core/instr.h	/^        F5_SC_W       = 0b00011,$/;"	e	enum:Opcode::parts
F5_SC_W	vp/instr.h	/^        F5_SC_W       = 0b00011,$/;"	e	enum:Opcode::parts
F7_ADD	core/instr.h	/^        F7_ADD    = 0b0000000,$/;"	e	enum:Opcode::parts
F7_ADD	vp/instr.h	/^        F7_ADD    = 0b0000000,$/;"	e	enum:Opcode::parts
F7_MUL	core/instr.h	/^        F7_MUL    = 0b0000001,$/;"	e	enum:Opcode::parts
F7_MUL	vp/instr.h	/^        F7_MUL    = 0b0000001,$/;"	e	enum:Opcode::parts
F7_SFENCE_VMA	core/instr.h	/^        F7_SFENCE_VMA = 0b0001001,$/;"	e	enum:Opcode::parts
F7_SFENCE_VMA	vp/instr.h	/^        F7_SFENCE_VMA = 0b0001001,$/;"	e	enum:Opcode::parts
F7_SRAI	core/instr.h	/^        F7_SRAI   = 0b0100000,$/;"	e	enum:Opcode::parts
F7_SRAI	vp/instr.h	/^        F7_SRAI   = 0b0100000,$/;"	e	enum:Opcode::parts
F7_SRLI	core/instr.h	/^        F7_SRLI   = 0b0000000,$/;"	e	enum:Opcode::parts
F7_SRLI	vp/instr.h	/^        F7_SRLI   = 0b0000000,$/;"	e	enum:Opcode::parts
F7_SUB	core/instr.h	/^        F7_SUB    = 0b0100000,$/;"	e	enum:Opcode::parts
F7_SUB	vp/instr.h	/^        F7_SUB    = 0b0100000,$/;"	e	enum:Opcode::parts
FENCE	core/instr.h	/^    FENCE,$/;"	e	enum:Opcode::mapping
FENCE	vp/instr.h	/^        FENCE,$/;"	e	enum:Opcode::mapping
FILTER_REG_ADDR	vp/sensor.h	/^        FILTER_REG_ADDR = 0x84,$/;"	e	enum:SimpleSensor::__anon14e16b2a0103
FILTER_REG_ADDR	vp/sensor2.h	/^        FILTER_REG_ADDR = 0x84,$/;"	e	enum:SimpleSensor2::__anonb10eda5c0103
FLASH_ADDR_REG	vp/flash.h	/^    static const unsigned int FLASH_ADDR_REG = 0;$/;"	m	struct:Flashcontroller	typeref:typename:const unsigned int
FLASH_SIZE_REG	vp/flash.h	/^    static const unsigned int FLASH_SIZE_REG = sizeof(uint64_t);$/;"	m	struct:Flashcontroller	typeref:typename:const unsigned int
FRAME_SIZE	vp/ethernet.h	/^	static const uint16_t FRAME_SIZE = MTU_SIZE + 14;$/;"	m	struct:EthernetDevice	typeref:typename:const uint16_t
FlagsForFile	.ycm_extra_conf.py	/^def FlagsForFile( filename, **kwargs ):$/;"	f
Flashcontroller	vp/flash.h	/^    Flashcontroller(sc_module_name, string& filepath)$/;"	f	struct:Flashcontroller
Flashcontroller	vp/flash.h	/^struct Flashcontroller : public sc_core::sc_module {$/;"	s
GENERATE_LOADER_SLC	RFU/contextreg_if.h	/^#define GENERATE_LOADER_SLC(/;"	d
GENERATE_PE_SLC	RFU/contextreg_if.h	/^#define GENERATE_PE_SLC(/;"	d
GPIO	vp/sifive/gpio.h	/^    GPIO(sc_core::sc_module_name) {$/;"	f	struct:GPIO
GPIO	vp/sifive/gpio.h	/^struct GPIO : public sc_core::sc_module {$/;"	s
GetCompilationInfoForFile	.ycm_extra_conf.py	/^def GetCompilationInfoForFile( filename ):$/;"	f
HFROSCCFG_REG_ADDR	vp/sifive/prci.h	/^        HFROSCCFG_REG_ADDR = 0x0,$/;"	e	enum:PRCI::__anon4becd6f30103
HFXOSCCFG_REG_ADDR	vp/sifive/prci.h	/^        HFXOSCCFG_REG_ADDR = 0x4,$/;"	e	enum:PRCI::__anon4becd6f30103
HitBreakpoint	core/iss.h	/^    HitBreakpoint,$/;"	e	enum:CoreExecStatus
HitBreakpoint	vp/iss.h	/^    HitBreakpoint,$/;"	e	enum:CoreExecStatus
IE_REG_ADDR	vp/sifive/uart.h	/^        IE_REG_ADDR = 0x10,$/;"	e	enum:UART::__anon566b6a010103
IF_NAME	vp/ethernet.cpp	/^static const char IF_NAME[] = "tap0";$/;"	v	typeref:typename:const char[]	file:
INCDIR	build/Makefile	/^INCDIR = -I..\/core$/;"	m
INCLUDE_CSR_MIXIN	core/csr.h	/^#define INCLUDE_CSR_MIXIN	/;"	d
INCLUDE_CSR_MIXIN	vp/csr.h	/^#define INCLUDE_CSR_MIXIN	/;"	d
INSTR_H	core/instr.h	/^#define INSTR_H$/;"	d
IOF_EN_REG_ADDR	vp/sifive/gpio.h	/^        IOF_EN_REG_ADDR  = 0x038,$/;"	e	enum:GPIO::__anon36cd9c140103
IOF_SEL_REG_ADDR	vp/sifive/gpio.h	/^        IOF_SEL_REG_ADDR = 0x03C$/;"	e	enum:GPIO::__anon36cd9c140103
IP_REG_ADDR	vp/sifive/uart.h	/^        IP_REG_ADDR = 0x14,$/;"	e	enum:UART::__anon566b6a010103
IRQ_IF_H	core/irq_if.h	/^#define IRQ_IF_H$/;"	d
ISS	core/iss.h	/^    ISS()$/;"	f	struct:ISS
ISS	core/iss.h	/^struct ISS : public sc_core::sc_module,$/;"	s
ISS	vp/iss.h	/^    ISS()$/;"	f	struct:ISS
ISS	vp/iss.h	/^struct ISS : public sc_core::sc_module,$/;"	s
ISS_H	core/iss.h	/^#define ISS_H$/;"	d
I_imm	core/instr.h	/^    inline int32_t I_imm() {$/;"	f	struct:Instruction	typeref:typename:int32_t
I_imm	vp/instr.h	/^    inline int32_t I_imm() {$/;"	f	struct:Instruction	typeref:typename:int32_t
InstrMemoryProxy	vp/iss.h	/^    InstrMemoryProxy(direct_memory_interface &dmi, tlm_utils::tlm_quantumkeeper &keeper)$/;"	f	struct:InstrMemoryProxy
InstrMemoryProxy	vp/iss.h	/^struct InstrMemoryProxy : public instr_memory_interface {$/;"	s
Instruction	core/instr.h	/^    Instruction(uint32_t instr)$/;"	f	struct:Instruction
Instruction	core/instr.h	/^struct Instruction $/;"	s
Instruction	vp/instr.h	/^    Instruction(uint32_t instr)$/;"	f	struct:Instruction
Instruction	vp/instr.h	/^struct Instruction {$/;"	s
InstructionFactory	core/instr.cpp	/^struct InstructionFactory $/;"	s	file:
InstructionFactory	vp/instr.cpp	/^struct InstructionFactory {$/;"	s	file:
Internal	vp/csr.h	/^    enum Internal {$/;"	g	struct:csr_base
IsHeaderFile	.ycm_extra_conf.py	/^def IsHeaderFile( filename ):$/;"	f
JAL	core/instr.cpp	/^    static T JAL(unsigned rd, int J_imm) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
JAL	core/instr.h	/^    JAL,$/;"	e	enum:Opcode::mapping
JAL	vp/instr.cpp	/^    static T JAL(unsigned rd, int J_imm) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
JAL	vp/instr.h	/^        JAL,$/;"	e	enum:Opcode::mapping
JALR	core/instr.cpp	/^    static T JALR(unsigned rd, unsigned rs1, int I_imm) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
JALR	core/instr.h	/^    JALR,$/;"	e	enum:Opcode::mapping
JALR	vp/instr.cpp	/^    static T JALR(unsigned rd, unsigned rs1, int I_imm) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
JALR	vp/instr.h	/^        JALR,$/;"	e	enum:Opcode::mapping
J_imm	core/instr.h	/^    inline int32_t J_imm() {$/;"	f	struct:Instruction	typeref:typename:int32_t
J_imm	vp/instr.h	/^    inline int32_t J_imm() {$/;"	f	struct:Instruction	typeref:typename:int32_t
L0	core/csr.h	/^            unsigned L0: 1;             \/\/ WARL$/;"	m	struct:csr_pmpcfg::__anon50a6ad1b120a::__anon50a6ad1b1308	typeref:typename:unsigned:1
L0	vp/csr.h	/^            unsigned L0: 1;             \/\/ WARL$/;"	m	struct:csr_pmpcfg::__anon8468e878120a::__anon8468e8781308	typeref:typename:unsigned:1
LB	core/instr.h	/^    LB,$/;"	e	enum:Opcode::mapping
LB	vp/instr.h	/^        LB,$/;"	e	enum:Opcode::mapping
LBU	core/instr.h	/^    LBU,$/;"	e	enum:Opcode::mapping
LBU	vp/instr.h	/^        LBU,$/;"	e	enum:Opcode::mapping
LEN_ADDR	core/dma.h	/^        LEN_ADDR = 8,$/;"	e	enum:SimpleDMA::__anon50b533050203
LEN_ADDR	vp/dma.h	/^        LEN_ADDR = 8,$/;"	e	enum:SimpleDMA::__anon84776e620203
LFROSCCFG_REG_ADDR	vp/sifive/aon.h	/^        LFROSCCFG_REG_ADDR = 0x70,$/;"	e	enum:AON::__anon2805c3e30103
LH	core/instr.h	/^    LH,$/;"	e	enum:Opcode::mapping
LH	vp/instr.h	/^        LH,$/;"	e	enum:Opcode::mapping
LHU	core/instr.h	/^    LHU,$/;"	e	enum:Opcode::mapping
LHU	vp/instr.h	/^        LHU,$/;"	e	enum:Opcode::mapping
LOAD	PEs/PE.h	/^			LOAD	= 0,$/;"	e	enum:PE::op_type
LR_W	core/instr.h	/^    LR_W,$/;"	e	enum:Opcode::mapping
LR_W	vp/instr.h	/^        LR_W,$/;"	e	enum:Opcode::mapping
LUI	core/instr.cpp	/^    static T LUI(unsigned rd, int U_imm) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
LUI	core/instr.h	/^    LUI = 1,$/;"	e	enum:Opcode::mapping
LUI	vp/instr.cpp	/^    static T LUI(unsigned rd, int U_imm) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
LUI	vp/instr.h	/^        LUI = 1,$/;"	e	enum:Opcode::mapping
LW	core/instr.cpp	/^    static T LW(unsigned rd, unsigned rs1, int I_imm) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
LW	core/instr.h	/^    LW,$/;"	e	enum:Opcode::mapping
LW	vp/instr.cpp	/^    static T LW(unsigned rd, unsigned rs1, int I_imm) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
LW	vp/instr.h	/^        LW,$/;"	e	enum:Opcode::mapping
LocalRouter	vp/tlm_map.h	/^    struct LocalRouter {$/;"	s	namespace:vp::map
MACHINE_BITS	vp/csr.h	/^        MACHINE_BITS = 0x03,		\/\/ 0b11$/;"	e	enum:csr_base::Internal
MAC_HIGH_REG_ADDR	vp/ethernet.h	/^	static const uint16_t MAC_HIGH_REG_ADDR     = SEND_SIZE_REG_ADDR    + sizeof(uint32_t);$/;"	m	struct:EthernetDevice	typeref:typename:const uint16_t
MAC_LOW_REG_ADDR	vp/ethernet.h	/^	static const uint16_t MAC_LOW_REG_ADDR      = MAC_HIGH_REG_ADDR     + sizeof(uint32_t);$/;"	m	struct:EthernetDevice	typeref:typename:const uint16_t
MEMORY_H	core/memory.h	/^#define MEMORY_H$/;"	d
MEM_IF	core/mem_if.h	/^#define MEM_IF$/;"	d
MODE_BITS	vp/csr.h	/^        MODE_BITS = 0x300, 			\/\/ addr[9:8]$/;"	e	enum:csr_base::Internal
MRET	core/instr.h	/^    MRET,$/;"	e	enum:Opcode::mapping
MRET	vp/instr.h	/^        MRET,$/;"	e	enum:Opcode::mapping
MTU_SIZE	vp/ethernet.h	/^    static const uint16_t MTU_SIZE   = 1500;$/;"	m	struct:EthernetDevice	typeref:typename:const uint16_t
MUL	PEs/PE.h	/^			MUL,$/;"	e	enum:PE::op_type
MUL	core/instr.h	/^    MUL,$/;"	e	enum:Opcode::mapping
MUL	vp/instr.h	/^        MUL,$/;"	e	enum:Opcode::mapping
MULH	core/instr.h	/^    MULH,$/;"	e	enum:Opcode::mapping
MULH	vp/instr.h	/^        MULH,$/;"	e	enum:Opcode::mapping
MULHSU	core/instr.h	/^    MULHSU,$/;"	e	enum:Opcode::mapping
MULHSU	vp/instr.h	/^        MULHSU,$/;"	e	enum:Opcode::mapping
MULHU	core/instr.h	/^    MULHU,$/;"	e	enum:Opcode::mapping
MULHU	vp/instr.h	/^        MULHU,$/;"	e	enum:Opcode::mapping
Machine	vp/csr.h	/^        Machine = 3,$/;"	e	enum:csr_base::PrivilegeLevel
Machine	vp/csr.h	/^        Machine = 4,$/;"	e	enum:csr_base::AccessMode
Memory	core/memory.cpp	/^Memory::Memory$/;"	f	class:Memory
Memory	core/memory.h	/^struct Memory:public sc_core::sc_module$/;"	s
Mode	core/csr.h	/^    enum Mode {$/;"	g	struct:csr_mtvec
Mode	vp/csr.h	/^    enum Mode {$/;"	g	struct:csr_mtvec
Monitor_busy_thread	RFU/ReconfigController.cpp	/^void ReconfigController::Monitor_busy_thread()$/;"	f	class:ReconfigController	typeref:typename:void
NUMBER_OF_INSTRUCTIONS	core/instr.h	/^    NUMBER_OF_INSTRUCTIONS$/;"	e	enum:Opcode::mapping
NUMBER_OF_INSTRUCTIONS	vp/instr.h	/^        NUMBER_OF_INSTRUCTIONS$/;"	e	enum:Opcode::mapping
NUM_REGS	core/regfile.h	/^        NUM_REGS = 32$/;"	e	enum:RegFile::__anon8bfe09b10103
NUM_REGS	vp/iss.h	/^        NUM_REGS = 32$/;"	e	enum:RegFile::__anon84d57fbf0103
OBJs	build/Makefile	/^OBJs = $(notdir $(SRCs:%.cpp=%.o ))$/;"	m
OP_ADD	core/instr.h	/^        OP_ADD    = 0b0110011,$/;"	e	enum:Opcode::parts
OP_ADD	vp/instr.h	/^        OP_ADD    = 0b0110011,$/;"	e	enum:Opcode::parts
OP_ADDI	core/instr.h	/^        OP_ADDI   = 0b0010011,$/;"	e	enum:Opcode::parts
OP_ADDI	vp/instr.h	/^        OP_ADDI   = 0b0010011,$/;"	e	enum:Opcode::parts
OP_ADDR	core/dma.h	/^        OP_ADDR  = 12,$/;"	e	enum:SimpleDMA::__anon50b533050203
OP_ADDR	vp/dma.h	/^        OP_ADDR  = 12,$/;"	e	enum:SimpleDMA::__anon84776e620203
OP_AMO	core/instr.h	/^        OP_AMO        = 0b0101111,$/;"	e	enum:Opcode::parts
OP_AMO	vp/instr.h	/^        OP_AMO        = 0b0101111,$/;"	e	enum:Opcode::parts
OP_AUIPC	core/instr.h	/^        OP_AUIPC  = 0b0010111,$/;"	e	enum:Opcode::parts
OP_AUIPC	vp/instr.h	/^        OP_AUIPC  = 0b0010111,$/;"	e	enum:Opcode::parts
OP_BEQ	core/instr.h	/^        OP_BEQ    = 0b1100011,$/;"	e	enum:Opcode::parts
OP_BEQ	vp/instr.h	/^        OP_BEQ    = 0b1100011,$/;"	e	enum:Opcode::parts
OP_ECALL	core/instr.h	/^        OP_ECALL   = 0b1110011,$/;"	e	enum:Opcode::parts
OP_ECALL	vp/instr.h	/^        OP_ECALL   = 0b1110011,$/;"	e	enum:Opcode::parts
OP_FENCE	core/instr.h	/^        OP_FENCE   = 0b0001111,$/;"	e	enum:Opcode::parts
OP_FENCE	vp/instr.h	/^        OP_FENCE   = 0b0001111,$/;"	e	enum:Opcode::parts
OP_JAL	core/instr.h	/^        OP_JAL    = 0b1101111,$/;"	e	enum:Opcode::parts
OP_JAL	vp/instr.h	/^        OP_JAL    = 0b1101111,$/;"	e	enum:Opcode::parts
OP_JALR	core/instr.h	/^        OP_JALR   = 0b1100111,$/;"	e	enum:Opcode::parts
OP_JALR	vp/instr.h	/^        OP_JALR   = 0b1100111,$/;"	e	enum:Opcode::parts
OP_LB	core/instr.h	/^        OP_LB     = 0b0000011,$/;"	e	enum:Opcode::parts
OP_LB	vp/instr.h	/^        OP_LB     = 0b0000011,$/;"	e	enum:Opcode::parts
OP_LUI	core/instr.h	/^        OP_LUI    = 0b0110111,$/;"	e	enum:Opcode::parts
OP_LUI	vp/instr.h	/^        OP_LUI    = 0b0110111,$/;"	e	enum:Opcode::parts
OP_MEMCHR	core/dma.h	/^        OP_MEMCHR = 4,$/;"	e	enum:SimpleDMA::__anon50b533050103
OP_MEMCHR	vp/dma.h	/^        OP_MEMCHR = 4,$/;"	e	enum:SimpleDMA::__anon84776e620103
OP_MEMCMP	core/dma.h	/^        OP_MEMCMP = 3,$/;"	e	enum:SimpleDMA::__anon50b533050103
OP_MEMCMP	vp/dma.h	/^        OP_MEMCMP = 3,$/;"	e	enum:SimpleDMA::__anon84776e620103
OP_MEMCPY	core/dma.h	/^        OP_MEMCPY = 1,$/;"	e	enum:SimpleDMA::__anon50b533050103
OP_MEMCPY	vp/dma.h	/^        OP_MEMCPY = 1,$/;"	e	enum:SimpleDMA::__anon84776e620103
OP_MEMMOVE	core/dma.h	/^        OP_MEMMOVE = 5,$/;"	e	enum:SimpleDMA::__anon50b533050103
OP_MEMMOVE	vp/dma.h	/^        OP_MEMMOVE = 5,$/;"	e	enum:SimpleDMA::__anon84776e620103
OP_MEMSET	core/dma.h	/^        OP_MEMSET = 2,$/;"	e	enum:SimpleDMA::__anon50b533050103
OP_MEMSET	vp/dma.h	/^        OP_MEMSET = 2,$/;"	e	enum:SimpleDMA::__anon84776e620103
OP_NOP	core/dma.h	/^        OP_NOP    = 0,$/;"	e	enum:SimpleDMA::__anon50b533050103
OP_NOP	vp/dma.h	/^        OP_NOP    = 0,$/;"	e	enum:SimpleDMA::__anon84776e620103
OP_SB	core/instr.h	/^        OP_SB     = 0b0100011,$/;"	e	enum:Opcode::parts
OP_SB	vp/instr.h	/^        OP_SB     = 0b0100011,$/;"	e	enum:Opcode::parts
OR	core/instr.cpp	/^    static T OR(unsigned rd, unsigned rs1, unsigned rs2) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
OR	core/instr.h	/^    OR,$/;"	e	enum:Opcode::mapping
OR	vp/instr.cpp	/^    static T OR(unsigned rd, unsigned rs1, unsigned rs2) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
OR	vp/instr.h	/^        OR,$/;"	e	enum:Opcode::mapping
ORI	core/instr.h	/^    ORI,$/;"	e	enum:Opcode::mapping
ORI	vp/instr.h	/^        ORI,$/;"	e	enum:Opcode::mapping
Opcode	core/instr.cpp	/^   enum Opcode $/;"	g	namespace:Compressed	file:
Opcode	core/instr.h	/^namespace Opcode {$/;"	n
Opcode	vp/instr.cpp	/^    enum Opcode {$/;"	g	namespace:Compressed	file:
Opcode	vp/instr.h	/^namespace Opcode {$/;"	n
Options	core/main.cpp	/^struct Options {$/;"	s	file:
Options	vp/main.cpp	/^struct Options {$/;"	s	file:
Options	vp/sifive/sifive_main.cpp	/^struct Options {$/;"	s	file:
PE	PEs/PE.cpp	/^PE::PE$/;"	f	class:PE
PE	PEs/PE.h	/^class PE: public sc_module$/;"	c
PLIC	vp/plic.h	/^    PLIC(sc_core::sc_module_name) {$/;"	f	struct:PLIC
PLIC	vp/plic.h	/^struct PLIC : public sc_core::sc_module, public interrupt_gateway {$/;"	s
PLLCFG_REG_ADDR	vp/sifive/prci.h	/^        PLLCFG_REG_ADDR = 0x8,$/;"	e	enum:PRCI::__anon4becd6f30103
PLLOUTDIV_REG_ADDR	vp/sifive/prci.h	/^        PLLOUTDIV_REG_ADDR = 0xC,$/;"	e	enum:PRCI::__anon4becd6f30103
PRCI	vp/sifive/prci.h	/^    PRCI(sc_core::sc_module_name) {$/;"	f	struct:PRCI
PRCI	vp/sifive/prci.h	/^struct PRCI : public sc_core::sc_module {$/;"	s
PT_DYNAMIC	core/elf_loader.h	/^    PT_DYNAMIC  = 2,$/;"	e	enum:Elf32_PhdrType
PT_DYNAMIC	vp/elf_loader.h	/^    PT_DYNAMIC  = 2,$/;"	e	enum:Elf32_PhdrType
PT_INTERP	core/elf_loader.h	/^    PT_INTERP   = 3,$/;"	e	enum:Elf32_PhdrType
PT_INTERP	vp/elf_loader.h	/^    PT_INTERP   = 3,$/;"	e	enum:Elf32_PhdrType
PT_LOAD	core/elf_loader.h	/^    PT_LOAD     = 1,$/;"	e	enum:Elf32_PhdrType
PT_LOAD	vp/elf_loader.h	/^    PT_LOAD     = 1,$/;"	e	enum:Elf32_PhdrType
PT_NOTE	core/elf_loader.h	/^    PT_NOTE     = 4,$/;"	e	enum:Elf32_PhdrType
PT_NOTE	vp/elf_loader.h	/^    PT_NOTE     = 4,$/;"	e	enum:Elf32_PhdrType
PT_NULL	core/elf_loader.h	/^    PT_NULL     = 0,$/;"	e	enum:Elf32_PhdrType
PT_NULL	vp/elf_loader.h	/^    PT_NULL     = 0,$/;"	e	enum:Elf32_PhdrType
PT_PHDR	core/elf_loader.h	/^    PT_PHDR     = 6$/;"	e	enum:Elf32_PhdrType
PT_PHDR	vp/elf_loader.h	/^    PT_PHDR     = 6$/;"	e	enum:Elf32_PhdrType
PT_SHLIB	core/elf_loader.h	/^    PT_SHLIB    = 5,$/;"	e	enum:Elf32_PhdrType
PT_SHLIB	vp/elf_loader.h	/^    PT_SHLIB    = 5,$/;"	e	enum:Elf32_PhdrType
PendingTransactions	core/bus.h	/^	typedef std::map<tlm::tlm_generic_payload *, ConnectionInfo> PendingTransactions;$/;"	t	struct:Bus	typeref:typename:std::map<tlm::tlm_generic_payload *,ConnectionInfo>
PendingTransactionsConstIterator	core/bus.h	/^	typedef typename PendingTransactions::const_iterator PendingTransactionsConstIterator;$/;"	t	struct:Bus	typeref:typename:PendingTransactions::const_iterator
PendingTransactionsIterator	core/bus.h	/^	typedef typename PendingTransactions::iterator PendingTransactionsIterator;$/;"	t	struct:Bus	typeref:typename:PendingTransactions::iterator
PortMapping	core/bus.h	/^	PortMapping(uint64_t start, uint64_t end)	$/;"	f	struct:PortMapping
PortMapping	core/bus.h	/^struct PortMapping$/;"	s
PortMapping	vp/bus.h	/^    PortMapping(uint64_t start, uint64_t end)$/;"	f	struct:PortMapping
PortMapping	vp/bus.h	/^struct PortMapping {$/;"	s
PrivilegeLevel	vp/csr.h	/^    enum class PrivilegeLevel {$/;"	g	struct:csr_base
R0	core/csr.h	/^            unsigned R0: 1;             \/\/ WARL$/;"	m	struct:csr_pmpcfg::__anon50a6ad1b120a::__anon50a6ad1b1308	typeref:typename:unsigned:1
R0	vp/csr.h	/^            unsigned R0: 1;             \/\/ WARL$/;"	m	struct:csr_pmpcfg::__anon8468e878120a::__anon8468e8781308	typeref:typename:unsigned:1
READONLY_BITS	vp/csr.h	/^        READONLY_BITS = 0x03,		\/\/ 0b11$/;"	e	enum:csr_base::Internal
RECEIVE_DST_REG_ADDR	vp/ethernet.h	/^	static const uint16_t RECEIVE_DST_REG_ADDR  = RECEIVE_SIZE_REG_ADDR + sizeof(uint32_t);$/;"	m	struct:EthernetDevice	typeref:typename:const uint16_t
RECEIVE_SIZE_REG_ADDR	vp/ethernet.h	/^	static const uint16_t RECEIVE_SIZE_REG_ADDR = STATUS_REG_ADDR       + sizeof(uint32_t);$/;"	m	struct:EthernetDevice	typeref:typename:const uint16_t
RECONFIGCONTROLLER_H	RFU/ReconfigController.h	/^#define RECONFIGCONTROLLER_H$/;"	d
RECV_OPERATION	vp/ethernet.h	/^		RECV_OPERATION = 1,$/;"	e	enum:EthernetDevice::__anonb53ab72f0103
REGFILE_H	core/regfile.h	/^#define REGFILE_H$/;"	d
REG_MIN	core/iss.h	/^        REG_MIN = INT32_MIN,$/;"	e	enum:ISS::__anon511344620103
REG_MIN	vp/iss.h	/^        REG_MIN = INT32_MIN,$/;"	e	enum:ISS::__anon84d57fbf0203
REM	core/instr.h	/^    REM,$/;"	e	enum:Opcode::mapping
REM	vp/instr.h	/^        REM,$/;"	e	enum:Opcode::mapping
REMU	core/instr.h	/^    REMU,$/;"	e	enum:Opcode::mapping
REMU	vp/instr.h	/^        REMU,$/;"	e	enum:Opcode::mapping
RFA	RFU/RFA.cpp	/^RFA::RFA$/;"	f	class:RFA
RFA	RFU/RFA.h	/^class RFA : public sc_core::sc_module$/;"	c
RFA_H	RFU/RFA.h	/^#define RFA_H$/;"	d
RISCV_ISA_BASIC_TIMER_H	vp/basic_timer.h	/^#define RISCV_ISA_BASIC_TIMER_H$/;"	d
RISCV_ISA_BUS_H	vp/bus.h	/^#define RISCV_ISA_BUS_H$/;"	d
RISCV_ISA_CLINT_H	vp/clint.h	/^#define RISCV_ISA_CLINT_H$/;"	d
RISCV_ISA_CSR_INFO_H	vp/csr.h	/^#define RISCV_ISA_CSR_INFO_H$/;"	d
RISCV_ISA_DMA_H	core/dma.h	/^#define RISCV_ISA_DMA_H$/;"	d
RISCV_ISA_DMA_H	vp/dma.h	/^#define RISCV_ISA_DMA_H$/;"	d
RISCV_ISA_ELF_LOADER_H	core/elf_loader.h	/^#define RISCV_ISA_ELF_LOADER_H$/;"	d
RISCV_ISA_ELF_LOADER_H	vp/elf_loader.h	/^#define RISCV_ISA_ELF_LOADER_H$/;"	d
RISCV_ISA_GDB_STUB_H	vp/gdb_stub.h	/^#define RISCV_ISA_GDB_STUB_H$/;"	d
RISCV_ISA_INSTR_H	vp/instr.h	/^#define RISCV_ISA_INSTR_H$/;"	d
RISCV_ISA_IRQCTL_H	vp/plic.h	/^#define RISCV_ISA_IRQCTL_H$/;"	d
RISCV_ISA_IRQ_IF_H	vp/irq_if.h	/^#define RISCV_ISA_IRQ_IF_H$/;"	d
RISCV_ISA_ISS_H	vp/iss.h	/^#define RISCV_ISA_ISS_H$/;"	d
RISCV_ISA_MEMORY_H	vp/memory.h	/^#define RISCV_ISA_MEMORY_H$/;"	d
RISCV_ISA_RANDOM_SOURCE_H	vp/random_source.h	/^#define RISCV_ISA_RANDOM_SOURCE_H$/;"	d
RISCV_ISA_SENSOR2_H	vp/sensor2.h	/^#define RISCV_ISA_SENSOR2_H$/;"	d
RISCV_ISA_SENSOR_H	vp/sensor.h	/^#define RISCV_ISA_SENSOR_H$/;"	d
RISCV_ISA_SYSCALL_H	vp/syscall.h	/^#define RISCV_ISA_SYSCALL_H$/;"	d
RISCV_ISA_TERMINAL_H	vp/terminal.h	/^#define RISCV_ISA_TERMINAL_H$/;"	d
RISCV_TLM_MAP_H	vp/tlm_map.h	/^#define RISCV_TLM_MAP_H$/;"	d
RISCV_VP_AON_H	vp/sifive/aon.h	/^#define RISCV_VP_AON_H$/;"	d
RISCV_VP_ETHERNET_H	vp/ethernet.h	/^#define RISCV_VP_ETHERNET_H$/;"	d
RISCV_VP_GPIO_H	vp/sifive/gpio.h	/^#define RISCV_VP_GPIO_H$/;"	d
RISCV_VP_PRCI_H	vp/sifive/prci.h	/^#define RISCV_VP_PRCI_H$/;"	d
RISCV_VP_SPI_H	vp/sifive/spi.h	/^#define RISCV_VP_SPI_H$/;"	d
RISCV_VP_UART_H	vp/sifive/uart.h	/^#define RISCV_VP_UART_H$/;"	d
RW_BITS	vp/csr.h	/^        RW_BITS = 0xc00,   			\/\/ addr[11:10]$/;"	e	enum:csr_base::Internal
RXCTRL_REG_ADDR	vp/sifive/uart.h	/^        RXCTRL_REG_ADDR = 0xC,$/;"	e	enum:UART::__anon566b6a010103
RXDATA_REG_ADDR	vp/sifive/uart.h	/^        RXDATA_REG_ADDR = 0x4,$/;"	e	enum:UART::__anon566b6a010103
RandomSource	vp/random_source.h	/^    RandomSource(sc_core::sc_module_name) {$/;"	f	struct:RandomSource
RandomSource	vp/random_source.h	/^struct RandomSource : public sc_core::sc_module {$/;"	s
Read	vp/csr.h	/^        Read  = 8,$/;"	e	enum:csr_base::AccessMode
ReconfigController	RFU/ReconfigController.cpp	/^ReconfigController::ReconfigController$/;"	f	class:ReconfigController
ReconfigController	RFU/ReconfigController.h	/^class ReconfigController: public sc_core::sc_module,$/;"	c
Reg32	vp/sifive/uart.h	/^    Reg32(uint32_t n)$/;"	f	struct:Reg32
Reg32	vp/sifive/uart.h	/^struct Reg32 {$/;"	s
Reg32Field	vp/sifive/uart.h	/^    Reg32Field(Reg32 *owner, unsigned start, unsigned end)$/;"	f	struct:Reg32Field
Reg32Field	vp/sifive/uart.h	/^struct Reg32Field {$/;"	s
RegFile	core/regfile.h	/^    RegFile() {$/;"	f	struct:RegFile
RegFile	core/regfile.h	/^    RegFile(const RegFile &other) {$/;"	f	struct:RegFile
RegFile	core/regfile.h	/^struct RegFile $/;"	s
RegFile	vp/iss.h	/^    RegFile() {$/;"	f	struct:RegFile
RegFile	vp/iss.h	/^    RegFile(const RegFile &other) {$/;"	f	struct:RegFile
RegFile	vp/iss.h	/^struct RegFile $/;"	s
RegisterMapping	vp/tlm_map.h	/^    struct RegisterMapping : public AbstractMapping {$/;"	s	namespace:vp::map
RequestThread	core/bus.h	/^void RequestThread()$/;"	f	struct:Bus	typeref:typename:void
Reserved	vp/csr.h	/^        Reserved = 2,$/;"	e	enum:csr_base::PrivilegeLevel
ResponseThread	core/bus.h	/^void ResponseThread()$/;"	f	struct:Bus	typeref:typename:void
Runnable	core/iss.h	/^    Runnable,$/;"	e	enum:CoreExecStatus
Runnable	vp/iss.h	/^    Runnable,$/;"	e	enum:CoreExecStatus
SB	core/instr.h	/^    SB,$/;"	e	enum:Opcode::mapping
SB	vp/instr.h	/^        SB,$/;"	e	enum:Opcode::mapping
SCALER_REG_ADDR	vp/sensor.h	/^        SCALER_REG_ADDR = 0x80,$/;"	e	enum:SimpleSensor::__anon14e16b2a0103
SCALER_REG_ADDR	vp/sensor2.h	/^        SCALER_REG_ADDR = 0x80,$/;"	e	enum:SimpleSensor2::__anonb10eda5c0103
SCKDIV_REG_ADDR	vp/sifive/spi.h	/^        SCKDIV_REG_ADDR = 0x0,$/;"	e	enum:SPI::__anon294bf4110103
SC_MODULE	helloworld/helloworld.cpp	/^SC_MODULE(helloworld){$/;"	f
SC_W	core/instr.h	/^    SC_W,$/;"	e	enum:Opcode::mapping
SC_W	vp/instr.h	/^        SC_W,$/;"	e	enum:Opcode::mapping
SEND_OPERATION	vp/ethernet.h	/^		SEND_OPERATION = 2,$/;"	e	enum:EthernetDevice::__anonb53ab72f0103
SEND_SIZE_REG_ADDR	vp/ethernet.h	/^	static const uint16_t SEND_SIZE_REG_ADDR    = SEND_SRC_REG_ADDR     + sizeof(uint32_t);$/;"	m	struct:EthernetDevice	typeref:typename:const uint16_t
SEND_SRC_REG_ADDR	vp/ethernet.h	/^	static const uint16_t SEND_SRC_REG_ADDR     = RECEIVE_DST_REG_ADDR  + sizeof(uint32_t);$/;"	m	struct:EthernetDevice	typeref:typename:const uint16_t
SFENCE_VMA	core/instr.h	/^    SFENCE_VMA,$/;"	e	enum:Opcode::mapping
SFENCE_VMA	vp/instr.h	/^        SFENCE_VMA,$/;"	e	enum:Opcode::mapping
SH	core/instr.h	/^    SH,$/;"	e	enum:Opcode::mapping
SH	vp/instr.h	/^        SH,$/;"	e	enum:Opcode::mapping
SLCS_IF_H	RFU/slcs_if.h	/^#define SLCS_IF_H$/;"	d
SLL	core/instr.h	/^    SLL,$/;"	e	enum:Opcode::mapping
SLL	vp/instr.h	/^        SLL,$/;"	e	enum:Opcode::mapping
SLLI	core/instr.cpp	/^    static T SLLI(unsigned rd, unsigned rs1, unsigned shamt) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
SLLI	core/instr.h	/^    SLLI,$/;"	e	enum:Opcode::mapping
SLLI	vp/instr.cpp	/^    static T SLLI(unsigned rd, unsigned rs1, unsigned shamt) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
SLLI	vp/instr.h	/^        SLLI,$/;"	e	enum:Opcode::mapping
SLT	core/instr.h	/^    SLT,$/;"	e	enum:Opcode::mapping
SLT	vp/instr.h	/^        SLT,$/;"	e	enum:Opcode::mapping
SLTI	core/instr.h	/^    SLTI,$/;"	e	enum:Opcode::mapping
SLTI	vp/instr.h	/^        SLTI,$/;"	e	enum:Opcode::mapping
SLTIU	core/instr.h	/^    SLTIU,$/;"	e	enum:Opcode::mapping
SLTIU	vp/instr.h	/^        SLTIU,$/;"	e	enum:Opcode::mapping
SLTU	core/instr.h	/^    SLTU,$/;"	e	enum:Opcode::mapping
SLTU	vp/instr.h	/^        SLTU,$/;"	e	enum:Opcode::mapping
SOURCE_EXTENSIONS	.ycm_extra_conf.py	/^SOURCE_EXTENSIONS = [ '.cpp', '.cxx', '.cc', '.c', '.m', '.mm' ]$/;"	v
SPI	vp/sifive/spi.h	/^    SPI(sc_core::sc_module_name) {$/;"	f	struct:SPI
SPI	vp/sifive/spi.h	/^struct SPI : public sc_core::sc_module {$/;"	s
SQRT	PEs/PE.h	/^			SQRT,$/;"	e	enum:PE::op_type
SRA	core/instr.h	/^    SRA,$/;"	e	enum:Opcode::mapping
SRA	vp/instr.h	/^        SRA,$/;"	e	enum:Opcode::mapping
SRAI	core/instr.cpp	/^    static T SRAI(unsigned rd, unsigned rs1, unsigned shamt) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
SRAI	core/instr.h	/^    SRAI,$/;"	e	enum:Opcode::mapping
SRAI	vp/instr.cpp	/^    static T SRAI(unsigned rd, unsigned rs1, unsigned shamt) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
SRAI	vp/instr.h	/^        SRAI,$/;"	e	enum:Opcode::mapping
SRC_ADDR	core/dma.h	/^        SRC_ADDR = 0,$/;"	e	enum:SimpleDMA::__anon50b533050203
SRC_ADDR	vp/dma.h	/^        SRC_ADDR = 0,$/;"	e	enum:SimpleDMA::__anon84776e620203
SRET	core/instr.h	/^    SRET,$/;"	e	enum:Opcode::mapping
SRET	vp/instr.h	/^        SRET,$/;"	e	enum:Opcode::mapping
SRL	core/instr.h	/^    SRL,$/;"	e	enum:Opcode::mapping
SRL	vp/instr.h	/^        SRL,$/;"	e	enum:Opcode::mapping
SRLI	core/instr.cpp	/^    static T SRLI(unsigned rd, unsigned rs1, unsigned shamt) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
SRLI	core/instr.h	/^    SRLI,$/;"	e	enum:Opcode::mapping
SRLI	vp/instr.cpp	/^    static T SRLI(unsigned rd, unsigned rs1, unsigned shamt) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
SRLI	vp/instr.h	/^        SRLI,$/;"	e	enum:Opcode::mapping
STATUS_REG_ADDR	vp/ethernet.h	/^    static const uint16_t STATUS_REG_ADDR       = 0x00;$/;"	m	struct:EthernetDevice	typeref:typename:const uint16_t
STAT_ADDR	core/dma.h	/^        STAT_ADDR  = 16,$/;"	e	enum:SimpleDMA::__anon50b533050203
STAT_ADDR	vp/dma.h	/^        STAT_ADDR  = 16,$/;"	e	enum:SimpleDMA::__anon84776e620203
STORE	PEs/PE.h	/^			STORE,$/;"	e	enum:PE::op_type
SUB	PEs/PE.h	/^			SUB,$/;"	e	enum:PE::op_type
SUB	core/instr.cpp	/^    static T SUB(unsigned rd, unsigned rs1, unsigned rs2) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
SUB	core/instr.h	/^    SUB,$/;"	e	enum:Opcode::mapping
SUB	vp/instr.cpp	/^    static T SUB(unsigned rd, unsigned rs1, unsigned rs2) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
SUB	vp/instr.h	/^        SUB,$/;"	e	enum:Opcode::mapping
SUPERVISOR_BITS	vp/csr.h	/^        SUPERVISOR_BITS = 0x01,		\/\/ 0b01$/;"	e	enum:csr_base::Internal
SW	core/instr.cpp	/^    static T SW(unsigned rs1, unsigned rs2, int S_imm) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
SW	core/instr.h	/^    SW,$/;"	e	enum:Opcode::mapping
SW	vp/instr.cpp	/^    static T SW(unsigned rs1, unsigned rs2, int S_imm) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
SW	vp/instr.h	/^        SW,$/;"	e	enum:Opcode::mapping
SYSCALL_H	core/syscall.h	/^#define SYSCALL_H$/;"	d
SYSTEMC_HOME	build/Makefile	/^SYSTEMC_HOME := \/home\/wdz\/riscv-vp\/riscv-vp\/vp\/dependencies\/systemc-dist$/;"	m
SYSTEMC_INCLUDE	build/Makefile	/^SYSTEMC_INCLUDE := $(SYSTEMC_HOME)\/include $/;"	m
SYSTEMC_LIBDIR	build/Makefile	/^SYSTEMC_LIBDIR := $(SYSTEMC_HOME)\/lib$/;"	m
SYS_CHECK	vp/ethernet.cpp	/^#define SYS_CHECK(/;"	d	file:
SYS_access	core/syscall.h	/^#define SYS_access /;"	d
SYS_access	vp/syscall.h	/^#define SYS_access /;"	d
SYS_brk	core/syscall.h	/^#define SYS_brk /;"	d
SYS_brk	vp/syscall.h	/^#define SYS_brk /;"	d
SYS_chdir	core/syscall.h	/^#define SYS_chdir /;"	d
SYS_chdir	vp/syscall.h	/^#define SYS_chdir /;"	d
SYS_close	core/syscall.h	/^#define SYS_close /;"	d
SYS_close	vp/syscall.h	/^#define SYS_close /;"	d
SYS_dup	core/syscall.h	/^#define SYS_dup /;"	d
SYS_dup	vp/syscall.h	/^#define SYS_dup /;"	d
SYS_exit	core/syscall.h	/^#define SYS_exit /;"	d
SYS_exit	vp/syscall.h	/^#define SYS_exit /;"	d
SYS_exit_group	core/syscall.h	/^#define SYS_exit_group /;"	d
SYS_exit_group	vp/syscall.h	/^#define SYS_exit_group /;"	d
SYS_faccessat	core/syscall.h	/^#define SYS_faccessat /;"	d
SYS_faccessat	vp/syscall.h	/^#define SYS_faccessat /;"	d
SYS_fcntl	core/syscall.h	/^#define SYS_fcntl /;"	d
SYS_fcntl	vp/syscall.h	/^#define SYS_fcntl /;"	d
SYS_fstat	core/syscall.h	/^#define SYS_fstat /;"	d
SYS_fstat	vp/syscall.h	/^#define SYS_fstat /;"	d
SYS_fstatat	core/syscall.h	/^#define SYS_fstatat /;"	d
SYS_fstatat	vp/syscall.h	/^#define SYS_fstatat /;"	d
SYS_getcwd	core/syscall.h	/^#define SYS_getcwd /;"	d
SYS_getcwd	vp/syscall.h	/^#define SYS_getcwd /;"	d
SYS_getdents	core/syscall.h	/^#define SYS_getdents /;"	d
SYS_getdents	vp/syscall.h	/^#define SYS_getdents /;"	d
SYS_getegid	core/syscall.h	/^#define SYS_getegid /;"	d
SYS_getegid	vp/syscall.h	/^#define SYS_getegid /;"	d
SYS_geteuid	core/syscall.h	/^#define SYS_geteuid /;"	d
SYS_geteuid	vp/syscall.h	/^#define SYS_geteuid /;"	d
SYS_getgid	core/syscall.h	/^#define SYS_getgid /;"	d
SYS_getgid	vp/syscall.h	/^#define SYS_getgid /;"	d
SYS_getmainvars	core/syscall.h	/^#define SYS_getmainvars /;"	d
SYS_getmainvars	vp/syscall.h	/^#define SYS_getmainvars /;"	d
SYS_getpid	core/syscall.h	/^#define SYS_getpid /;"	d
SYS_getpid	vp/syscall.h	/^#define SYS_getpid /;"	d
SYS_gettimeofday	core/syscall.h	/^#define SYS_gettimeofday /;"	d
SYS_gettimeofday	vp/syscall.h	/^#define SYS_gettimeofday /;"	d
SYS_getuid	core/syscall.h	/^#define SYS_getuid /;"	d
SYS_getuid	vp/syscall.h	/^#define SYS_getuid /;"	d
SYS_host_error	core/syscall.h	/^#define SYS_host_error /;"	d
SYS_host_error	vp/syscall.h	/^#define SYS_host_error /;"	d
SYS_host_test_fail	core/syscall.h	/^#define SYS_host_test_fail /;"	d
SYS_host_test_fail	vp/syscall.h	/^#define SYS_host_test_fail /;"	d
SYS_host_test_pass	core/syscall.h	/^#define SYS_host_test_pass /;"	d
SYS_host_test_pass	vp/syscall.h	/^#define SYS_host_test_pass /;"	d
SYS_kill	core/syscall.h	/^#define SYS_kill /;"	d
SYS_kill	vp/syscall.h	/^#define SYS_kill /;"	d
SYS_link	core/syscall.h	/^#define SYS_link /;"	d
SYS_link	vp/syscall.h	/^#define SYS_link /;"	d
SYS_lseek	core/syscall.h	/^#define SYS_lseek /;"	d
SYS_lseek	vp/syscall.h	/^#define SYS_lseek /;"	d
SYS_lstat	core/syscall.h	/^#define SYS_lstat /;"	d
SYS_lstat	vp/syscall.h	/^#define SYS_lstat /;"	d
SYS_mkdir	core/syscall.h	/^#define SYS_mkdir /;"	d
SYS_mkdir	vp/syscall.h	/^#define SYS_mkdir /;"	d
SYS_mmap	core/syscall.h	/^#define SYS_mmap /;"	d
SYS_mmap	vp/syscall.h	/^#define SYS_mmap /;"	d
SYS_mremap	core/syscall.h	/^#define SYS_mremap /;"	d
SYS_mremap	vp/syscall.h	/^#define SYS_mremap /;"	d
SYS_munmap	core/syscall.h	/^#define SYS_munmap /;"	d
SYS_munmap	vp/syscall.h	/^#define SYS_munmap /;"	d
SYS_open	core/syscall.h	/^#define SYS_open /;"	d
SYS_open	vp/syscall.h	/^#define SYS_open /;"	d
SYS_openat	core/syscall.h	/^#define SYS_openat /;"	d
SYS_openat	vp/syscall.h	/^#define SYS_openat /;"	d
SYS_pread	core/syscall.h	/^#define SYS_pread /;"	d
SYS_pread	vp/syscall.h	/^#define SYS_pread /;"	d
SYS_pwrite	core/syscall.h	/^#define SYS_pwrite /;"	d
SYS_pwrite	vp/syscall.h	/^#define SYS_pwrite /;"	d
SYS_read	core/syscall.h	/^#define SYS_read /;"	d
SYS_read	vp/syscall.h	/^#define SYS_read /;"	d
SYS_rt_sigaction	core/syscall.h	/^#define SYS_rt_sigaction /;"	d
SYS_rt_sigaction	vp/syscall.h	/^#define SYS_rt_sigaction /;"	d
SYS_stat	core/syscall.h	/^#define SYS_stat /;"	d
SYS_stat	vp/syscall.h	/^#define SYS_stat /;"	d
SYS_time	core/syscall.h	/^#define SYS_time /;"	d
SYS_time	vp/syscall.h	/^#define SYS_time /;"	d
SYS_times	core/syscall.h	/^#define SYS_times /;"	d
SYS_times	vp/syscall.h	/^#define SYS_times /;"	d
SYS_uname	core/syscall.h	/^#define SYS_uname /;"	d
SYS_uname	vp/syscall.h	/^#define SYS_uname /;"	d
SYS_unlink	core/syscall.h	/^#define SYS_unlink /;"	d
SYS_unlink	vp/syscall.h	/^#define SYS_unlink /;"	d
SYS_write	core/syscall.h	/^#define SYS_write /;"	d
SYS_write	vp/syscall.h	/^#define SYS_write /;"	d
SYS_writev	core/syscall.h	/^#define SYS_writev /;"	d
SYS_writev	vp/syscall.h	/^#define SYS_writev /;"	d
S_imm	core/instr.h	/^    inline int32_t S_imm() {$/;"	f	struct:Instruction	typeref:typename:int32_t
S_imm	vp/instr.h	/^    inline int32_t S_imm() {$/;"	f	struct:Instruction	typeref:typename:int32_t
SimpleBus	vp/bus.h	/^    SimpleBus(sc_core::sc_module_name) { \/\/ 这种写法？？？$/;"	f	struct:SimpleBus
SimpleBus	vp/bus.h	/^struct SimpleBus : sc_core::sc_module {$/;"	s
SimpleDMA	core/dma.h	/^    SimpleDMA(sc_core::sc_module_name, uint32_t irq_number)$/;"	f	struct:SimpleDMA
SimpleDMA	core/dma.h	/^struct SimpleDMA : public sc_core::sc_module {$/;"	s
SimpleDMA	vp/dma.h	/^    SimpleDMA(sc_core::sc_module_name, uint32_t irq_number)$/;"	f	struct:SimpleDMA
SimpleDMA	vp/dma.h	/^struct SimpleDMA : public sc_core::sc_module {$/;"	s
SimpleMRAM	vp/mram.h	/^    SimpleMRAM(sc_module_name, string& filepath, uint32_t size)$/;"	f	struct:SimpleMRAM
SimpleMRAM	vp/mram.h	/^struct SimpleMRAM : public sc_core::sc_module {$/;"	s
SimpleMemory	vp/memory.h	/^    SimpleMemory(sc_core::sc_module_name, uint32_t size)$/;"	f	struct:SimpleMemory
SimpleMemory	vp/memory.h	/^struct SimpleMemory : public sc_core::sc_module {$/;"	s
SimpleSensor	vp/sensor.h	/^    SimpleSensor(sc_core::sc_module_name, uint32_t irq_number)$/;"	f	struct:SimpleSensor
SimpleSensor	vp/sensor.h	/^struct SimpleSensor : public sc_core::sc_module {$/;"	s
SimpleSensor2	vp/sensor2.h	/^    SimpleSensor2(sc_core::sc_module_name, uint32_t irq_number)$/;"	f	struct:SimpleSensor2
SimpleSensor2	vp/sensor2.h	/^struct SimpleSensor2 : public sc_core::sc_module {$/;"	s
SimpleTerminal	vp/terminal.h	/^    SimpleTerminal(sc_core::sc_module_name) {$/;"	f	struct:SimpleTerminal
SimpleTerminal	vp/terminal.h	/^struct SimpleTerminal : public sc_core::sc_module {$/;"	s
SrcDir	build/Makefile	/^SrcDir = ..\/core$/;"	m
Supervisor	vp/csr.h	/^        Supervisor = 1,$/;"	e	enum:csr_base::PrivilegeLevel
Supervisor	vp/csr.h	/^        Supervisor = 2,$/;"	e	enum:csr_base::AccessMode
SyscallHandler	core/syscall.h	/^struct SyscallHandler$/;"	s
SyscallHandler	vp/syscall.h	/^struct SyscallHandler {$/;"	s
T	core/instr.cpp	/^    typedef Instruction T;$/;"	t	struct:InstructionFactory	typeref:typename:Instruction	file:
T	vp/instr.cpp	/^    typedef Instruction T;$/;"	t	struct:InstructionFactory	typeref:typename:Instruction	file:
TARGET_SIGNAL_ABRT	vp/gdb_stub.cpp	/^    TARGET_SIGNAL_ABRT = 6,$/;"	e	enum:target_signal	file:
TARGET_SIGNAL_BUS	vp/gdb_stub.cpp	/^    TARGET_SIGNAL_BUS = 10,$/;"	e	enum:target_signal	file:
TARGET_SIGNAL_EMT	vp/gdb_stub.cpp	/^    TARGET_SIGNAL_EMT = 7,$/;"	e	enum:target_signal	file:
TARGET_SIGNAL_FIRST	vp/gdb_stub.cpp	/^    TARGET_SIGNAL_FIRST = 0,$/;"	e	enum:target_signal	file:
TARGET_SIGNAL_FPE	vp/gdb_stub.cpp	/^    TARGET_SIGNAL_FPE = 8,$/;"	e	enum:target_signal	file:
TARGET_SIGNAL_HUP	vp/gdb_stub.cpp	/^    TARGET_SIGNAL_HUP = 1,$/;"	e	enum:target_signal	file:
TARGET_SIGNAL_ILL	vp/gdb_stub.cpp	/^    TARGET_SIGNAL_ILL = 4,$/;"	e	enum:target_signal	file:
TARGET_SIGNAL_INT	vp/gdb_stub.cpp	/^    TARGET_SIGNAL_INT = 2,$/;"	e	enum:target_signal	file:
TARGET_SIGNAL_KILL	vp/gdb_stub.cpp	/^    TARGET_SIGNAL_KILL = 9,$/;"	e	enum:target_signal	file:
TARGET_SIGNAL_QUIT	vp/gdb_stub.cpp	/^    TARGET_SIGNAL_QUIT = 3,$/;"	e	enum:target_signal	file:
TARGET_SIGNAL_SEGV	vp/gdb_stub.cpp	/^    TARGET_SIGNAL_SEGV = 11,$/;"	e	enum:target_signal	file:
TARGET_SIGNAL_TRAP	vp/gdb_stub.cpp	/^    TARGET_SIGNAL_TRAP = 5,$/;"	e	enum:target_signal	file:
TERMINAL_H	core/terminal.h	/^#define TERMINAL_H$/;"	d
TXCTRL_REG_ADDR	vp/sifive/uart.h	/^        TXCTRL_REG_ADDR = 0x8,$/;"	e	enum:UART::__anon566b6a010103
TXDATA_REG_ADDR	vp/sifive/uart.h	/^        TXDATA_REG_ADDR = 0x0,$/;"	e	enum:UART::__anon566b6a010103
Terminal	core/terminal.h	/^	Terminal($/;"	f	struct:Terminal
Terminal	core/terminal.h	/^struct Terminal : public sc_core::sc_module $/;"	s
Terminated	core/iss.h	/^    Terminated,$/;"	e	enum:CoreExecStatus
Terminated	vp/iss.h	/^    Terminated,$/;"	e	enum:CoreExecStatus
UART	vp/sifive/uart.h	/^    UART(sc_core::sc_module_name) {$/;"	f	struct:UART
UART	vp/sifive/uart.h	/^struct UART : public sc_core::sc_module {$/;"	s
UNDEF	PEs/PE.h	/^			UNDEF$/;"	e	enum:PE::op_type
UNDEF	core/instr.h	/^    UNDEF = 0,$/;"	e	enum:Opcode::mapping
UNDEF	vp/instr.h	/^        UNDEF = 0,$/;"	e	enum:Opcode::mapping
UNIMPLEMENTED	core/csr.h	/^            unsigned UNIMPLEMENTED: 24;	\/\/ WARL$/;"	m	struct:csr_pmpcfg::__anon50a6ad1b120a::__anon50a6ad1b1308	typeref:typename:unsigned:24
UNIMPLEMENTED	vp/csr.h	/^            unsigned UNIMPLEMENTED: 24;	\/\/ WARL$/;"	m	struct:csr_pmpcfg::__anon8468e878120a::__anon8468e8781308	typeref:typename:unsigned:24
URET	core/instr.h	/^    URET,$/;"	e	enum:Opcode::mapping
URET	vp/instr.h	/^        URET,$/;"	e	enum:Opcode::mapping
USER_BITS	vp/csr.h	/^        USER_BITS = 0x00,			\/\/ 0b00$/;"	e	enum:csr_base::Internal
U_imm	core/instr.h	/^    inline int32_t U_imm() {$/;"	f	struct:Instruction	typeref:typename:int32_t
U_imm	vp/instr.h	/^    inline int32_t U_imm() {$/;"	f	struct:Instruction	typeref:typename:int32_t
User	vp/csr.h	/^        User = 0,$/;"	e	enum:csr_base::PrivilegeLevel
User	vp/csr.h	/^        User = 1,$/;"	e	enum:csr_base::AccessMode
VIRTUAL_MAC_ADDRESS	vp/ethernet.h	/^    uint8_t* VIRTUAL_MAC_ADDRESS = reinterpret_cast<uint8_t*>(mac);$/;"	m	struct:EthernetDevice	typeref:typename:uint8_t *
Vectored	core/csr.h	/^        Vectored = 1$/;"	e	enum:csr_mtvec::Mode
Vectored	vp/csr.h	/^        Vectored = 1$/;"	e	enum:csr_mtvec::Mode
W0	core/csr.h	/^            unsigned W0: 1;             \/\/ WARL$/;"	m	struct:csr_pmpcfg::__anon50a6ad1b120a::__anon50a6ad1b1308	typeref:typename:unsigned:1
W0	vp/csr.h	/^            unsigned W0: 1;             \/\/ WARL$/;"	m	struct:csr_pmpcfg::__anon8468e878120a::__anon8468e8781308	typeref:typename:unsigned:1
WFI	core/instr.h	/^    WFI,$/;"	e	enum:Opcode::mapping
WFI	vp/instr.h	/^        WFI,$/;"	e	enum:Opcode::mapping
Write	vp/csr.h	/^        Write = 16$/;"	e	enum:csr_base::AccessMode
X0	core/csr.h	/^            unsigned X0: 1;             \/\/ WARL$/;"	m	struct:csr_pmpcfg::__anon50a6ad1b120a::__anon50a6ad1b1308	typeref:typename:unsigned:1
X0	vp/csr.h	/^            unsigned X0: 1;             \/\/ WARL$/;"	m	struct:csr_pmpcfg::__anon8468e878120a::__anon8468e8781308	typeref:typename:unsigned:1
XOR	core/instr.cpp	/^    static T XOR(unsigned rd, unsigned rs1, unsigned rs2) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
XOR	core/instr.h	/^    XOR,$/;"	e	enum:Opcode::mapping
XOR	vp/instr.cpp	/^    static T XOR(unsigned rd, unsigned rs1, unsigned rs2) {$/;"	f	struct:InstructionFactory	typeref:typename:T	file:
XOR	vp/instr.h	/^        XOR,$/;"	e	enum:Opcode::mapping
XORI	core/instr.h	/^    XORI,$/;"	e	enum:Opcode::mapping
XORI	vp/instr.h	/^        XORI,$/;"	e	enum:Opcode::mapping
__FAVOR_BSD	vp/ethernet.cpp	/^#define __FAVOR_BSD$/;"	d	file:
__anon14e16b2a0103	vp/sensor.h	/^    enum {$/;"	g	struct:SimpleSensor
__anon17d1bc3e010a	vp/flash.h	/^    {$/;"	u	struct:Flashcontroller
__anon17d1bc3e020a	vp/flash.h	/^    {$/;"	u	struct:Flashcontroller
__anon1f78fa87010a	PEs/PE.h	/^	union {$/;"	u	struct:first_level_config
__anon1f78fa870208	PEs/PE.h	/^		struct {$/;"	s	union:first_level_config::__anon1f78fa87010a
__anon1f78fa870308	PEs/PE.h	/^		struct {$/;"	s	union:first_level_config::__anon1f78fa87010a
__anon1f8a387a0102	vp/tlm_map.h	/^            auto fn = [cmd,&r,new_vptr]() {$/;"	f	function:vp::map::RegisterMapping::try_handle	file:
__anon2805c3e30103	vp/sifive/aon.h	/^    enum {$/;"	g	struct:AON
__anon294bf4110103	vp/sifive/spi.h	/^    enum {$/;"	g	struct:SPI
__anon2f5647180103	vp/plic.h	/^    enum {$/;"	g	struct:PLIC
__anon36cd9c140103	vp/sifive/gpio.h	/^    enum {$/;"	g	struct:GPIO
__anon4becd6f30103	vp/sifive/prci.h	/^    enum {$/;"	g	struct:PRCI
__anon50a6ad1b010a	core/csr.h	/^    union {$/;"	u	struct:csr_misa
__anon50a6ad1b0208	core/csr.h	/^        struct {$/;"	s	union:csr_misa::__anon50a6ad1b010a
__anon50a6ad1b030a	core/csr.h	/^    union {$/;"	u	struct:csr_mvendorid
__anon50a6ad1b0408	core/csr.h	/^        struct {$/;"	s	union:csr_mvendorid::__anon50a6ad1b030a
__anon50a6ad1b050a	core/csr.h	/^    union {$/;"	u	struct:csr_mstatus
__anon50a6ad1b0608	core/csr.h	/^        struct {$/;"	s	union:csr_mstatus::__anon50a6ad1b050a
__anon50a6ad1b070a	core/csr.h	/^    union {$/;"	u	struct:csr_mtvec
__anon50a6ad1b0808	core/csr.h	/^        struct {$/;"	s	union:csr_mtvec::__anon50a6ad1b070a
__anon50a6ad1b090a	core/csr.h	/^    union {$/;"	u	struct:csr_mie
__anon50a6ad1b0a08	core/csr.h	/^        struct {$/;"	s	union:csr_mie::__anon50a6ad1b090a
__anon50a6ad1b0b0a	core/csr.h	/^    union {$/;"	u	struct:csr_mip
__anon50a6ad1b0c08	core/csr.h	/^        struct {$/;"	s	union:csr_mip::__anon50a6ad1b0b0a
__anon50a6ad1b0d0a	core/csr.h	/^    union {$/;"	u	struct:csr_mepc
__anon50a6ad1b0e0a	core/csr.h	/^    union {$/;"	u	struct:csr_mcause
__anon50a6ad1b0f08	core/csr.h	/^        struct {$/;"	s	union:csr_mcause::__anon50a6ad1b0e0a
__anon50a6ad1b100a	core/csr.h	/^    union {$/;"	u	struct:csr_satp
__anon50a6ad1b1108	core/csr.h	/^        struct {$/;"	s	union:csr_satp::__anon50a6ad1b100a
__anon50a6ad1b120a	core/csr.h	/^    union {$/;"	u	struct:csr_pmpcfg
__anon50a6ad1b1308	core/csr.h	/^        struct {$/;"	s	union:csr_pmpcfg::__anon50a6ad1b120a
__anon50a6ad1b140a	core/csr.h	/^    union {$/;"	u	struct:csr_64
__anon50a6ad1b1508	core/csr.h	/^        struct {$/;"	s	union:csr_64::__anon50a6ad1b140a
__anon50b533050103	core/dma.h	/^    enum {$/;"	g	struct:SimpleDMA
__anon50b533050203	core/dma.h	/^    enum {$/;"	g	struct:SimpleDMA
__anon511344620103	core/iss.h	/^    enum {$/;"	g	struct:ISS
__anon566b6a010103	vp/sifive/uart.h	/^    enum {$/;"	g	struct:UART
__anon8468e878010a	vp/csr.h	/^    union {$/;"	u	struct:csr_misa
__anon8468e8780208	vp/csr.h	/^        struct {$/;"	s	union:csr_misa::__anon8468e878010a
__anon8468e878030a	vp/csr.h	/^    union {$/;"	u	struct:csr_mvendorid
__anon8468e8780408	vp/csr.h	/^        struct {$/;"	s	union:csr_mvendorid::__anon8468e878030a
__anon8468e878050a	vp/csr.h	/^    union {$/;"	u	struct:csr_mstatus
__anon8468e8780608	vp/csr.h	/^        struct {$/;"	s	union:csr_mstatus::__anon8468e878050a
__anon8468e878070a	vp/csr.h	/^    union {$/;"	u	struct:csr_mtvec
__anon8468e8780808	vp/csr.h	/^        struct {$/;"	s	union:csr_mtvec::__anon8468e878070a
__anon8468e878090a	vp/csr.h	/^    union {$/;"	u	struct:csr_mie
__anon8468e8780a08	vp/csr.h	/^        struct {$/;"	s	union:csr_mie::__anon8468e878090a
__anon8468e8780b0a	vp/csr.h	/^    union {$/;"	u	struct:csr_mip
__anon8468e8780c08	vp/csr.h	/^        struct {$/;"	s	union:csr_mip::__anon8468e8780b0a
__anon8468e8780d0a	vp/csr.h	/^    union {$/;"	u	struct:csr_mepc
__anon8468e8780e0a	vp/csr.h	/^    union {$/;"	u	struct:csr_mcause
__anon8468e8780f08	vp/csr.h	/^        struct {$/;"	s	union:csr_mcause::__anon8468e8780e0a
__anon8468e878100a	vp/csr.h	/^    union {$/;"	u	struct:csr_satp
__anon8468e8781108	vp/csr.h	/^        struct {$/;"	s	union:csr_satp::__anon8468e878100a
__anon8468e878120a	vp/csr.h	/^    union {$/;"	u	struct:csr_pmpcfg
__anon8468e8781308	vp/csr.h	/^        struct {$/;"	s	union:csr_pmpcfg::__anon8468e878120a
__anon8468e878140a	vp/csr.h	/^    union {$/;"	u	struct:csr_64
__anon8468e8781508	vp/csr.h	/^        struct {$/;"	s	union:csr_64::__anon8468e878140a
__anon84776e620103	vp/dma.h	/^    enum {$/;"	g	struct:SimpleDMA
__anon84776e620203	vp/dma.h	/^    enum {$/;"	g	struct:SimpleDMA
__anon84d57fbf0103	vp/iss.h	/^    enum {$/;"	g	struct:RegFile
__anon84d57fbf0203	vp/iss.h	/^    enum {$/;"	g	struct:ISS
__anon8bfe09b10103	core/regfile.h	/^    enum {$/;"	g	struct:RegFile
__anon947b0a800108	core/elf_loader.h	/^typedef struct {$/;"	s
__anon947b0a800208	core/elf_loader.h	/^typedef struct {$/;"	s
__anon947b0a800308	core/elf_loader.h	/^typedef struct {$/;"	s
__anon947b0a800408	core/elf_loader.h	/^typedef struct {$/;"	s
__anonb10eda5c0103	vp/sensor2.h	/^    enum {$/;"	g	struct:SimpleSensor2
__anonb53ab72f0103	vp/ethernet.h	/^	{$/;"	g	struct:EthernetDevice	typeref:typename:uint16_t
__anonb9f73b3d0108	vp/elf_loader.h	/^typedef struct {$/;"	s
__anonb9f73b3d0208	vp/elf_loader.h	/^typedef struct {$/;"	s
__anonb9f73b3d0308	vp/elf_loader.h	/^typedef struct {$/;"	s
__anonb9f73b3d0408	vp/elf_loader.h	/^typedef struct {$/;"	s
__anone801af26010a	vp/display.hpp	/^	{$/;"	u	struct:Display
__anone86e04c8010a	RFU/contextreg_if.h	/^	{$/;"	u	struct:flc
__anone86e04c80208	RFU/contextreg_if.h	/^		{$/;"	s	union:flc::__anone86e04c8010a
__anone86e04c80308	RFU/contextreg_if.h	/^		{$/;"	s	union:flc::__anone86e04c8010a
__anone86e04c80408	RFU/contextreg_if.h	/^		{$/;"	s	union:flc::__anone86e04c8010a
__anone86e04c8050a	RFU/contextreg_if.h	/^	{$/;"	u	struct:slc
__anone86e04c80608	RFU/contextreg_if.h	/^		{$/;"	s	union:slc::__anone86e04c8050a
__anone86e04c80708	RFU/contextreg_if.h	/^		{$/;"	s	union:slc::__anone86e04c8050a
__anone86e04c80808	RFU/contextreg_if.h	/^		{$/;"	s	union:slc::__anone86e04c8050a
__glibc_reserved	core/syscall.cpp	/^    int32_t __glibc_reserved[2];$/;"	m	struct:rv32g_stat	typeref:typename:int32_t[2]	file:
__glibc_reserved	vp/syscall.cpp	/^    int32_t __glibc_reserved[2];$/;"	m	struct:rv32g_stat	typeref:typename:int32_t[2]	file:
__pad1	core/syscall.cpp	/^    uint64_t __pad1;$/;"	m	struct:rv32g_stat	typeref:typename:uint64_t	file:
__pad1	vp/syscall.cpp	/^    uint64_t __pad1;$/;"	m	struct:rv32g_stat	typeref:typename:uint64_t	file:
__pad2	core/syscall.cpp	/^    int32_t __pad2;$/;"	m	struct:rv32g_stat	typeref:typename:int32_t	file:
__pad2	vp/syscall.cpp	/^    int32_t __pad2;$/;"	m	struct:rv32g_stat	typeref:typename:int32_t	file:
_compute_and_get_current_cycles	core/iss.h	/^    uint64_t _compute_and_get_current_cycles() {$/;"	f	struct:ISS	typeref:typename:uint64_t
_compute_and_get_current_cycles	vp/iss.h	/^    uint64_t _compute_and_get_current_cycles() {$/;"	f	struct:ISS	typeref:typename:uint64_t
_copy_block	core/dma.h	/^    void _copy_block(uint32_t off, uint32_t n) {$/;"	f	struct:SimpleDMA	typeref:typename:void
_copy_block	vp/dma.h	/^    void _copy_block(uint32_t off, uint32_t n) {$/;"	f	struct:SimpleDMA	typeref:typename:void
_copy_timespec	core/syscall.cpp	/^void _copy_timespec(rv32g_timespec *dst, timespec *src) {$/;"	f	typeref:typename:void
_copy_timespec	vp/syscall.cpp	/^void _copy_timespec(rv32g_timespec *dst, timespec *src) {$/;"	f	typeref:typename:void
_do_transaction	core/mem_if.cpp	/^void CombinedMemoryInterface::_do_transaction(tlm::tlm_command cmd, uint64_t addr, uint8_t *data/;"	f	class:CombinedMemoryInterface	typeref:typename:void
_do_transaction	vp/iss.h	/^    inline void _do_transaction(tlm::tlm_command cmd, uint64_t addr, uint8_t *data, unsigned num/;"	f	struct:CombinedMemoryInterface	typeref:typename:void
_get_access_mode	vp/csr.h	/^    AccessMode _get_access_mode() {$/;"	f	struct:csr_base	typeref:typename:AccessMode
_load_data	core/mem_if.h	/^		inline T _load_data(addr_t addr) $/;"	f	struct:CombinedMemoryInterface	typeref:typename:T
_load_data	vp/iss.h	/^    inline T _load_data(addr_t addr) {$/;"	f	struct:CombinedMemoryInterface	typeref:typename:T
_load_data	vp/iss.h	/^    inline T _load_data(addr_t addr) {$/;"	f	struct:DataMemoryProxy	typeref:typename:T
_perform_memcpy	core/dma.h	/^    void _perform_memcpy() {$/;"	f	struct:SimpleDMA	typeref:typename:void
_perform_memcpy	vp/dma.h	/^    void _perform_memcpy() {$/;"	f	struct:SimpleDMA	typeref:typename:void
_register	core/csr.h	/^    T *_register(T *p) {$/;"	f	struct:csr_table	typeref:typename:T *
_register	vp/csr.h	/^    T *_register(T *p) {$/;"	f	struct:csr_table	typeref:typename:T *
_store_data	core/mem_if.h	/^		inline void _store_data(addr_t addr, T value) $/;"	f	struct:CombinedMemoryInterface	typeref:typename:void
_store_data	vp/iss.h	/^    inline void _store_data(addr_t addr, T value) {$/;"	f	struct:CombinedMemoryInterface	typeref:typename:void
_store_data	vp/iss.h	/^    inline void _store_data(addr_t addr, T value) {$/;"	f	struct:DataMemoryProxy	typeref:typename:void
_wiri0	core/csr.h	/^            unsigned _wiri0: 2;         \/\/ WIRI$/;"	m	struct:csr_pmpcfg::__anon50a6ad1b120a::__anon50a6ad1b1308	typeref:typename:unsigned:2
_wiri0	vp/csr.h	/^            unsigned _wiri0: 2;         \/\/ WIRI$/;"	m	struct:csr_pmpcfg::__anon8468e878120a::__anon8468e8781308	typeref:typename:unsigned:2
a0	core/regfile.h	/^        a0 = x10,$/;"	e	enum:RegFile::e
a0	vp/iss.h	/^        a0 = x10,$/;"	e	enum:RegFile::e
a1	core/regfile.h	/^        a1 = x11,$/;"	e	enum:RegFile::e
a1	vp/iss.h	/^        a1 = x11,$/;"	e	enum:RegFile::e
a2	core/regfile.h	/^        a2 = x12,$/;"	e	enum:RegFile::e
a2	vp/iss.h	/^        a2 = x12,$/;"	e	enum:RegFile::e
a3	core/regfile.h	/^        a3 = x13,$/;"	e	enum:RegFile::e
a3	vp/iss.h	/^        a3 = x13,$/;"	e	enum:RegFile::e
a4	core/regfile.h	/^        a4 = x14,$/;"	e	enum:RegFile::e
a4	vp/iss.h	/^        a4 = x14,$/;"	e	enum:RegFile::e
a5	core/regfile.h	/^        a5 = x15,$/;"	e	enum:RegFile::e
a5	vp/iss.h	/^        a5 = x15,$/;"	e	enum:RegFile::e
a6	core/regfile.h	/^        a6 = x16,$/;"	e	enum:RegFile::e
a6	vp/iss.h	/^        a6 = x16,$/;"	e	enum:RegFile::e
a7	core/regfile.h	/^        a7 = x17,$/;"	e	enum:RegFile::e
a7	vp/iss.h	/^        a7 = x17,$/;"	e	enum:RegFile::e
access_delay	vp/iss.h	/^    sc_core::sc_time access_delay = clock_cycle * 2;$/;"	m	struct:InstrMemoryProxy	typeref:typename:sc_core::sc_time
access_delay	vp/iss.h	/^    sc_core::sc_time access_delay = clock_cycle * 4;$/;"	m	struct:DataMemoryProxy	typeref:typename:sc_core::sc_time
access_mode	vp/tlm_map.h	/^    struct access_mode {$/;"	s	namespace:vp::map
active	vp/flash.h	/^	bool active;$/;"	m	struct:Blockbuffer	typeref:typename:bool
addPendingTransaction	core/bus.h	/^	void addPendingTransaction(tlm::tlm_generic_payload &trans,$/;"	f	struct:Bus	typeref:typename:void
add_register_bank	vp/tlm_map.h	/^        RegisterMapping &add_register_bank(const std::vector<reg_mapping_t> &regs) {$/;"	f	struct:vp::map::LocalRouter	typeref:typename:RegisterMapping &
add_start_end_mapping	vp/tlm_map.h	/^        AddressMapping &add_start_end_mapping(uint64_t start, uint64_t end, const access_mode &m/;"	f	struct:vp::map::LocalRouter	typeref:typename:AddressMapping &
add_start_size_mapping	vp/tlm_map.h	/^        AddressMapping &add_start_size_mapping(uint64_t start, uint32_t size, const access_mode /;"	f	struct:vp::map::LocalRouter	typeref:typename:AddressMapping &
addr	RFU/contextreg_if.h	/^			unsigned addr		:5;				$/;"	m	struct:flc::__anone86e04c8010a::__anone86e04c80308	typeref:typename:unsigned:5
addr	RFU/contextreg_if.h	/^			unsigned addr		:5;$/;"	m	struct:slc::__anone86e04c8050a::__anone86e04c80708	typeref:typename:unsigned:5
addr	core/csr.h	/^    uint32_t addr;$/;"	m	struct:csr_base	typeref:typename:uint32_t
addr	vp/csr.h	/^    uint32_t addr;$/;"	m	struct:csr_base	typeref:typename:uint32_t
addr	vp/gdb_stub.cpp	/^    unsigned addr;$/;"	m	struct:breakpoint_t	typeref:typename:unsigned	file:
addr	vp/tlm_map.h	/^        uint64_t addr;$/;"	m	struct:vp::map::reg_mapping_t	typeref:typename:uint64_t
addr_inc	PEs/PE.h	/^			unsigned addr_inc:	13;$/;"	m	struct:first_level_config::__anon1f78fa87010a::__anon1f78fa870308	typeref:typename:unsigned:13
addr_inc	RFU/contextreg_if.h	/^			unsigned addr_inc	:7;$/;"	m	struct:flc::__anone86e04c8010a::__anone86e04c80308	typeref:typename:unsigned:7
addr_inc	RFU/contextreg_if.h	/^			unsigned addr_inc	:7;$/;"	m	struct:slc::__anone86e04c8050a::__anone86e04c80708	typeref:typename:unsigned:7
addr_t	core/main.cpp	/^	typedef unsigned int addr_t;$/;"	t	struct:Options	typeref:typename:unsigned int	file:
addr_t	core/mem_if.h	/^	typedef uint32_t addr_t;$/;"	t	struct:CombinedMemoryInterface	typeref:typename:uint32_t
addr_t	vp/iss.h	/^    typedef uint32_t addr_t;$/;"	t	struct:CombinedMemoryInterface	typeref:typename:uint32_t
addr_t	vp/iss.h	/^    typedef uint32_t addr_t;$/;"	t	struct:DataMemoryProxy	typeref:typename:uint32_t
addr_t	vp/main.cpp	/^    typedef unsigned int addr_t;$/;"	t	struct:Options	typeref:typename:unsigned int	file:
addr_t	vp/sifive/sifive_main.cpp	/^    typedef unsigned int addr_t;$/;"	t	struct:Options	typeref:typename:unsigned int	file:
addr_to_csr	core/csr.h	/^    std::map<uint32_t, csr_base*> addr_to_csr;$/;"	m	struct:csr_table	typeref:typename:std::map<uint32_t,csr_base * >
addr_to_csr	vp/csr.h	/^    std::map<uint32_t, csr_base*> addr_to_csr;$/;"	m	struct:csr_table	typeref:typename:std::map<uint32_t,csr_base * >
addr_to_reg	core/clint_if.h	/^		std::map<uint64_t, uint32_t *> addr_to_reg;$/;"	m	struct:Clint	typeref:typename:std::map<uint64_t,uint32_t * >
addr_to_reg	core/dma.h	/^    std::unordered_map<uint64_t, uint32_t *> addr_to_reg;$/;"	m	struct:SimpleDMA	typeref:typename:std::unordered_map<uint64_t,uint32_t * >
addr_to_reg	vp/clint.h	/^    std::unordered_map<uint64_t, uint32_t *> addr_to_reg;$/;"	m	struct:CLINT	typeref:typename:std::unordered_map<uint64_t,uint32_t * >
addr_to_reg	vp/dma.h	/^    std::unordered_map<uint64_t, uint32_t *> addr_to_reg;$/;"	m	struct:SimpleDMA	typeref:typename:std::unordered_map<uint64_t,uint32_t * >
addr_to_reg	vp/sensor.h	/^    std::unordered_map<uint64_t, uint32_t *> addr_to_reg;$/;"	m	struct:SimpleSensor	typeref:typename:std::unordered_map<uint64_t,uint32_t * >
addr_to_reg	vp/tlm_map.h	/^        std::unordered_map<uint64_t, reg_mapping_t> addr_to_reg;$/;"	m	struct:vp::map::RegisterMapping	typeref:typename:std::unordered_map<uint64_t,reg_mapping_t>
addressRange	vp/display.hpp	/^	static const size_t addressRange = sizeof(Framebuffer);$/;"	m	struct:Display	typeref:typename:const size_t
all	build/Makefile	/^all:soc$/;"	t
allow_read	vp/tlm_map.h	/^        bool allow_read = true;$/;"	m	struct:vp::map::access_mode	typeref:typename:bool
allow_write	vp/tlm_map.h	/^        bool allow_write = true;$/;"	m	struct:vp::map::access_mode	typeref:typename:bool
any_pending	core/csr.h	/^    inline bool any_pending() {$/;"	f	struct:csr_mip	typeref:typename:bool
any_pending	vp/csr.h	/^    inline bool any_pending() {$/;"	f	struct:csr_mip	typeref:typename:bool
aon_end_addr	vp/sifive/sifive_main.cpp	/^    addr_t aon_end_addr       = 0x10007FFF;$/;"	m	struct:Options	typeref:typename:addr_t	file:
aon_start_addr	vp/sifive/sifive_main.cpp	/^    addr_t aon_start_addr     = 0x10000000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
aq	core/instr.h	/^    inline bool aq() {$/;"	f	struct:Instruction	typeref:typename:bool
aq	vp/instr.h	/^    inline bool aq() {$/;"	f	struct:Instruction	typeref:typename:bool
arp_eth_header	vp/ethernet.h	/^struct arp_eth_header {$/;"	s
asInt	vp/flash.h	/^    	uint64_t asInt;$/;"	m	union:Flashcontroller::__anon17d1bc3e010a	typeref:typename:uint64_t
asInt	vp/flash.h	/^    	uint64_t asInt;$/;"	m	union:Flashcontroller::__anon17d1bc3e020a	typeref:typename:uint64_t
asRaw	vp/flash.h	/^    	uint8_t asRaw[8];$/;"	m	union:Flashcontroller::__anon17d1bc3e010a	typeref:typename:uint8_t[8]
asRaw	vp/flash.h	/^    	uint8_t asRaw[8];$/;"	m	union:Flashcontroller::__anon17d1bc3e020a	typeref:typename:uint8_t[8]
asid	core/csr.h	/^            unsigned asid: 9;   \/\/ WARL$/;"	m	struct:csr_satp::__anon50a6ad1b100a::__anon50a6ad1b1108	typeref:typename:unsigned:9
asid	vp/csr.h	/^            unsigned asid: 9;   \/\/ WARL$/;"	m	struct:csr_satp::__anon8468e878100a::__anon8468e8781108	typeref:typename:unsigned:9
at	core/csr.h	/^    csr_base &at(uint32_t addr) {$/;"	f	struct:csr_table	typeref:typename:csr_base &
at	vp/csr.h	/^    csr_base &at(uint32_t addr) {$/;"	f	struct:csr_table	typeref:typename:csr_base &
b_transport	PEs/PE.cpp	/^void PE::b_transport$/;"	f	class:PE	typeref:typename:void
bank	core/csr.h	/^            unsigned bank: 25;$/;"	m	struct:csr_mvendorid::__anon50a6ad1b030a::__anon50a6ad1b0408	typeref:typename:unsigned:25
bank	vp/csr.h	/^            unsigned bank: 25;$/;"	m	struct:csr_mvendorid::__anon8468e878030a::__anon8468e8780408	typeref:typename:unsigned:25
base	core/csr.h	/^            unsigned base: 30;	\/\/ WARL$/;"	m	struct:csr_mtvec::__anon50a6ad1b070a::__anon50a6ad1b0808	typeref:typename:unsigned:30
base	vp/csr.h	/^            unsigned base: 30;	\/\/ WARL$/;"	m	struct:csr_mtvec::__anon8468e878070a::__anon8468e8780808	typeref:typename:unsigned:30
batch_len	PEs/PE.h	/^			unsigned batch_len:	12;	$/;"	m	struct:first_level_config::__anon1f78fa87010a::__anon1f78fa870308	typeref:typename:unsigned:12
batch_len	RFU/contextreg_if.h	/^			unsigned batch_len	:10;	$/;"	m	struct:slc::__anone86e04c8050a::__anone86e04c80708	typeref:typename:unsigned:10
batch_len	RFU/contextreg_if.h	/^			unsigned batch_len	:10;$/;"	m	struct:flc::__anone86e04c8010a::__anone86e04c80308	typeref:typename:unsigned:10
begin_allocate_event	RFU/ReconfigController.h	/^		sc_event begin_allocate_event;$/;"	m	class:ReconfigController	typeref:typename:sc_event
begin_monitor_busy_event	RFU/ReconfigController.h	/^		sc_event begin_monitor_busy_event;$/;"	m	class:ReconfigController	typeref:typename:sc_event
begin_response_thread	core/device_proxy.cpp	/^void DeviceProxy::begin_response_thread()$/;"	f	class:DeviceProxy	typeref:typename:void
blank	RFU/contextreg_if.h	/^			unsigned blank		:24;$/;"	m	struct:slc::__anone86e04c8050a::__anone86e04c80808	typeref:typename:unsigned:24
blank	RFU/contextreg_if.h	/^			unsigned blank		:25;$/;"	m	struct:flc::__anone86e04c8010a::__anone86e04c80408	typeref:typename:unsigned:25
blockBuf	vp/flash.h	/^    Blockbuffer<BLOCKSIZE>* blockBuf;$/;"	m	struct:Flashcontroller	typeref:typename:Blockbuffer<BLOCKSIZE> *
blockbufRaw	vp/flash.h	/^    uint8_t blockbufRaw[sizeof(Blockbuffer<BLOCKSIZE>)];$/;"	m	struct:Flashcontroller	typeref:typename:uint8_t[]
breakpoint_t	vp/gdb_stub.cpp	/^struct breakpoint_t {$/;"	s	file:
breakpoints	core/iss.h	/^    std::unordered_set<uint32_t> breakpoints;$/;"	m	struct:ISS	typeref:typename:std::unordered_set<uint32_t>
breakpoints	vp/iss.h	/^    std::unordered_set<uint32_t> breakpoints;$/;"	m	struct:ISS	typeref:typename:std::unordered_set<uint32_t>
buf	vp/display.hpp	/^		Framebuffer* buf;$/;"	m	union:Display::__anone801af26010a	typeref:typename:Framebuffer *
buf	vp/flash.h	/^	uint8_t buf[width];$/;"	m	struct:Blockbuffer	typeref:typename:uint8_t[]
buffer	core/dma.h	/^    std::array<uint8_t, 64> buffer;$/;"	m	struct:SimpleDMA	typeref:typename:std::array<uint8_t,64>
buffer	vp/dma.h	/^    std::array<uint8_t, 64> buffer;$/;"	m	struct:SimpleDMA	typeref:typename:std::array<uint8_t,64>
bufsize	vp/gdb_stub.h	/^    static constexpr size_t bufsize = 1024 * 8;$/;"	m	struct:DebugCoreRunner	typeref:typename:size_t
bus_read	vp/tlm_map.h	/^        uint32_t bus_read() {$/;"	f	struct:vp::map::reg_mapping_t	typeref:typename:uint32_t
bus_write	vp/tlm_map.h	/^        void bus_write(uint32_t new_value) {$/;"	f	struct:vp::map::reg_mapping_t	typeref:typename:void
busy	RFU/contextreg_if.h	/^			unsigned busy		:1;$/;"	m	struct:slc::__anone86e04c8050a::__anone86e04c80608	typeref:typename:unsigned:1
busy_changed_event	RFU/ReconfigController.h	/^		sc_event busy_changed_event;$/;"	m	class:ReconfigController	typeref:typename:sc_event
c_b12	core/instr.h	/^    inline uint32_t c_b12() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
c_b12	vp/instr.h	/^    inline uint32_t c_b12() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
c_f2_high	core/instr.h	/^    inline uint32_t c_f2_high() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
c_f2_high	vp/instr.h	/^    inline uint32_t c_f2_high() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
c_f2_low	core/instr.h	/^    inline uint32_t c_f2_low() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
c_f2_low	vp/instr.h	/^    inline uint32_t c_f2_low() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
c_format	core/instr.h	/^    inline uint32_t c_format() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
c_format	vp/instr.h	/^    inline uint32_t c_format() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
c_imm	core/instr.h	/^    inline uint32_t c_imm() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
c_imm	vp/instr.h	/^    inline uint32_t c_imm() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
c_opcode	core/instr.h	/^    inline uint32_t c_opcode() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
c_opcode	vp/instr.h	/^    inline uint32_t c_opcode() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
c_rd	core/instr.h	/^    inline uint32_t c_rd() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
c_rd	vp/instr.h	/^    inline uint32_t c_rd() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
c_rd_small	core/instr.h	/^    inline uint32_t c_rd_small() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
c_rd_small	vp/instr.h	/^    inline uint32_t c_rd_small() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
c_rs2	core/instr.h	/^    inline uint32_t c_rs2() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
c_rs2	vp/instr.h	/^    inline uint32_t c_rs2() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
c_rs2_small	core/instr.h	/^    inline uint32_t c_rs2_small() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
c_rs2_small	vp/instr.h	/^    inline uint32_t c_rs2_small() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
c_uimm	core/instr.h	/^    inline uint32_t c_uimm() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
c_uimm	vp/instr.h	/^    inline uint32_t c_uimm() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
callback_t	vp/tlm_map.h	/^        typedef std::function<void ()> callback_t;$/;"	t	struct:vp::map::RegisterMapping
callback_t	vp/tlm_map.h	/^        typedef std::function<void ()> callback_t;$/;"	t	struct:vp::map::register_access_t
can_read	vp/tlm_map.h	/^        bool can_read() {$/;"	f	struct:vp::map::access_mode	typeref:typename:bool
can_write	vp/tlm_map.h	/^        bool can_write() {$/;"	f	struct:vp::map::access_mode	typeref:typename:bool
cb_id	PEs/PE.h	/^			unsigned cb_id:		4;$/;"	m	struct:first_level_config::__anon1f78fa87010a::__anon1f78fa870208	typeref:typename:unsigned:4
cb_id	PEs/PE.h	/^			unsigned cb_id:		4;$/;"	m	struct:first_level_config::__anon1f78fa87010a::__anon1f78fa870308	typeref:typename:unsigned:4
check_and_post_process	core/main.cpp	/^	Options &check_and_post_process()$/;"	f	struct:Options	typeref:typename:Options &	file:
check_and_post_process	vp/main.cpp	/^    Options &check_and_post_process() {$/;"	f	struct:Options	typeref:typename:Options &	file:
check_and_post_process	vp/sifive/sifive_main.cpp	/^    Options &check_and_post_process() {$/;"	f	struct:Options	typeref:typename:Options &	file:
clean	build/Makefile	/^clean:$/;"	t
clear	vp/flash.h	/^	void clear()$/;"	f	struct:Blockbuffer	typeref:typename:void
clear_bits	core/csr.h	/^    void clear_bits(int32_t mask) {$/;"	f	struct:csr_base	typeref:typename:void
clear_bits	vp/csr.h	/^    void clear_bits(int32_t mask, PrivilegeLevel access_level=PrivilegeLevel::Machine) {$/;"	f	struct:csr_base	typeref:typename:void
clint	core/iss.h	/^    clint_if *clint;$/;"	m	struct:ISS	typeref:typename:clint_if *
clint	vp/iss.h	/^    clint_if *clint;$/;"	m	struct:ISS	typeref:typename:clint_if *
clint_end_addr	core/main.cpp	/^	addr_t clint_end_addr		= 0x0200ffff;$/;"	m	struct:Options	typeref:typename:addr_t	file:
clint_end_addr	vp/main.cpp	/^    addr_t clint_end_addr     = 0x0200ffff;$/;"	m	struct:Options	typeref:typename:addr_t	file:
clint_end_addr	vp/sifive/sifive_main.cpp	/^    addr_t clint_end_addr     = 0x0200FFFF;$/;"	m	struct:Options	typeref:typename:addr_t	file:
clint_if	core/clint_if.h	/^struct clint_if$/;"	s
clint_if	vp/clint.h	/^struct clint_if {$/;"	s
clint_start_addr	core/main.cpp	/^	addr_t clint_start_addr		= 0x02000000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
clint_start_addr	vp/main.cpp	/^    addr_t clint_start_addr   = 0x02000000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
clint_start_addr	vp/sifive/sifive_main.cpp	/^    addr_t clint_start_addr   = 0x02000000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
clock_cycle	core/clint_if.h	/^	sc_core::sc_time clock_cycle = sc_core::sc_time(10, sc_core::SC_NS);$/;"	m	struct:Clint	typeref:typename:sc_core::sc_time
clock_cycle	vp/clint.h	/^    sc_core::sc_time clock_cycle = sc_core::sc_time(10, sc_core::SC_NS);$/;"	m	struct:CLINT	typeref:typename:sc_core::sc_time
clock_cycle	vp/iss.h	/^    sc_core::sc_time clock_cycle = sc_core::sc_time(10, sc_core::SC_NS);$/;"	m	struct:DataMemoryProxy	typeref:typename:sc_core::sc_time
clock_cycle	vp/iss.h	/^    sc_core::sc_time clock_cycle = sc_core::sc_time(10, sc_core::SC_NS);$/;"	m	struct:InstrMemoryProxy	typeref:typename:sc_core::sc_time
clock_cycle	vp/plic.h	/^    sc_core::sc_time clock_cycle;$/;"	m	struct:PLIC	typeref:typename:sc_core::sc_time
clock_period	RFU/define.h	/^const sc_core::sc_time clock_period = sc_time(10,sc_core::SC_NS);$/;"	v	typeref:typename:const sc_core::sc_time
compilation_database_folder	.ycm_extra_conf.py	/^compilation_database_folder = ''$/;"	v
compute_checksum_string	vp/gdb_stub.cpp	/^std::string compute_checksum_string(const std::string &msg) {$/;"	f	typeref:typename:std::string
contains	core/bus.h	/^	bool contains(uint64_t addr)$/;"	f	struct:PortMapping	typeref:typename:bool
contains	vp/bus.h	/^    bool contains(uint64_t addr) {$/;"	f	struct:PortMapping	typeref:typename:bool
contextreg_if	RFU/contextreg_if.h	/^class contextreg_if$/;"	c
core	core/iss.h	/^    ISS &core;$/;"	m	struct:DirectCoreRunner	typeref:typename:ISS &
core	vp/gdb_stub.h	/^    ISS &core;$/;"	m	struct:DebugCoreRunner	typeref:typename:ISS &
core	vp/iss.h	/^    ISS &core;$/;"	m	struct:DirectCoreRunner	typeref:typename:ISS &
createSM	vp/display.cpp	/^void Display::createSM()$/;"	f	class:Display	typeref:typename:void
csr	core/instr.h	/^    inline uint32_t csr() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
csr	vp/instr.h	/^    inline uint32_t csr() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
csr_32	core/csr.h	/^struct csr_32 : public csr_base {$/;"	s
csr_32	vp/csr.h	/^struct csr_32 : public csr_base {$/;"	s
csr_64	core/csr.h	/^struct csr_64 {$/;"	s
csr_64	vp/csr.h	/^struct csr_64 {$/;"	s
csr_64_high	core/csr.h	/^    csr_64_high(csr_64 &obj, uint32_t addr, const char *name)$/;"	f	struct:csr_64_high
csr_64_high	core/csr.h	/^struct csr_64_high : public csr_base {$/;"	s
csr_64_high	vp/csr.h	/^    csr_64_high(csr_64 &obj, uint32_t addr, const char *name)$/;"	f	struct:csr_64_high
csr_64_high	vp/csr.h	/^struct csr_64_high : public csr_base {$/;"	s
csr_64_low	core/csr.h	/^    csr_64_low(csr_64 &obj, uint32_t addr, const char *name)$/;"	f	struct:csr_64_low
csr_64_low	core/csr.h	/^struct csr_64_low : public csr_base {$/;"	s
csr_64_low	vp/csr.h	/^    csr_64_low(csr_64 &obj, uint32_t addr, const char *name)$/;"	f	struct:csr_64_low
csr_64_low	vp/csr.h	/^struct csr_64_low : public csr_base {$/;"	s
csr_addresses	core/csr.h	/^enum csr_addresses {$/;"	g
csr_addresses	vp/csr.h	/^enum csr_addresses {$/;"	g
csr_base	core/csr.h	/^    csr_base(uint32_t addr, const char *name)$/;"	f	struct:csr_base
csr_base	core/csr.h	/^struct csr_base {$/;"	s
csr_base	vp/csr.h	/^    csr_base(uint32_t addr, const char *name)$/;"	f	struct:csr_base
csr_base	vp/csr.h	/^struct csr_base {$/;"	s
csr_mcause	core/csr.h	/^struct csr_mcause : public csr_base {$/;"	s
csr_mcause	vp/csr.h	/^struct csr_mcause : public csr_base {$/;"	s
csr_mepc	core/csr.h	/^struct csr_mepc : public csr_base {$/;"	s
csr_mepc	vp/csr.h	/^struct csr_mepc : public csr_base {$/;"	s
csr_mie	core/csr.h	/^struct csr_mie : public csr_base {$/;"	s
csr_mie	vp/csr.h	/^struct csr_mie : public csr_base {$/;"	s
csr_mip	core/csr.h	/^struct csr_mip : public csr_base {$/;"	s
csr_mip	vp/csr.h	/^struct csr_mip : public csr_base {$/;"	s
csr_misa	core/csr.h	/^    csr_misa(uint32_t addr, const char *name)$/;"	f	struct:csr_misa
csr_misa	core/csr.h	/^struct csr_misa : public csr_base {$/;"	s
csr_misa	vp/csr.h	/^    csr_misa(uint32_t addr, const char *name)$/;"	f	struct:csr_misa
csr_misa	vp/csr.h	/^struct csr_misa : public csr_base {$/;"	s
csr_mstatus	core/csr.h	/^struct csr_mstatus : public csr_base {$/;"	s
csr_mstatus	vp/csr.h	/^struct csr_mstatus : public csr_base {$/;"	s
csr_mtvec	core/csr.h	/^struct csr_mtvec : public csr_base {$/;"	s
csr_mtvec	vp/csr.h	/^struct csr_mtvec : public csr_base {$/;"	s
csr_mvendorid	core/csr.h	/^struct csr_mvendorid : public csr_base {$/;"	s
csr_mvendorid	vp/csr.h	/^struct csr_mvendorid : public csr_base {$/;"	s
csr_pmpcfg	core/csr.h	/^struct csr_pmpcfg : public csr_base {$/;"	s
csr_pmpcfg	vp/csr.h	/^struct csr_pmpcfg : public csr_base {$/;"	s
csr_satp	core/csr.h	/^struct csr_satp : public csr_base {$/;"	s
csr_satp	vp/csr.h	/^struct csr_satp : public csr_base {$/;"	s
csr_table	core/csr.h	/^struct csr_table {$/;"	s
csr_table	vp/csr.h	/^struct csr_table {$/;"	s
csr_update_and_get	core/iss.h	/^    csr_base &csr_update_and_get(uint32_t addr) {$/;"	f	struct:ISS	typeref:typename:csr_base &
csr_update_and_get	vp/iss.h	/^    csr_base &csr_update_and_get(uint32_t addr) {$/;"	f	struct:ISS	typeref:typename:csr_base &
csrs	core/iss.h	/^    csr_table csrs;$/;"	m	struct:ISS	typeref:typename:csr_table
csrs	vp/iss.h	/^    csr_table csrs;$/;"	m	struct:ISS	typeref:typename:csr_table
cycle_time	core/iss.h	/^    sc_core::sc_time cycle_time;$/;"	m	struct:ISS	typeref:typename:sc_core::sc_time
cycle_time	vp/iss.h	/^    sc_core::sc_time cycle_time;$/;"	m	struct:ISS	typeref:typename:sc_core::sc_time
data	core/instr.h	/^    inline uint32_t data() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
data	vp/instr.h	/^    inline uint32_t data() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
data	vp/memory.h	/^    uint8_t *data;$/;"	m	struct:SimpleMemory	typeref:typename:uint8_t *
data_frame	vp/sensor.h	/^    std::array<uint8_t, 64> data_frame;$/;"	m	struct:SimpleSensor	typeref:typename:std::array<uint8_t,64>
data_frame	vp/sensor2.h	/^    std::array<uint8_t, 64> data_frame;$/;"	m	struct:SimpleSensor2	typeref:typename:std::array<uint8_t,64>
data_frame_access_callback	vp/sensor2.h	/^    void data_frame_access_callback(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay) {$/;"	f	struct:SimpleSensor2	typeref:typename:void
data_memory_interface	core/mem_if.h	/^struct data_memory_interface$/;"	s
data_memory_interface	vp/iss.h	/^struct data_memory_interface {$/;"	s
database	.ycm_extra_conf.py	/^  database = ycm_core.CompilationDatabase( compilation_database_folder )$/;"	v
debug_memory_mapping	vp/gdb_stub.h	/^struct debug_memory_mapping {$/;"	s
debug_mode	core/iss.h	/^    bool debug_mode = false;$/;"	m	struct:ISS	typeref:typename:bool
debug_mode	vp/iss.h	/^    bool debug_mode = false;$/;"	m	struct:ISS	typeref:typename:bool
decode	core/bus.h	/^unsigned decode(uint64_t addr)$/;"	f	struct:Bus	typeref:typename:unsigned
decode	vp/bus.h	/^    unsigned decode(uint64_t addr) {$/;"	f	struct:SimpleBus	typeref:typename:unsigned
decode_and_expand_compressed	core/instr.cpp	/^Opcode::mapping Instruction::decode_and_expand_compressed() $/;"	f	class:Instruction	typeref:typename:Opcode::mapping
decode_and_expand_compressed	vp/instr.cpp	/^Opcode::mapping Instruction::decode_and_expand_compressed() {$/;"	f	class:Instruction	typeref:typename:Opcode::mapping
decode_compressed	core/instr.cpp	/^Compressed::Opcode decode_compressed(Instruction &instr) $/;"	f	typeref:typename:Compressed::Opcode
decode_compressed	vp/instr.cpp	/^Compressed::Opcode decode_compressed(Instruction &instr) {$/;"	f	typeref:typename:Compressed::Opcode
decode_normal	core/instr.cpp	/^Opcode::mapping Instruction::decode_normal() $/;"	f	class:Instruction	typeref:typename:Opcode::mapping
decode_normal	vp/instr.cpp	/^Opcode::mapping Instruction::decode_normal() {$/;"	f	class:Instruction	typeref:typename:Opcode::mapping
delay	vp/tlm_map.h	/^        sc_core::sc_time &delay;$/;"	m	struct:vp::map::register_access_t	typeref:typename:sc_core::sc_time &
dequeue	core/mem_if.h	/^				dequeue                                               \/\/\/ dequeue entry$/;"	f	class:CombinedMemoryInterface::tg_queue_c	typeref:typename:tlm::tlm_generic_payload *
devrdser	RFU/contextreg_if.h	/^			unsigned devrdser	:2;$/;"	m	struct:flc::__anone86e04c8010a::__anone86e04c80308	typeref:typename:unsigned:2
direct_memory_interface	vp/iss.h	/^struct direct_memory_interface {$/;"	s
dirty	vp/flash.h	/^	bool dirty;$/;"	m	struct:Blockbuffer	typeref:typename:bool
disabled	vp/ethernet.h	/^    bool disabled;$/;"	m	struct:EthernetDevice	typeref:typename:bool
dispatch_event	RFU/ReconfigController.h	/^		sc_event dispatch_event;$/;"	m	class:ReconfigController	typeref:typename:sc_event
display_end_addr	vp/main.cpp	/^    addr_t display_end_addr   = display_start_addr + Display::addressRange;$/;"	m	struct:Options	typeref:typename:addr_t	file:
display_start_addr	vp/main.cpp	/^    addr_t display_start_addr = 0x72000000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
div	vp/sifive/uart.h	/^    uint32_t div = 0;$/;"	m	struct:UART	typeref:typename:uint32_t
dma_end_addr	vp/main.cpp	/^    addr_t dma_end_addr       = 0x70001000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
dma_start_addr	vp/main.cpp	/^    addr_t dma_start_addr     = 0x70000000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
dmi	vp/iss.h	/^    direct_memory_interface &dmi;$/;"	m	struct:DataMemoryProxy	typeref:typename:direct_memory_interface &
dmi	vp/iss.h	/^    direct_memory_interface &dmi;$/;"	m	struct:InstrMemoryProxy	typeref:typename:direct_memory_interface &
do_transaction	core/dma.h	/^    void do_transaction(tlm::tlm_command cmd, uint64_t addr, uint8_t *data, unsigned num_bytes) /;"	f	struct:SimpleDMA	typeref:typename:void
do_transaction	vp/dma.h	/^    void do_transaction(tlm::tlm_command cmd, uint64_t addr, uint8_t *data, unsigned num_bytes) /;"	f	struct:SimpleDMA	typeref:typename:void
dram_end_addr	vp/sifive/sifive_main.cpp	/^    addr_t dram_end_addr      = dram_start_addr + dram_size - 1;$/;"	m	struct:Options	typeref:typename:addr_t	file:
dram_size	vp/sifive/sifive_main.cpp	/^    addr_t dram_size          = 1024*16;  \/\/ 16 KB dram$/;"	m	struct:Options	typeref:typename:addr_t	file:
dram_start_addr	vp/sifive/sifive_main.cpp	/^    addr_t dram_start_addr    = 0x80000000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
drawLine	vp/display.cpp	/^void Display::drawLine(Framebuffer::Type type, PointF from, PointF to, Color color)$/;"	f	class:Display	typeref:typename:void
dst	core/dma.h	/^    uint32_t dst  = 0;$/;"	m	struct:SimpleDMA	typeref:typename:uint32_t
dst	vp/dma.h	/^    uint32_t dst  = 0;$/;"	m	struct:SimpleDMA	typeref:typename:uint32_t
dump_ethernet_frame	vp/ethernet.cpp	/^void dump_ethernet_frame(uint8_t *buf, size_t size, bool verbose = false) {$/;"	f	typeref:typename:void
e	core/regfile.h	/^    enum e {$/;"	g	struct:RegFile
e	vp/iss.h	/^    enum e {$/;"	g	struct:RegFile
e_ehsize	core/elf_loader.h	/^    Elf32_Half	e_ehsize;$/;"	m	struct:__anon947b0a800108	typeref:typename:Elf32_Half
e_ehsize	vp/elf_loader.h	/^    Elf32_Half	e_ehsize;$/;"	m	struct:__anonb9f73b3d0108	typeref:typename:Elf32_Half
e_entry	core/elf_loader.h	/^    Elf32_Addr	e_entry;$/;"	m	struct:__anon947b0a800108	typeref:typename:Elf32_Addr
e_entry	vp/elf_loader.h	/^    Elf32_Addr	e_entry;$/;"	m	struct:__anonb9f73b3d0108	typeref:typename:Elf32_Addr
e_flags	core/elf_loader.h	/^    Elf32_Word	e_flags;$/;"	m	struct:__anon947b0a800108	typeref:typename:Elf32_Word
e_flags	vp/elf_loader.h	/^    Elf32_Word	e_flags;$/;"	m	struct:__anonb9f73b3d0108	typeref:typename:Elf32_Word
e_ident	core/elf_loader.h	/^    uint8_t		e_ident[ELF_NIDENT];$/;"	m	struct:__anon947b0a800108	typeref:typename:uint8_t[]
e_ident	vp/elf_loader.h	/^    uint8_t		e_ident[ELF_NIDENT];$/;"	m	struct:__anonb9f73b3d0108	typeref:typename:uint8_t[]
e_machine	core/elf_loader.h	/^    Elf32_Half	e_machine;$/;"	m	struct:__anon947b0a800108	typeref:typename:Elf32_Half
e_machine	vp/elf_loader.h	/^    Elf32_Half	e_machine;$/;"	m	struct:__anonb9f73b3d0108	typeref:typename:Elf32_Half
e_phentsize	core/elf_loader.h	/^    Elf32_Half	e_phentsize;$/;"	m	struct:__anon947b0a800108	typeref:typename:Elf32_Half
e_phentsize	vp/elf_loader.h	/^    Elf32_Half	e_phentsize;$/;"	m	struct:__anonb9f73b3d0108	typeref:typename:Elf32_Half
e_phnum	core/elf_loader.h	/^    Elf32_Half	e_phnum;$/;"	m	struct:__anon947b0a800108	typeref:typename:Elf32_Half
e_phnum	vp/elf_loader.h	/^    Elf32_Half	e_phnum;$/;"	m	struct:__anonb9f73b3d0108	typeref:typename:Elf32_Half
e_phoff	core/elf_loader.h	/^    Elf32_Off	e_phoff;$/;"	m	struct:__anon947b0a800108	typeref:typename:Elf32_Off
e_phoff	vp/elf_loader.h	/^    Elf32_Off	e_phoff;$/;"	m	struct:__anonb9f73b3d0108	typeref:typename:Elf32_Off
e_run	vp/plic.h	/^    sc_core::sc_event e_run;$/;"	m	struct:PLIC	typeref:typename:sc_core::sc_event
e_shentsize	core/elf_loader.h	/^    Elf32_Half	e_shentsize;$/;"	m	struct:__anon947b0a800108	typeref:typename:Elf32_Half
e_shentsize	vp/elf_loader.h	/^    Elf32_Half	e_shentsize;$/;"	m	struct:__anonb9f73b3d0108	typeref:typename:Elf32_Half
e_shnum	core/elf_loader.h	/^    Elf32_Half	e_shnum;$/;"	m	struct:__anon947b0a800108	typeref:typename:Elf32_Half
e_shnum	vp/elf_loader.h	/^    Elf32_Half	e_shnum;$/;"	m	struct:__anonb9f73b3d0108	typeref:typename:Elf32_Half
e_shoff	core/elf_loader.h	/^    Elf32_Off	e_shoff;$/;"	m	struct:__anon947b0a800108	typeref:typename:Elf32_Off
e_shoff	vp/elf_loader.h	/^    Elf32_Off	e_shoff;$/;"	m	struct:__anonb9f73b3d0108	typeref:typename:Elf32_Off
e_shstrndx	core/elf_loader.h	/^    Elf32_Half	e_shstrndx;$/;"	m	struct:__anon947b0a800108	typeref:typename:Elf32_Half
e_shstrndx	vp/elf_loader.h	/^    Elf32_Half	e_shstrndx;$/;"	m	struct:__anonb9f73b3d0108	typeref:typename:Elf32_Half
e_type	core/elf_loader.h	/^    Elf32_Half	e_type;$/;"	m	struct:__anon947b0a800108	typeref:typename:Elf32_Half
e_type	vp/elf_loader.h	/^    Elf32_Half	e_type;$/;"	m	struct:__anonb9f73b3d0108	typeref:typename:Elf32_Half
e_version	core/elf_loader.h	/^    Elf32_Word	e_version;$/;"	m	struct:__anon947b0a800108	typeref:typename:Elf32_Word
e_version	vp/elf_loader.h	/^    Elf32_Word	e_version;$/;"	m	struct:__anonb9f73b3d0108	typeref:typename:Elf32_Word
eip	vp/plic.h	/^    bool eip = false;$/;"	m	struct:PLIC	typeref:typename:bool
elf	core/elf_loader.h	/^    boost::iostreams::mapped_file_source elf;$/;"	m	struct:ELFLoader	typeref:typename:boost::iostreams::mapped_file_source
elf	vp/elf_loader.h	/^    boost::iostreams::mapped_file_source elf;$/;"	m	struct:ELFLoader	typeref:typename:boost::iostreams::mapped_file_source
enabled_mask	vp/plic.h	/^    uint64_t enabled_mask = -1;$/;"	m	struct:PLIC	typeref:typename:uint64_t
end	vp/bus.h	/^    uint64_t end;$/;"	m	struct:PortMapping	typeref:typename:uint64_t
end	vp/sifive/uart.h	/^    unsigned end;$/;"	m	struct:Reg32Field	typeref:typename:unsigned
end	vp/tlm_map.h	/^        uint64_t end;$/;"	m	struct:vp::map::AddressMapping	typeref:typename:uint64_t
end_monitor_busy_event	RFU/ReconfigController.h	/^		sc_event end_monitor_busy_event;	$/;"	m	class:ReconfigController	typeref:typename:sc_event
end_request_thread	core/device_proxy.cpp	/^void DeviceProxy::end_request_thread()$/;"	f	class:DeviceProxy	typeref:typename:void
end_response_thread	core/mem_if.cpp	/^void CombinedMemoryInterface::end_response_thread()$/;"	f	class:CombinedMemoryInterface	typeref:typename:void
enqueue	core/mem_if.h	/^				enqueue                                                \/\/\/ enqueue entry (create)$/;"	f	class:CombinedMemoryInterface::tg_queue_c	typeref:typename:void
ensure	core/csr.h	/^inline void ensure(bool cond) {$/;"	f	typeref:typename:void
ensure	vp/csr.h	/^inline void ensure(bool cond) {$/;"	f	typeref:typename:void
ethernet_end_addr	vp/main.cpp	/^    addr_t ethernet_end_addr  = ethernet_start_addr + 1500;$/;"	m	struct:Options	typeref:typename:addr_t	file:
ethernet_start_addr	vp/main.cpp	/^    addr_t ethernet_start_addr= 0x30000000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
exception_code	core/csr.h	/^            unsigned exception_code: 31;	\/\/ WLRL$/;"	m	struct:csr_mcause::__anon50a6ad1b0e0a::__anon50a6ad1b0f08	typeref:typename:unsigned:31
exception_code	vp/csr.h	/^            unsigned exception_code: 31;	\/\/ WLRL$/;"	m	struct:csr_mcause::__anon8468e8780e0a::__anon8468e8780f08	typeref:typename:unsigned:31
exec_step	core/iss.h	/^    Opcode::mapping exec_step() {$/;"	f	struct:ISS	typeref:typename:Opcode::mapping
exec_step	vp/iss.h	/^    Opcode::mapping exec_step() {$/;"	f	struct:ISS	typeref:typename:Opcode::mapping
execute_memory_access	vp/tlm_map.h	/^    inline void execute_memory_access(tlm::tlm_generic_payload &trans, uint8_t *local_memory) {$/;"	f	namespace:vp::map	typeref:typename:void
execute_syscall	core/syscall.cpp	/^int SyscallHandler::execute_syscall(ulong n, ulong _a0, ulong _a1, ulong _a2, ulong _a3) {$/;"	f	class:SyscallHandler	typeref:typename:int
execute_syscall	vp/syscall.cpp	/^int SyscallHandler::execute_syscall(ulong n, ulong _a0, ulong _a1, ulong _a2, ulong _a3) {$/;"	f	class:SyscallHandler	typeref:typename:int
expand_compressed	core/instr.cpp	/^Opcode::mapping expand_compressed(Instruction &instr, Compressed::Opcode op) $/;"	f	typeref:typename:Opcode::mapping
expand_compressed	vp/instr.cpp	/^Opcode::mapping expand_compressed(Instruction &instr, Compressed::Opcode op) {$/;"	f	typeref:typename:Opcode::mapping
extensions	core/csr.h	/^            unsigned extensions: 26;$/;"	m	struct:csr_misa::__anon50a6ad1b010a::__anon50a6ad1b0208	typeref:typename:unsigned:26
extensions	vp/csr.h	/^            unsigned extensions: 26;$/;"	m	struct:csr_misa::__anon8468e878010a::__anon8468e8780208	typeref:typename:unsigned:26
external_interrupt_target	core/irq_if.h	/^struct external_interrupt_target {$/;"	s
external_interrupt_target	vp/irq_if.h	/^struct external_interrupt_target {$/;"	s
fd	vp/flash.h	/^	int fd;$/;"	m	struct:Blockbuffer	typeref:typename:int
file	vp/mram.h	/^    fstream file;$/;"	m	struct:SimpleMRAM	typeref:typename:fstream
filename	core/elf_loader.h	/^    const char *filename;$/;"	m	struct:ELFLoader	typeref:typename:const char *
filename	vp/elf_loader.h	/^    const char *filename;$/;"	m	struct:ELFLoader	typeref:typename:const char *
fillFrame	vp/display.cpp	/^void Display::fillFrame(Framebuffer::Type type, Color color)$/;"	f	class:Display	typeref:typename:void
filter	vp/sensor.h	/^    uint32_t filter = 0;$/;"	m	struct:SimpleSensor	typeref:typename:uint32_t
filter	vp/sensor2.h	/^    uint32_t filter = 0;$/;"	m	struct:SimpleSensor2	typeref:typename:uint32_t
finish_allocate_event	RFU/ReconfigController.h	/^		sc_event finish_allocate_event;$/;"	m	class:ReconfigController	typeref:typename:sc_event
first_level_config	PEs/PE.h	/^struct first_level_config$/;"	s
flags	.ycm_extra_conf.py	/^flags = [$/;"	v
flash_device	vp/main.cpp	/^    std::string flash_device;$/;"	m	struct:Options	typeref:typename:std::string	file:
flash_end_addr	vp/main.cpp	/^    addr_t flash_end_addr     = flash_start_addr + Flashcontroller::ADDR_SPACE;	\/\/Usually 528 /;"	m	struct:Options	typeref:typename:addr_t	file:
flash_end_addr	vp/sifive/sifive_main.cpp	/^    addr_t flash_end_addr     = flash_start_addr + flash_size - 1;$/;"	m	struct:Options	typeref:typename:addr_t	file:
flash_size	vp/sifive/sifive_main.cpp	/^    addr_t flash_size         = 1024*1024*512;  \/\/ 512 MB flash$/;"	m	struct:Options	typeref:typename:addr_t	file:
flash_start_addr	vp/main.cpp	/^    addr_t flash_start_addr   = 0x71000000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
flash_start_addr	vp/sifive/sifive_main.cpp	/^    addr_t flash_start_addr   = 0x20000000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
flc	RFU/contextreg_if.h	/^	flc(uint32_t flc)$/;"	f	struct:flc
flc	RFU/contextreg_if.h	/^struct flc$/;"	s
fn	vp/tlm_map.h	/^        callback_t fn;$/;"	m	struct:vp::map::register_access_t	typeref:typename:callback_t
fn_transport_t	vp/tlm_map.h	/^        typedef std::function<void (tlm::tlm_generic_payload &, sc_core::sc_time &)> fn_transpor/;"	t	struct:vp::map::AddressMapping
fp	core/regfile.h	/^        fp = x8,$/;"	e	enum:RegFile::e
fp	vp/iss.h	/^        fp = x8,$/;"	e	enum:RegFile::e
frame	vp/display.hpp	/^	} frame;$/;"	m	struct:Display	typeref:union:Display::__anone801af26010a
free	core/mem_if.h	/^				free                                                  \/\/\/ return transaction$/;"	f	class:CombinedMemoryInterface::tg_queue_c	typeref:typename:void
from	core/bus.h	/^		tlm_utils::simple_target_socket_tagged<Bus>* from;$/;"	m	struct:Bus::ConnectionInfo	typeref:typename:tlm_utils::simple_target_socket_tagged<Bus> *
fs	core/csr.h	/^            unsigned fs: 2;$/;"	m	struct:csr_mstatus::__anon50a6ad1b050a::__anon50a6ad1b0608	typeref:typename:unsigned:2
fs	vp/csr.h	/^            unsigned fs: 2;$/;"	m	struct:csr_mstatus::__anon8468e878050a::__anon8468e8780608	typeref:typename:unsigned:2
fsm_en	PEs/PE.h	/^			unsigned fsm_en:	1;$/;"	m	struct:first_level_config::__anon1f78fa87010a::__anon1f78fa870208	typeref:typename:unsigned:1
funct12	core/instr.h	/^    inline int32_t funct12() {$/;"	f	struct:Instruction	typeref:typename:int32_t
funct12	vp/instr.h	/^    inline int32_t funct12() {$/;"	f	struct:Instruction	typeref:typename:int32_t
funct3	core/instr.h	/^    inline int32_t funct3() {$/;"	f	struct:Instruction	typeref:typename:int32_t
funct3	vp/instr.h	/^    inline int32_t funct3() {$/;"	f	struct:Instruction	typeref:typename:int32_t
funct5	core/instr.h	/^    inline int32_t funct5() {$/;"	f	struct:Instruction	typeref:typename:int32_t
funct5	vp/instr.h	/^    inline int32_t funct5() {$/;"	f	struct:Instruction	typeref:typename:int32_t
funct7	core/instr.h	/^    inline int32_t funct7() {$/;"	f	struct:Instruction	typeref:typename:int32_t
funct7	vp/instr.h	/^    inline int32_t funct7() {$/;"	f	struct:Instruction	typeref:typename:int32_t
gateway_incoming_interrupt	vp/plic.h	/^    void gateway_incoming_interrupt(uint32_t irq_id) {$/;"	f	struct:PLIC	typeref:typename:void
getData	vp/flash.h	/^	void getData(uint8_t* target, uint16_t pos, uint16_t length)$/;"	f	struct:Blockbuffer	typeref:typename:void
get_base_address	core/csr.h	/^    uint32_t get_base_address() {$/;"	f	struct:csr_mtvec	typeref:typename:uint32_t
get_base_address	vp/csr.h	/^    uint32_t get_base_address() {$/;"	f	struct:csr_mtvec	typeref:typename:uint32_t
get_begin_signature_address	core/elf_loader.h	/^    uint32_t get_begin_signature_address() {$/;"	f	struct:ELFLoader	typeref:typename:uint32_t
get_begin_signature_address	vp/elf_loader.h	/^    uint32_t get_begin_signature_address() {$/;"	f	struct:ELFLoader	typeref:typename:uint32_t
get_device_delay	RFU/ReconfigController.cpp	/^sc_core::sc_time ReconfigController::get_device_delay$/;"	f	class:ReconfigController	typeref:typename:sc_core::sc_time
get_device_delay	core/clint_if.cpp	/^sc_core::sc_time Clint::get_device_delay(tlm::tlm_generic_payload &trans, sc_core::sc_time &dela/;"	f	class:Clint	typeref:typename:sc_core::sc_time
get_device_delay	core/memory.cpp	/^sc_core::sc_time Memory::get_device_delay(tlm::tlm_generic_payload &trans, sc_core::sc_time &del/;"	f	class:Memory	typeref:typename:sc_core::sc_time
get_device_delay	core/terminal.h	/^	sc_core::sc_time get_device_delay(tlm::tlm_generic_payload & trans, sc_core::sc_time &delay) ov/;"	f	struct:Terminal	typeref:typename:sc_core::sc_time
get_direct_mem_ptr	vp/memory.h	/^    bool get_direct_mem_ptr(tlm::tlm_generic_payload &trans, tlm::tlm_dmi &dmi) {$/;"	f	struct:SimpleMemory	typeref:typename:bool
get_end_signature_address	core/elf_loader.h	/^    uint32_t get_end_signature_address() {$/;"	f	struct:ELFLoader	typeref:typename:uint32_t
get_end_signature_address	vp/elf_loader.h	/^    uint32_t get_end_signature_address() {$/;"	f	struct:ELFLoader	typeref:typename:uint32_t
get_entrypoint	core/elf_loader.h	/^    uint32_t get_entrypoint() {$/;"	f	struct:ELFLoader	typeref:typename:uint32_t
get_entrypoint	vp/elf_loader.h	/^    uint32_t get_entrypoint() {$/;"	f	struct:ELFLoader	typeref:typename:uint32_t
get_heap_addr	core/elf_loader.h	/^    uint32_t get_heap_addr() {$/;"	f	struct:ELFLoader	typeref:typename:uint32_t
get_heap_addr	vp/elf_loader.h	/^    uint32_t get_heap_addr() {$/;"	f	struct:ELFLoader	typeref:typename:uint32_t
get_load_sections	core/elf_loader.h	/^    std::vector<const Elf32_Phdr *> get_load_sections() {$/;"	f	struct:ELFLoader	typeref:typename:std::vector<const Elf32_Phdr * >
get_load_sections	vp/elf_loader.h	/^    std::vector<const Elf32_Phdr *> get_load_sections() {$/;"	f	struct:ELFLoader	typeref:typename:std::vector<const Elf32_Phdr * >
get_max_heap_memory_consumption	core/syscall.h	/^	uint32_t  get_max_heap_memory_consumption()$/;"	f	struct:SyscallHandler	typeref:typename:uint32_t
get_max_heap_memory_consumption	vp/syscall.h	/^    uint32_t get_max_heap_memory_consumption() {$/;"	f	struct:SyscallHandler	typeref:typename:uint32_t
get_memory_end	core/elf_loader.h	/^    uint32_t get_memory_end() {$/;"	f	struct:ELFLoader	typeref:typename:uint32_t
get_memory_end	vp/elf_loader.h	/^    uint32_t get_memory_end() {$/;"	f	struct:ELFLoader	typeref:typename:uint32_t
get_section	core/elf_loader.h	/^    const Elf32_Shdr *get_section(const char *section_name) { \/\/< 找到节头表中相关的节$/;"	f	struct:ELFLoader	typeref:typename:const Elf32_Shdr *
get_section	vp/elf_loader.h	/^    const Elf32_Shdr *get_section(const char *section_name) { \/\/< 找到节头表中相关的节$/;"	f	struct:ELFLoader	typeref:typename:const Elf32_Shdr *
get_section_string_table	core/elf_loader.h	/^    const char *get_section_string_table() {$/;"	f	struct:ELFLoader	typeref:typename:const char *
get_section_string_table	vp/elf_loader.h	/^    const char *get_section_string_table() {$/;"	f	struct:ELFLoader	typeref:typename:const char *
get_symbol	core/elf_loader.h	/^    const Elf32_Sym *get_symbol(const char *symbol_name) {$/;"	f	struct:ELFLoader	typeref:typename:const Elf32_Sym *
get_symbol	vp/elf_loader.h	/^    const Elf32_Sym *get_symbol(const char *symbol_name) {$/;"	f	struct:ELFLoader	typeref:typename:const Elf32_Sym *
get_symbol_string_table	core/elf_loader.h	/^    const char *get_symbol_string_table() { \/\/< 找到符号表（符号表是ELF文件中诸多/;"	f	struct:ELFLoader	typeref:typename:const char *
get_symbol_string_table	vp/elf_loader.h	/^    const char *get_symbol_string_table() { \/\/< 找到符号表（符号表是ELF文件中诸多/;"	f	struct:ELFLoader	typeref:typename:const char *
global_to_local	core/bus.h	/^	uint64_t global_to_local(uint64_t addr)$/;"	f	struct:PortMapping	typeref:typename:uint64_t
global_to_local	vp/bus.h	/^    uint64_t global_to_local(uint64_t addr) {$/;"	f	struct:PortMapping	typeref:typename:uint64_t
gp	core/regfile.h	/^        gp = x3,$/;"	e	enum:RegFile::e
gp	vp/iss.h	/^        gp = x3,$/;"	e	enum:RegFile::e
gpio0_end_addr	vp/sifive/sifive_main.cpp	/^    addr_t gpio0_end_addr     = 0x10012FFF;$/;"	m	struct:Options	typeref:typename:addr_t	file:
gpio0_start_addr	vp/sifive/sifive_main.cpp	/^    addr_t gpio0_start_addr   = 0x10012000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
guest_address_to_host_pointer	core/syscall.h	/^	uint8_t * guest_address_to_host_pointer(uintptr_t addr)$/;"	f	struct:SyscallHandler	typeref:typename:uint8_t *
guest_address_to_host_pointer	vp/syscall.h	/^    uint8_t *guest_address_to_host_pointer(uintptr_t addr) {$/;"	f	struct:SyscallHandler	typeref:typename:uint8_t *
guest_long	core/syscall.cpp	/^typedef reg_t guest_long;$/;"	t	typeref:typename:reg_t	file:
guest_long	vp/syscall.cpp	/^typedef reg_t guest_long;$/;"	t	typeref:typename:reg_t	file:
guest_to_host_pointer	core/syscall.h	/^	uint8_t * guest_to_host_pointer(void *p)$/;"	f	struct:SyscallHandler	typeref:typename:uint8_t *
guest_to_host_pointer	vp/syscall.h	/^    uint8_t *guest_to_host_pointer(void *p) {$/;"	f	struct:SyscallHandler	typeref:typename:uint8_t *
handle_gdb_loop	vp/gdb_stub.cpp	/^void DebugCoreRunner::handle_gdb_loop(int conn) {$/;"	f	class:DebugCoreRunner	typeref:typename:void
handler	vp/tlm_map.h	/^        fn_transport_t handler;$/;"	m	struct:vp::map::AddressMapping	typeref:typename:fn_transport_t
handler	vp/tlm_map.h	/^        handler_t handler;$/;"	m	struct:vp::map::RegisterMapping	typeref:typename:handler_t
handler_t	vp/tlm_map.h	/^        typedef std::function<void (const register_access_t &)> handler_t;$/;"	t	struct:vp::map::RegisterMapping
has_frame	vp/ethernet.h	/^    bool has_frame;$/;"	m	struct:EthernetDevice	typeref:typename:bool
has_pending_enabled_interrupts	core/iss.h	/^    bool has_pending_enabled_interrupts() {$/;"	f	struct:ISS	typeref:typename:bool
has_pending_enabled_interrupts	vp/iss.h	/^    bool has_pending_enabled_interrupts() {$/;"	f	struct:ISS	typeref:typename:bool
hdr	core/elf_loader.h	/^    const Elf32_Ehdr *hdr;$/;"	m	struct:ELFLoader	typeref:typename:const Elf32_Ehdr *
hdr	vp/elf_loader.h	/^    const Elf32_Ehdr *hdr;$/;"	m	struct:ELFLoader	typeref:typename:const Elf32_Ehdr *
hfrosccfg	vp/sifive/prci.h	/^    uint32_t hfrosccfg = 0;$/;"	m	struct:PRCI	typeref:typename:uint32_t
hfxosccfg	vp/sifive/prci.h	/^    uint32_t hfxosccfg = 0;$/;"	m	struct:PRCI	typeref:typename:uint32_t
high	core/csr.h	/^            int32_t high;$/;"	m	struct:csr_64::__anon50a6ad1b140a::__anon50a6ad1b1508	typeref:typename:int32_t
high	vp/csr.h	/^            int32_t high;$/;"	m	struct:csr_64::__anon8468e878140a::__anon8468e8781508	typeref:typename:int32_t
hlen	vp/ethernet.h	/^    uint8_t hlen;$/;"	m	struct:arp_eth_header	typeref:typename:uint8_t
hp	core/syscall.h	/^	uint32_t	hp = 0; \/\/ heap pointer$/;"	m	struct:SyscallHandler	typeref:typename:uint32_t
hp	vp/syscall.h	/^    uint32_t hp = 0;        \/\/ heap pointer$/;"	m	struct:SyscallHandler	typeref:typename:uint32_t
htype	vp/ethernet.h	/^    uint16_t htype;$/;"	m	struct:arp_eth_header	typeref:typename:uint16_t
ie	vp/sifive/uart.h	/^    uint32_t ie = 0;$/;"	m	struct:UART	typeref:typename:uint32_t
increment	core/csr.h	/^    void increment() {$/;"	f	struct:csr_64	typeref:typename:void
increment	vp/csr.h	/^    void increment() {$/;"	f	struct:csr_64	typeref:typename:void
init	core/csr.h	/^    void init() {$/;"	f	struct:csr_misa	typeref:typename:void
init	core/iss.h	/^    void init(instr_memory_interface *instr_mem, data_memory_interface *data_mem, clint_if *clin/;"	f	struct:ISS	typeref:typename:void
init	core/syscall.h	/^	void init(uint8_t *host_memory_pointer, uint32_t mem_start_address, uint32_t heap_pointer_addre/;"	f	struct:SyscallHandler	typeref:typename:void
init	vp/csr.h	/^    void init() {$/;"	f	struct:csr_misa	typeref:typename:void
init	vp/iss.h	/^    void init(instr_memory_interface *instr_mem, data_memory_interface *data_mem, clint_if *clin/;"	f	struct:ISS	typeref:typename:void
init	vp/syscall.h	/^    void init(uint8_t *host_memory_pointer, uint32_t mem_start_address, uint32_t heap_pointer_ad/;"	f	struct:SyscallHandler	typeref:typename:void
init_network	vp/ethernet.cpp	/^void EthernetDevice::init_network(std::string clonedev) {$/;"	f	class:EthernetDevice	typeref:typename:void
input_program	core/main.cpp	/^	std::string input_program;$/;"	m	struct:Options	typeref:typename:std::string	file:
input_program	vp/main.cpp	/^    std::string input_program;$/;"	m	struct:Options	typeref:typename:std::string	file:
input_program	vp/sifive/sifive_main.cpp	/^    std::string input_program;$/;"	m	struct:Options	typeref:typename:std::string	file:
instr	core/instr.h	/^    int32_t instr;$/;"	m	struct:Instruction	typeref:typename:int32_t
instr	vp/instr.h	/^    int32_t instr;$/;"	m	struct:Instruction	typeref:typename:int32_t
instr_cycles	core/iss.h	/^    std::array<sc_core::sc_time, Opcode::NUMBER_OF_INSTRUCTIONS> instr_cycles;$/;"	m	struct:ISS	typeref:typename:std::array<sc_core::sc_time,Opcode::NUMBER_OF_INSTRUCTIONS>
instr_cycles	vp/iss.h	/^    std::array<sc_core::sc_time, Opcode::NUMBER_OF_INSTRUCTIONS> instr_cycles;$/;"	m	struct:ISS	typeref:typename:std::array<sc_core::sc_time,Opcode::NUMBER_OF_INSTRUCTIONS>
instr_mem	core/iss.h	/^    instr_memory_interface *instr_mem;$/;"	m	struct:ISS	typeref:typename:instr_memory_interface *
instr_mem	vp/iss.h	/^    instr_memory_interface *instr_mem;$/;"	m	struct:ISS	typeref:typename:instr_memory_interface *
instr_memory_interface	core/mem_if.h	/^struct instr_memory_interface$/;"	s
instr_memory_interface	vp/iss.h	/^struct instr_memory_interface {$/;"	s
interfaceIdx	vp/ethernet.h	/^    int interfaceIdx = 0;$/;"	m	struct:EthernetDevice	typeref:typename:int
interrupt	core/csr.h	/^            unsigned interrupt: 1;$/;"	m	struct:csr_mcause::__anon50a6ad1b0e0a::__anon50a6ad1b0f08	typeref:typename:unsigned:1
interrupt	vp/csr.h	/^            unsigned interrupt: 1;$/;"	m	struct:csr_mcause::__anon8468e8780e0a::__anon8468e8780f08	typeref:typename:unsigned:1
interrupt_gateway	core/irq_if.h	/^struct interrupt_gateway {$/;"	s
interrupt_gateway	vp/irq_if.h	/^struct interrupt_gateway {$/;"	s
interrupt_priorities	vp/plic.h	/^    std::unordered_map<uint32_t, uint32_t> interrupt_priorities;    \/\/ maps id (lower higher p/;"	m	struct:PLIC	typeref:typename:std::unordered_map<uint32_t,uint32_t>
iobuf	vp/gdb_stub.h	/^    char* iobuf;$/;"	m	struct:DebugCoreRunner	typeref:typename:char *
iof_en	vp/sifive/gpio.h	/^    uint32_t iof_en = 0;$/;"	m	struct:GPIO	typeref:typename:uint32_t
iof_sel	vp/sifive/gpio.h	/^    uint32_t iof_sel = 0;$/;"	m	struct:GPIO	typeref:typename:uint32_t
ip	vp/sifive/uart.h	/^    uint32_t ip = 0;$/;"	m	struct:UART	typeref:typename:uint32_t
irq_event	core/clint_if.h	/^	sc_event irq_event;$/;"	m	struct:Clint	typeref:typename:sc_event
irq_event	vp/clint.h	/^    sc_core::sc_event irq_event;$/;"	m	struct:CLINT	typeref:typename:sc_core::sc_event
irq_number	core/dma.h	/^    uint32_t irq_number = 0;$/;"	m	struct:SimpleDMA	typeref:typename:uint32_t
irq_number	vp/basic_timer.h	/^    uint32_t irq_number = 0;$/;"	m	struct:BasicTimer	typeref:typename:uint32_t
irq_number	vp/dma.h	/^    uint32_t irq_number = 0;$/;"	m	struct:SimpleDMA	typeref:typename:uint32_t
irq_number	vp/ethernet.h	/^    uint32_t irq_number = 0;$/;"	m	struct:EthernetDevice	typeref:typename:uint32_t
irq_number	vp/sensor.h	/^    uint32_t irq_number = 0;$/;"	m	struct:SimpleSensor	typeref:typename:uint32_t
irq_number	vp/sensor2.h	/^    uint32_t irq_number = 0;$/;"	m	struct:SimpleSensor2	typeref:typename:uint32_t
isPacketForUs	vp/ethernet.cpp	/^bool EthernetDevice::isPacketForUs(uint8_t* packet, ssize_t size)$/;"	f	class:EthernetDevice	typeref:typename:bool
is_any_watchpoint_or_hw_breakpoint	vp/gdb_stub.cpp	/^bool is_any_watchpoint_or_hw_breakpoint(const std::string &msg) {$/;"	f	typeref:typename:bool
is_compressed	core/instr.h	/^    inline bool is_compressed() {$/;"	f	struct:Instruction	typeref:typename:bool
is_compressed	vp/instr.h	/^    inline bool is_compressed() {$/;"	f	struct:Instruction	typeref:typename:bool
is_empty	core/mem_if.h	/^				is_empty                                              \/\/\/ queue empty$/;"	f	class:CombinedMemoryInterface::tg_queue_c	typeref:typename:bool
is_load	RFU/contextreg_if.h	/^	inline bool is_load()$/;"	f	struct:flc	typeref:typename:bool
is_readonly	vp/tlm_map.h	/^        bool is_readonly() {$/;"	f	struct:vp::map::access_mode	typeref:typename:bool
is_store	RFU/contextreg_if.h	/^	inline bool is_store()$/;"	f	struct:flc	typeref:typename:bool
isock	RFU/ReconfigController.h	/^		tlm_utils::simple_initiator_socket<ReconfigController> isock;$/;"	m	class:ReconfigController	typeref:typename:tlm_utils::simple_initiator_socket<ReconfigController>
isock	core/bus.h	/^	tlm_utils::simple_initiator_socket_tagged<Bus> isock[NR_OF_TARGETS];$/;"	m	struct:Bus	typeref:typename:tlm_utils::simple_initiator_socket_tagged<Bus>[]
isock	core/dma.h	/^    tlm_utils::simple_initiator_socket<SimpleDMA> isock;$/;"	m	struct:SimpleDMA	typeref:typename:tlm_utils::simple_initiator_socket<SimpleDMA>
isock	core/mem_if.h	/^	tlm_utils::simple_initiator_socket<CombinedMemoryInterface> isock;$/;"	m	struct:CombinedMemoryInterface	typeref:typename:tlm_utils::simple_initiator_socket<CombinedMemoryInterface>
isock	vp/dma.h	/^    tlm_utils::simple_initiator_socket<SimpleDMA> isock;$/;"	m	struct:SimpleDMA	typeref:typename:tlm_utils::simple_initiator_socket<SimpleDMA>
isock	vp/iss.h	/^    tlm_utils::simple_initiator_socket<CombinedMemoryInterface> isock;$/;"	m	struct:CombinedMemoryInterface	typeref:typename:tlm_utils::simple_initiator_socket<CombinedMemoryInterface>
isocks	vp/bus.h	/^    std::array<tlm_utils::simple_initiator_socket<SimpleBus>, NR_OF_TARGETS> isocks;$/;"	m	struct:SimpleBus	typeref:typename:std::array<tlm_utils::simple_initiator_socket<SimpleBus>,NR_OF_TARGETS>
kind	vp/gdb_stub.cpp	/^    int kind;$/;"	m	struct:breakpoint_t	typeref:typename:int	file:
knalb	RFU/contextreg_if.h	/^			unsigned knalb		:1;$/;"	m	struct:flc::__anone86e04c8010a::__anone86e04c80308	typeref:typename:unsigned:1
knalb	RFU/contextreg_if.h	/^			unsigned knalb		:2;$/;"	m	struct:slc::__anone86e04c8050a::__anone86e04c80708	typeref:typename:unsigned:2
last_pc	core/iss.h	/^    uint32_t last_pc;$/;"	m	struct:ISS	typeref:typename:uint32_t
last_pc	vp/iss.h	/^    uint32_t last_pc;$/;"	m	struct:ISS	typeref:typename:uint32_t
ldst	PEs/PE.h	/^		}ldst;$/;"	m	union:first_level_config::__anon1f78fa87010a	typeref:struct:first_level_config::__anon1f78fa87010a::__anon1f78fa870308
len	core/dma.h	/^    uint32_t len  = 0;$/;"	m	struct:SimpleDMA	typeref:typename:uint32_t
len	vp/dma.h	/^    uint32_t len  = 0;$/;"	m	struct:SimpleDMA	typeref:typename:uint32_t
level	vp/csr.h	/^    PrivilegeLevel level;$/;"	m	struct:csr_base	typeref:typename:PrivilegeLevel
lgid	RFU/contextreg_if.h	/^			unsigned lgid		:4;$/;"	m	struct:flc::__anone86e04c8010a::__anone86e04c80408	typeref:typename:unsigned:4
load_byte	core/mem_if.h	/^	int32_t load_byte(addr_t addr) { return _load_data<int8_t>(addr); }$/;"	f	struct:CombinedMemoryInterface	typeref:typename:int32_t
load_byte	vp/iss.h	/^    int32_t load_byte(addr_t addr) { return _load_data<int8_t>(addr); }$/;"	f	struct:CombinedMemoryInterface	typeref:typename:int32_t
load_byte	vp/iss.h	/^    virtual int32_t load_byte(addr_t addr) { return _load_data<int8_t>(addr); }$/;"	f	struct:DataMemoryProxy	typeref:typename:int32_t
load_executable_image	core/elf_loader.h	/^    void load_executable_image(uint8_t *dst, uint32_t size, uint32_t offset) {$/;"	f	struct:ELFLoader	typeref:typename:void
load_executable_image	vp/elf_loader.h	/^    void load_executable_image(uint8_t *dst, uint32_t size, uint32_t offset) {$/;"	f	struct:ELFLoader	typeref:typename:void
load_half	core/mem_if.h	/^	int32_t load_half(addr_t addr) { return _load_data<int16_t>(addr); }$/;"	f	struct:CombinedMemoryInterface	typeref:typename:int32_t
load_half	vp/iss.h	/^    int32_t load_half(addr_t addr) { return _load_data<int16_t>(addr); }$/;"	f	struct:CombinedMemoryInterface	typeref:typename:int32_t
load_half	vp/iss.h	/^    virtual int32_t load_half(addr_t addr) { return _load_data<int16_t>(addr); }$/;"	f	struct:DataMemoryProxy	typeref:typename:int32_t
load_instr	core/mem_if.h	/^	int32_t load_instr(addr_t addr) { return _load_data<int32_t>(addr); }$/;"	f	struct:CombinedMemoryInterface	typeref:typename:int32_t
load_instr	vp/iss.h	/^    int32_t load_instr(addr_t addr) { return _load_data<int32_t>(addr); }$/;"	f	struct:CombinedMemoryInterface	typeref:typename:int32_t
load_instr	vp/iss.h	/^    virtual int32_t load_instr(uint32_t pc) override {$/;"	f	struct:InstrMemoryProxy	typeref:typename:int32_t
load_ubyte	core/mem_if.h	/^	uint32_t load_ubyte(addr_t addr) { return _load_data<uint8_t>(addr); }$/;"	f	struct:CombinedMemoryInterface	typeref:typename:uint32_t
load_ubyte	vp/iss.h	/^    uint32_t load_ubyte(addr_t addr) { return _load_data<uint8_t>(addr); }$/;"	f	struct:CombinedMemoryInterface	typeref:typename:uint32_t
load_ubyte	vp/iss.h	/^    virtual uint32_t load_ubyte(addr_t addr) { return _load_data<uint8_t>(addr); }$/;"	f	struct:DataMemoryProxy	typeref:typename:uint32_t
load_uhalf	core/mem_if.h	/^	uint32_t load_uhalf(addr_t addr) { return _load_data<uint16_t>(addr); }$/;"	f	struct:CombinedMemoryInterface	typeref:typename:uint32_t
load_uhalf	vp/iss.h	/^    uint32_t load_uhalf(addr_t addr) { return _load_data<uint16_t>(addr); }$/;"	f	struct:CombinedMemoryInterface	typeref:typename:uint32_t
load_uhalf	vp/iss.h	/^    virtual uint32_t load_uhalf(addr_t addr) { return _load_data<uint16_t>(addr); }$/;"	f	struct:DataMemoryProxy	typeref:typename:uint32_t
load_word	core/mem_if.h	/^	int32_t load_word(addr_t addr) { return _load_data<int32_t>(addr); }$/;"	f	struct:CombinedMemoryInterface	typeref:typename:int32_t
load_word	vp/iss.h	/^    int32_t load_word(addr_t addr) { return _load_data<int32_t>(addr); }$/;"	f	struct:CombinedMemoryInterface	typeref:typename:int32_t
load_word	vp/iss.h	/^    virtual int32_t load_word(addr_t addr) { return _load_data<int32_t>(addr); }$/;"	f	struct:DataMemoryProxy	typeref:typename:int32_t
low	core/csr.h	/^            int32_t low;$/;"	m	struct:csr_64::__anon50a6ad1b140a::__anon50a6ad1b1508	typeref:typename:int32_t
low	vp/csr.h	/^            int32_t low;$/;"	m	struct:csr_64::__anon8468e878140a::__anon8468e8781508	typeref:typename:int32_t
lrw_marked	core/iss.h	/^    uint32_t lrw_marked = 0;$/;"	m	struct:ISS	typeref:typename:uint32_t
lrw_marked	vp/iss.h	/^    uint32_t lrw_marked = 0;$/;"	m	struct:ISS	typeref:typename:uint32_t
mDeviceNumBlocks	vp/flash.h	/^    } mDeviceNumBlocks;$/;"	m	struct:Flashcontroller	typeref:union:Flashcontroller::__anon17d1bc3e020a
mEndRequestEvent	core/bus.h	/^	sc_core::sc_event mEndRequestEvent;$/;"	m	struct:Bus	typeref:typename:sc_core::sc_event
mEndRequestEvent	core/mem_if.h	/^	sc_core::sc_event mEndRequestEvent;$/;"	m	struct:CombinedMemoryInterface	typeref:typename:sc_core::sc_event
mEndRequestPEQ	core/device_proxy.h	/^	tlm_utils::peq_with_get<tlm::tlm_generic_payload> mEndRequestPEQ;$/;"	m	struct:DeviceProxy	typeref:typename:tlm_utils::peq_with_get<tlm::tlm_generic_payload>
mEndResponseEvent	core/bus.h	/^	sc_core::sc_event mEndResponseEvent;$/;"	m	struct:Bus	typeref:typename:sc_core::sc_event
mEndResponseEvent	core/mem_if.h	/^	sc_core::sc_event mEndResponseEvent;$/;"	m	struct:CombinedMemoryInterface	typeref:typename:sc_core::sc_event
mFiledescriptor	vp/flash.h	/^    int mFiledescriptor;$/;"	m	struct:Flashcontroller	typeref:typename:int
mFilepath	vp/flash.h	/^    string mFilepath;$/;"	m	struct:Flashcontroller	typeref:typename:string
mFilepath	vp/mram.h	/^    string mFilepath;$/;"	m	struct:SimpleMRAM	typeref:typename:string
mPendingTransactions	core/bus.h	/^	PendingTransactions mPendingTransactions;$/;"	m	struct:Bus	typeref:typename:PendingTransactions
mRequestPEQ	core/bus.h	/^	tlm_utils::peq_with_get<tlm::tlm_generic_payload> mRequestPEQ;	$/;"	m	struct:Bus	typeref:typename:tlm_utils::peq_with_get<tlm::tlm_generic_payload>
mResponsePEQ	core/bus.h	/^	tlm_utils::peq_with_get<tlm::tlm_generic_payload> mResponsePEQ;	$/;"	m	struct:Bus	typeref:typename:tlm_utils::peq_with_get<tlm::tlm_generic_payload>
mResponsePEQ	core/device_proxy.h	/^	tlm_utils::peq_with_get<tlm::tlm_generic_payload> mResponsePEQ;$/;"	m	struct:DeviceProxy	typeref:typename:tlm_utils::peq_with_get<tlm::tlm_generic_payload>
mSize	vp/mram.h	/^    uint32_t mSize;$/;"	m	struct:SimpleMRAM	typeref:typename:uint32_t
mTargetBlock	vp/flash.h	/^    } mTargetBlock;$/;"	m	struct:Flashcontroller	typeref:union:Flashcontroller::__anon17d1bc3e010a
m_accept_delay	core/device_proxy.h	/^	sc_core::sc_time m_accept_delay;$/;"	m	struct:DeviceProxy	typeref:typename:sc_core::sc_time
m_active_txn_count	core/mem_if.h	/^	unsigned int	m_active_txn_count;$/;"	m	struct:CombinedMemoryInterface	typeref:typename:unsigned int
m_clint_delay	core/clint_if.h	/^	sc_core::sc_time m_clint_delay;$/;"	m	struct:Clint	typeref:typename:sc_core::sc_time
m_config_reg	PEs/PE.h	/^		first_level_config		m_config_reg;$/;"	m	class:PE	typeref:typename:first_level_config
m_data	core/memory.h	/^	uint8_t *m_data;$/;"	m	struct:Memory	typeref:typename:uint8_t *
m_data_ptr	RFU/ReconfigController.h	/^		uint32_t * m_data_ptr;$/;"	m	class:ReconfigController	typeref:typename:uint32_t *
m_device	core/device_proxy.h	/^	Device * m_device;$/;"	m	struct:DeviceProxy	typeref:typename:Device *
m_dp	RFU/ReconfigController.h	/^		uint32_t m_dp; \/\/dispatch pending$/;"	m	class:ReconfigController	typeref:typename:uint32_t
m_end	core/bus.h	/^	uint64_t m_end;$/;"	m	struct:PortMapping	typeref:typename:uint64_t
m_end_resp_rcvd_event	core/device_proxy.h	/^	sc_core::sc_event m_end_resp_rcvd_event;$/;"	m	struct:DeviceProxy	typeref:typename:sc_core::sc_event
m_end_rsp_delay	core/mem_if.h	/^	sc_core::sc_time m_end_rsp_delay;$/;"	m	struct:CombinedMemoryInterface	typeref:typename:sc_core::sc_time
m_flc	RFU/ReconfigController.h	/^		flc m_flc;$/;"	m	class:ReconfigController	typeref:typename:flc
m_isock_result	PEs/PE.h	/^		tlm_utils::simple_initiator_socket<PE> m_isock_result;$/;"	m	class:PE	typeref:typename:tlm_utils::simple_initiator_socket<PE>
m_queue	core/mem_if.h	/^			std::queue<tlm::tlm_generic_payload*> m_queue;        \/\/\/ queue$/;"	m	class:CombinedMemoryInterface::tg_queue_c	typeref:typename:std::queue<tlm::tlm_generic_payload * >
m_raw_slcs_num	RFU/ReconfigController.h	/^		unsigned m_raw_slcs_num;$/;"	m	class:ReconfigController	typeref:typename:unsigned
m_read_delay	core/memory.h	/^	sc_core::sc_time m_read_delay;$/;"	m	struct:Memory	typeref:typename:sc_core::sc_time
m_result	PEs/PE.h	/^		uint32_t		m_result;$/;"	m	class:PE	typeref:typename:uint32_t
m_send_end_rsp_PEQ	core/mem_if.h	/^	tlm_utils::peq_with_get<tlm::tlm_generic_payload> m_send_end_rsp_PEQ;$/;"	m	struct:CombinedMemoryInterface	typeref:typename:tlm_utils::peq_with_get<tlm::tlm_generic_payload>
m_size	core/memory.h	/^	uint32_t m_size;$/;"	m	struct:Memory	typeref:typename:uint32_t
m_slcs	RFU/ReconfigController.h	/^		std::map<unsigned, slc> m_slcs;$/;"	m	class:ReconfigController	typeref:typename:std::map<unsigned,slc>
m_src_a	PEs/PE.h	/^		uint32_t		m_src_a;$/;"	m	class:PE	typeref:typename:uint32_t
m_src_b	PEs/PE.h	/^		uint32_t		m_src_b;$/;"	m	class:PE	typeref:typename:uint32_t
m_start	core/bus.h	/^	uint64_t m_start;$/;"	m	struct:PortMapping	typeref:typename:uint64_t
m_target	core/clint_if.h	/^	timer_interrupt_target * m_target;	$/;"	m	struct:Clint	typeref:typename:timer_interrupt_target *
m_terminal_delay	core/terminal.h	/^	sc_core::sc_time m_terminal_delay;$/;"	m	struct:Terminal	typeref:typename:sc_core::sc_time
m_trans	RFU/ReconfigController.h	/^		tlm::tlm_generic_payload m_trans;$/;"	m	class:ReconfigController	typeref:typename:tlm::tlm_generic_payload
m_transaction_queue	core/mem_if.h	/^	tg_queue_c		m_transaction_queue;$/;"	m	struct:CombinedMemoryInterface	typeref:typename:tg_queue_c
m_translation_table	RFU/ReconfigController.h	/^		std::map<unsigned, unsigned> m_translation_table;$/;"	m	class:ReconfigController	typeref:typename:std::map<unsigned,unsigned>
m_tsock_a	PEs/PE.h	/^		tlm_utils::simple_target_socket<PE> m_tsock_a;	$/;"	m	class:PE	typeref:typename:tlm_utils::simple_target_socket<PE>
m_tsock_b	PEs/PE.h	/^		tlm_utils::simple_target_socket<PE> m_tsock_b;$/;"	m	class:PE	typeref:typename:tlm_utils::simple_target_socket<PE>
m_txn_data_size	core/mem_if.h	/^	static const unsigned int  m_txn_data_size = 4;         \/\/ transaction size$/;"	m	struct:CombinedMemoryInterface	typeref:typename:const unsigned int
m_write_delay	core/memory.h	/^	sc_core::sc_time m_write_delay;$/;"	m	struct:Memory	typeref:typename:sc_core::sc_time
mac	vp/ethernet.h	/^    uint32_t mac[2];$/;"	m	struct:EthernetDevice	typeref:typename:uint32_t[2]
make_readonly	vp/tlm_map.h	/^        static access_mode make_readonly() {$/;"	f	struct:vp::map::access_mode	typeref:typename:access_mode
make_writeonly	vp/tlm_map.h	/^        static access_mode make_writeonly() {$/;"	f	struct:vp::map::access_mode	typeref:typename:access_mode
map	vp/tlm_map.h	/^namespace vp { namespace map {$/;"	n	namespace:vp
mapping	core/instr.h	/^enum mapping $/;"	g	namespace:Opcode
mapping	vp/instr.h	/^    enum mapping {$/;"	g	namespace:Opcode
maps	vp/tlm_map.h	/^        std::vector<AbstractMapping *> maps;$/;"	m	struct:vp::map::LocalRouter	typeref:typename:std::vector<AbstractMapping * >
marchid	core/csr.h	/^    csr_32 *marchid = 0;$/;"	m	struct:csr_table	typeref:typename:csr_32 *
marchid	vp/csr.h	/^    csr_32 *marchid = 0;$/;"	m	struct:csr_table	typeref:typename:csr_32 *
mask	vp/tlm_map.h	/^        uint32_t mask    = 0xffffffff;$/;"	m	struct:vp::map::reg_mapping_t	typeref:typename:uint32_t
math_oprt	PEs/PE.h	/^		}math_oprt;$/;"	m	union:first_level_config::__anon1f78fa87010a	typeref:struct:first_level_config::__anon1f78fa87010a::__anon1f78fa870208
max_heap	core/syscall.h	/^	uint32_t max_heap   = 0;$/;"	m	struct:SyscallHandler	typeref:typename:uint32_t
max_heap	vp/syscall.h	/^    uint32_t max_heap = 0;$/;"	m	struct:SyscallHandler	typeref:typename:uint32_t
mcause	core/csr.h	/^    csr_mcause *mcause = 0;$/;"	m	struct:csr_table	typeref:typename:csr_mcause *
mcause	vp/csr.h	/^    csr_mcause *mcause = 0;$/;"	m	struct:csr_table	typeref:typename:csr_mcause *
medeleg	core/csr.h	/^    csr_32 *medeleg = 0;$/;"	m	struct:csr_table	typeref:typename:csr_32 *
medeleg	vp/csr.h	/^    csr_32 *medeleg = 0;$/;"	m	struct:csr_table	typeref:typename:csr_32 *
meie	core/csr.h	/^            unsigned meie: 1;$/;"	m	struct:csr_mie::__anon50a6ad1b090a::__anon50a6ad1b0a08	typeref:typename:unsigned:1
meie	vp/csr.h	/^            unsigned meie: 1;$/;"	m	struct:csr_mie::__anon8468e878090a::__anon8468e8780a08	typeref:typename:unsigned:1
meip	core/csr.h	/^            unsigned meip: 1;$/;"	m	struct:csr_mip::__anon50a6ad1b0b0a::__anon50a6ad1b0c08	typeref:typename:unsigned:1
meip	vp/csr.h	/^            unsigned meip: 1;$/;"	m	struct:csr_mip::__anon8468e8780b0a::__anon8468e8780c08	typeref:typename:unsigned:1
mem	core/iss.h	/^    data_memory_interface *mem;$/;"	m	struct:ISS	typeref:typename:data_memory_interface *
mem	core/syscall.h	/^	uint8_t		*mem = 0;	\/\/ direct pointer to start of guest memory  int host memory$/;"	m	struct:SyscallHandler	typeref:typename:uint8_t *
mem	vp/ethernet.h	/^    uint8_t *mem = nullptr;$/;"	m	struct:EthernetDevice	typeref:typename:uint8_t *
mem	vp/gdb_stub.h	/^    uint8_t *mem;$/;"	m	struct:debug_memory_mapping	typeref:typename:uint8_t *
mem	vp/iss.h	/^    data_memory_interface *mem;$/;"	m	struct:ISS	typeref:typename:data_memory_interface *
mem	vp/iss.h	/^    uint8_t *mem; \/\/ 指令存储器的物理地址$/;"	m	struct:direct_memory_interface	typeref:typename:uint8_t *
mem	vp/syscall.h	/^    uint8_t *mem = 0;       \/\/ direct pointer to start of guest memory in host memory$/;"	m	struct:SyscallHandler	typeref:typename:uint8_t *
mem_end_addr	core/main.cpp	/^	addr_t mem_end_addr			= mem_start_addr + mem_size - 1;$/;"	m	struct:Options	typeref:typename:addr_t	file:
mem_end_addr	vp/main.cpp	/^    addr_t mem_end_addr       = mem_start_addr + mem_size - 1;$/;"	m	struct:Options	typeref:typename:addr_t	file:
mem_offset	core/syscall.h	/^	uint32_t	mem_offset; \/\/start address of the memory as mapped into the address space$/;"	m	struct:SyscallHandler	typeref:typename:uint32_t
mem_offset	vp/gdb_stub.h	/^    uint32_t mem_offset;$/;"	m	struct:debug_memory_mapping	typeref:typename:uint32_t
mem_offset	vp/syscall.h	/^    uint32_t mem_offset;    \/\/ start address of the memory as mapped into the address space$/;"	m	struct:SyscallHandler	typeref:typename:uint32_t
mem_size	core/main.cpp	/^	addr_t mem_size				= 1024*1024*32; \/\/32 MB ram$/;"	m	struct:Options	typeref:typename:addr_t	file:
mem_size	vp/gdb_stub.h	/^    uint32_t mem_size;$/;"	m	struct:debug_memory_mapping	typeref:typename:uint32_t
mem_size	vp/main.cpp	/^    addr_t mem_size           = 1024*1024*32;  \/\/ 32 MB ram, to place it before the CLINT and /;"	m	struct:Options	typeref:typename:addr_t	file:
mem_start_addr	core/main.cpp	/^	addr_t mem_start_addr		= 0x00000000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
mem_start_addr	vp/main.cpp	/^    addr_t mem_start_addr     = 0x00000000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
memory	vp/gdb_stub.h	/^    debug_memory_mapping memory;$/;"	m	struct:DebugCoreRunner	typeref:typename:debug_memory_mapping
memory_access_t	vp/gdb_stub.cpp	/^struct memory_access_t {$/;"	s	file:
mepc	core/csr.h	/^    csr_mepc *mepc = 0;$/;"	m	struct:csr_table	typeref:typename:csr_mepc *
mepc	vp/csr.h	/^    csr_mepc *mepc = 0;$/;"	m	struct:csr_table	typeref:typename:csr_mepc *
mhartid	core/csr.h	/^    csr_32 *mhartid = 0;$/;"	m	struct:csr_table	typeref:typename:csr_32 *
mhartid	vp/csr.h	/^    csr_32 *mhartid = 0;$/;"	m	struct:csr_table	typeref:typename:csr_32 *
mideleg	core/csr.h	/^    csr_32 *mideleg = 0;$/;"	m	struct:csr_table	typeref:typename:csr_32 *
mideleg	vp/csr.h	/^    csr_32 *mideleg = 0;$/;"	m	struct:csr_table	typeref:typename:csr_32 *
mie	core/csr.h	/^            unsigned mie: 1;$/;"	m	struct:csr_mstatus::__anon50a6ad1b050a::__anon50a6ad1b0608	typeref:typename:unsigned:1
mie	core/csr.h	/^    csr_mie *mie = 0;$/;"	m	struct:csr_table	typeref:typename:csr_mie *
mie	vp/csr.h	/^            unsigned mie: 1;$/;"	m	struct:csr_mstatus::__anon8468e878050a::__anon8468e8780608	typeref:typename:unsigned:1
mie	vp/csr.h	/^    csr_mie *mie = 0;$/;"	m	struct:csr_table	typeref:typename:csr_mie *
mimpid	core/csr.h	/^    csr_32 *mimpid = 0;$/;"	m	struct:csr_table	typeref:typename:csr_32 *
mimpid	vp/csr.h	/^    csr_32 *mimpid = 0;$/;"	m	struct:csr_table	typeref:typename:csr_32 *
mip	core/csr.h	/^    csr_mip *mip = 0;$/;"	m	struct:csr_table	typeref:typename:csr_mip *
mip	vp/csr.h	/^    csr_mip *mip = 0;$/;"	m	struct:csr_table	typeref:typename:csr_mip *
misa	core/csr.h	/^    csr_misa *misa = 0;$/;"	m	struct:csr_table	typeref:typename:csr_misa *
misa	vp/csr.h	/^    csr_misa *misa = 0;$/;"	m	struct:csr_table	typeref:typename:csr_misa *
mode	core/csr.h	/^            unsigned mode: 1;	\/\/ WARL$/;"	m	struct:csr_satp::__anon50a6ad1b100a::__anon50a6ad1b1108	typeref:typename:unsigned:1
mode	core/csr.h	/^            unsigned mode: 2;	\/\/ WARL$/;"	m	struct:csr_mtvec::__anon50a6ad1b070a::__anon50a6ad1b0808	typeref:typename:unsigned:2
mode	vp/csr.h	/^            unsigned mode: 1;	\/\/ WARL$/;"	m	struct:csr_satp::__anon8468e878100a::__anon8468e8781108	typeref:typename:unsigned:1
mode	vp/csr.h	/^            unsigned mode: 2;	\/\/ WARL$/;"	m	struct:csr_mtvec::__anon8468e878070a::__anon8468e8780808	typeref:typename:unsigned:2
mode	vp/csr.h	/^    AccessMode mode;$/;"	m	struct:csr_base	typeref:typename:AccessMode
mode	vp/tlm_map.h	/^        access_mode mode = read_write;$/;"	m	struct:vp::map::reg_mapping_t	typeref:typename:access_mode
mode	vp/tlm_map.h	/^        access_mode mode;$/;"	m	struct:vp::map::AddressMapping	typeref:typename:access_mode
mpie	core/csr.h	/^            unsigned mpie: 1;$/;"	m	struct:csr_mstatus::__anon50a6ad1b050a::__anon50a6ad1b0608	typeref:typename:unsigned:1
mpie	vp/csr.h	/^            unsigned mpie: 1;$/;"	m	struct:csr_mstatus::__anon8468e878050a::__anon8468e8780608	typeref:typename:unsigned:1
mpp	core/csr.h	/^            unsigned mpp: 2;$/;"	m	struct:csr_mstatus::__anon50a6ad1b050a::__anon50a6ad1b0608	typeref:typename:unsigned:2
mpp	vp/csr.h	/^            unsigned mpp: 2;$/;"	m	struct:csr_mstatus::__anon8468e878050a::__anon8468e8780608	typeref:typename:unsigned:2
mprv	core/csr.h	/^            unsigned mprv: 1;$/;"	m	struct:csr_mstatus::__anon50a6ad1b050a::__anon50a6ad1b0608	typeref:typename:unsigned:1
mprv	vp/csr.h	/^            unsigned mprv: 1;$/;"	m	struct:csr_mstatus::__anon8468e878050a::__anon8468e8780608	typeref:typename:unsigned:1
mram_end_addr	vp/main.cpp	/^    addr_t mram_end_addr      = mram_start_addr + mram_size - 1;$/;"	m	struct:Options	typeref:typename:addr_t	file:
mram_image	vp/main.cpp	/^    std::string mram_image;$/;"	m	struct:Options	typeref:typename:std::string	file:
mram_size	vp/main.cpp	/^    addr_t mram_size		  = 0x10000000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
mram_start_addr	vp/main.cpp	/^    addr_t mram_start_addr    = 0x60000000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
mscratch	core/csr.h	/^    csr_32 *mscratch = 0;$/;"	m	struct:csr_table	typeref:typename:csr_32 *
mscratch	vp/csr.h	/^    csr_32 *mscratch = 0;$/;"	m	struct:csr_table	typeref:typename:csr_32 *
msie	core/csr.h	/^            unsigned msie: 1;$/;"	m	struct:csr_mie::__anon50a6ad1b090a::__anon50a6ad1b0a08	typeref:typename:unsigned:1
msie	vp/csr.h	/^            unsigned msie: 1;$/;"	m	struct:csr_mie::__anon8468e878090a::__anon8468e8780a08	typeref:typename:unsigned:1
msip	core/csr.h	/^            unsigned msip: 1;$/;"	m	struct:csr_mip::__anon50a6ad1b0b0a::__anon50a6ad1b0c08	typeref:typename:unsigned:1
msip	vp/csr.h	/^            unsigned msip: 1;$/;"	m	struct:csr_mip::__anon8468e8780b0a::__anon8468e8780c08	typeref:typename:unsigned:1
mstatus	core/csr.h	/^    csr_mstatus *mstatus = 0;$/;"	m	struct:csr_table	typeref:typename:csr_mstatus *
mstatus	vp/csr.h	/^    csr_mstatus *mstatus = 0;$/;"	m	struct:csr_table	typeref:typename:csr_mstatus *
mtie	core/csr.h	/^            unsigned mtie: 1;$/;"	m	struct:csr_mie::__anon50a6ad1b090a::__anon50a6ad1b0a08	typeref:typename:unsigned:1
mtie	vp/csr.h	/^            unsigned mtie: 1;$/;"	m	struct:csr_mie::__anon8468e878090a::__anon8468e8780a08	typeref:typename:unsigned:1
mtime	core/clint_if.h	/^		uint64_t mtime;$/;"	m	struct:Clint	typeref:typename:uint64_t
mtime	vp/clint.h	/^    uint64_t mtime = 0;$/;"	m	struct:CLINT	typeref:typename:uint64_t
mtimecmp	core/clint_if.h	/^		uint64_t mtimecmp;$/;"	m	struct:Clint	typeref:typename:uint64_t
mtimecmp	vp/clint.h	/^    uint64_t mtimecmp = 0;  \/\/ zero means unused$/;"	m	struct:CLINT	typeref:typename:uint64_t
mtip	core/csr.h	/^            unsigned mtip: 1;$/;"	m	struct:csr_mip::__anon50a6ad1b0b0a::__anon50a6ad1b0c08	typeref:typename:unsigned:1
mtip	vp/csr.h	/^            unsigned mtip: 1;$/;"	m	struct:csr_mip::__anon8468e8780b0a::__anon8468e8780c08	typeref:typename:unsigned:1
mtval	core/csr.h	/^    csr_32 *mtval = 0;$/;"	m	struct:csr_table	typeref:typename:csr_32 *
mtval	vp/csr.h	/^    csr_32 *mtval = 0;$/;"	m	struct:csr_table	typeref:typename:csr_32 *
mtvec	core/csr.h	/^    csr_mtvec *mtvec = 0;$/;"	m	struct:csr_table	typeref:typename:csr_mtvec *
mtvec	vp/csr.h	/^    csr_mtvec *mtvec = 0;$/;"	m	struct:csr_table	typeref:typename:csr_mtvec *
mux_a	PEs/PE.h	/^			unsigned mux_a:		5;$/;"	m	struct:first_level_config::__anon1f78fa87010a::__anon1f78fa870208	typeref:typename:unsigned:5
mux_a	RFU/contextreg_if.h	/^			unsigned mux_a		:5;$/;"	m	struct:flc::__anone86e04c8010a::__anone86e04c80208	typeref:typename:unsigned:5
mux_a	RFU/contextreg_if.h	/^			unsigned mux_a		:5;$/;"	m	struct:slc::__anone86e04c8050a::__anone86e04c80608	typeref:typename:unsigned:5
mux_b	PEs/PE.h	/^			unsigned mux_b:		5;$/;"	m	struct:first_level_config::__anon1f78fa87010a::__anon1f78fa870208	typeref:typename:unsigned:5
mux_b	RFU/contextreg_if.h	/^			unsigned mux_b		:5;$/;"	m	struct:flc::__anone86e04c8010a::__anone86e04c80208	typeref:typename:unsigned:5
mux_b	RFU/contextreg_if.h	/^			unsigned mux_b		:5;$/;"	m	struct:slc::__anone86e04c8050a::__anone86e04c80608	typeref:typename:unsigned:5
mvendorid	core/csr.h	/^    csr_mvendorid *mvendorid = 0;$/;"	m	struct:csr_table	typeref:typename:csr_mvendorid *
mvendorid	vp/csr.h	/^    csr_mvendorid *mvendorid = 0;$/;"	m	struct:csr_table	typeref:typename:csr_mvendorid *
mxl	core/csr.h	/^            unsigned mxl: 2;$/;"	m	struct:csr_misa::__anon50a6ad1b010a::__anon50a6ad1b0208	typeref:typename:unsigned:2
mxl	vp/csr.h	/^            unsigned mxl: 2;$/;"	m	struct:csr_misa::__anon8468e878010a::__anon8468e8780208	typeref:typename:unsigned:2
mxr	core/csr.h	/^            unsigned mxr: 1;$/;"	m	struct:csr_mstatus::__anon50a6ad1b050a::__anon50a6ad1b0608	typeref:typename:unsigned:1
mxr	vp/csr.h	/^            unsigned mxr: 1;$/;"	m	struct:csr_mstatus::__anon8468e878050a::__anon8468e8780608	typeref:typename:unsigned:1
name	core/csr.h	/^    const char *name;$/;"	m	struct:csr_base	typeref:typename:const char *
name	vp/csr.h	/^    const char *name;$/;"	m	struct:csr_base	typeref:typename:const char *
nb_transport_bw	core/bus.h	/^tlm::tlm_sync_enum nb_transport_bw(int id, tlm::tlm_generic_payload &gp, tlm::tlm_phase &phase, /;"	f	struct:Bus	typeref:typename:tlm::tlm_sync_enum
nb_transport_bw	core/mem_if.cpp	/^tlm::tlm_sync_enum CombinedMemoryInterface::nb_transport_bw(tlm::tlm_generic_payload &trans, tlm/;"	f	class:CombinedMemoryInterface	typeref:typename:tlm::tlm_sync_enum
nb_transport_fw	RFU/RFA.cpp	/^tlm::tlm_sync_enum nb_transport_fw$/;"	f	typeref:typename:tlm::tlm_sync_enum
nb_transport_fw	core/bus.h	/^tlm::tlm_sync_enum nb_transport_fw(int id, tlm::tlm_generic_payload &gp, tlm::tlm_phase &phase, /;"	f	struct:Bus	typeref:typename:tlm::tlm_sync_enum
nb_transport_fw	core/device_proxy.cpp	/^tlm::tlm_sync_enum DeviceProxy::nb_transport_fw(tlm::tlm_generic_payload &trans, tlm::tlm_phase /;"	f	class:DeviceProxy	typeref:typename:tlm::tlm_sync_enum
nbytes	vp/gdb_stub.cpp	/^    int nbytes;$/;"	m	struct:memory_access_t	typeref:typename:int	file:
network_device	vp/main.cpp	/^    std::string network_device;$/;"	m	struct:Options	typeref:typename:std::string	file:
next_memory	vp/iss.h	/^    data_memory_interface *next_memory;$/;"	m	struct:DataMemoryProxy	typeref:typename:data_memory_interface *
nibble_to_hex	vp/gdb_stub.cpp	/^char nibble_to_hex[16] = {$/;"	v	typeref:typename:char[16]
nv	vp/tlm_map.h	/^        uint32_t nv;$/;"	m	struct:vp::map::register_access_t	typeref:typename:uint32_t
offs	vp/flash.h	/^	uint64_t offs;$/;"	m	struct:Blockbuffer	typeref:typename:uint64_t
offset	core/csr.h	/^            unsigned offset: 7;$/;"	m	struct:csr_mvendorid::__anon50a6ad1b030a::__anon50a6ad1b0408	typeref:typename:unsigned:7
offset	vp/csr.h	/^            unsigned offset: 7;$/;"	m	struct:csr_mvendorid::__anon8468e878030a::__anon8468e8780408	typeref:typename:unsigned:7
offset	vp/iss.h	/^    uint32_t offset; \/\/指令存储器的虚拟地址$/;"	m	struct:direct_memory_interface	typeref:typename:uint32_t
op	PEs/PE.h	/^			unsigned op:		3;$/;"	m	struct:first_level_config::__anon1f78fa87010a::__anon1f78fa870208	typeref:typename:unsigned:3
op	PEs/PE.h	/^			unsigned op:		3;$/;"	m	struct:first_level_config::__anon1f78fa87010a::__anon1f78fa870308	typeref:typename:unsigned:3
op	RFU/contextreg_if.h	/^			unsigned op			:3;$/;"	m	struct:flc::__anone86e04c8010a::__anone86e04c80408	typeref:typename:unsigned:3
op	RFU/contextreg_if.h	/^			unsigned op			:3;$/;"	m	struct:slc::__anone86e04c8050a::__anone86e04c80808	typeref:typename:unsigned:3
op	RFU/contextreg_if.h	/^enum op$/;"	g
op	core/dma.h	/^    uint32_t op   = 0;$/;"	m	struct:SimpleDMA	typeref:typename:uint32_t
op	vp/dma.h	/^    uint32_t op   = 0;$/;"	m	struct:SimpleDMA	typeref:typename:uint32_t
op_aux	RFU/contextreg_if.h	/^			unsigned op_aux		:1;$/;"	m	struct:flc::__anone86e04c8010a::__anone86e04c80208	typeref:typename:unsigned:1
op_aux	RFU/contextreg_if.h	/^			unsigned op_aux		:1;$/;"	m	struct:slc::__anone86e04c8050a::__anone86e04c80608	typeref:typename:unsigned:1
op_type	PEs/PE.h	/^		enum op_type$/;"	g	class:PE
opcode	core/instr.h	/^    inline int32_t opcode() {$/;"	f	struct:Instruction	typeref:typename:int32_t
opcode	vp/instr.h	/^    inline int32_t opcode() {$/;"	f	struct:Instruction	typeref:typename:int32_t
oper	vp/ethernet.h	/^    uint16_t oper;$/;"	m	struct:arp_eth_header	typeref:typename:uint16_t
operation	RFU/ReconfigController.cpp	/^void ReconfigController::operation$/;"	f	class:ReconfigController	typeref:typename:void
operation	core/clint_if.cpp	/^void Clint::operation(tlm::tlm_generic_payload &gp, sc_core::sc_time &delay)$/;"	f	class:Clint	typeref:typename:void
operation	core/memory.cpp	/^void Memory::operation(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay)$/;"	f	class:Memory	typeref:typename:void
operation	core/terminal.h	/^	void operation(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay) override$/;"	f	struct:Terminal	typeref:typename:void
operator =	vp/sifive/uart.h	/^    Reg32 operator =(uint32_t n) {$/;"	f	struct:Reg32	typeref:typename:Reg32
operator []	core/regfile.h	/^    int32_t &operator [](const uint32_t idx) { \/\/这里为什么要重载[] ？regs本身是数/;"	f	struct:RegFile	typeref:typename:int32_t &
operator []	vp/iss.h	/^    int32_t &operator [](const uint32_t idx) { \/\/这里为什么要重载[] ？regs本身是数/;"	f	struct:RegFile	typeref:typename:int32_t &
operator uint32_t	vp/sifive/uart.h	/^    operator uint32_t() const {$/;"	f	struct:Reg32
owner	vp/sifive/uart.h	/^    Reg32 *owner;$/;"	m	struct:Reg32Field	typeref:typename:Reg32 *
p_align	core/elf_loader.h	/^    Elf32_Word	p_align;$/;"	m	struct:__anon947b0a800208	typeref:typename:Elf32_Word
p_align	vp/elf_loader.h	/^    Elf32_Word	p_align;$/;"	m	struct:__anonb9f73b3d0208	typeref:typename:Elf32_Word
p_filesz	core/elf_loader.h	/^    Elf32_Word	p_filesz;$/;"	m	struct:__anon947b0a800208	typeref:typename:Elf32_Word
p_filesz	vp/elf_loader.h	/^    Elf32_Word	p_filesz;$/;"	m	struct:__anonb9f73b3d0208	typeref:typename:Elf32_Word
p_flags	core/elf_loader.h	/^    Elf32_Word	p_flags;$/;"	m	struct:__anon947b0a800208	typeref:typename:Elf32_Word
p_flags	vp/elf_loader.h	/^    Elf32_Word	p_flags;$/;"	m	struct:__anonb9f73b3d0208	typeref:typename:Elf32_Word
p_memsz	core/elf_loader.h	/^    Elf32_Word	p_memsz;$/;"	m	struct:__anon947b0a800208	typeref:typename:Elf32_Word
p_memsz	vp/elf_loader.h	/^    Elf32_Word	p_memsz;$/;"	m	struct:__anonb9f73b3d0208	typeref:typename:Elf32_Word
p_offset	core/elf_loader.h	/^    Elf32_Off	p_offset;$/;"	m	struct:__anon947b0a800208	typeref:typename:Elf32_Off
p_offset	vp/elf_loader.h	/^    Elf32_Off	p_offset;$/;"	m	struct:__anonb9f73b3d0208	typeref:typename:Elf32_Off
p_paddr	core/elf_loader.h	/^    Elf32_Addr	p_paddr;$/;"	m	struct:__anon947b0a800208	typeref:typename:Elf32_Addr
p_paddr	vp/elf_loader.h	/^    Elf32_Addr	p_paddr;$/;"	m	struct:__anonb9f73b3d0208	typeref:typename:Elf32_Addr
p_type	core/elf_loader.h	/^    Elf32_Word	p_type;$/;"	m	struct:__anon947b0a800208	typeref:typename:Elf32_Word
p_type	vp/elf_loader.h	/^    Elf32_Word	p_type;$/;"	m	struct:__anonb9f73b3d0208	typeref:typename:Elf32_Word
p_vaddr	core/elf_loader.h	/^    Elf32_Addr	p_vaddr;$/;"	m	struct:__anon947b0a800208	typeref:typename:Elf32_Addr
p_vaddr	vp/elf_loader.h	/^    Elf32_Addr	p_vaddr;$/;"	m	struct:__anonb9f73b3d0208	typeref:typename:Elf32_Addr
parse_breakpoint	vp/gdb_stub.cpp	/^breakpoint_t parse_breakpoint(const std::string &msg) {$/;"	f	typeref:typename:breakpoint_t
parse_command_line_arguments	core/main.cpp	/^Options parse_command_line_arguments(int argc, char **argv)$/;"	f	typeref:typename:Options
parse_command_line_arguments	vp/main.cpp	/^Options parse_command_line_arguments(int argc, char **argv) {$/;"	f	typeref:typename:Options
parse_command_line_arguments	vp/sifive/sifive_main.cpp	/^Options parse_command_line_arguments(int argc, char **argv) {$/;"	f	typeref:typename:Options
parse_memory_access	vp/gdb_stub.cpp	/^memory_access_t parse_memory_access(const std::string &msg) {$/;"	f	typeref:typename:memory_access_t
parts	core/instr.h	/^    enum parts $/;"	g	namespace:Opcode
parts	vp/instr.h	/^    enum parts {$/;"	g	namespace:Opcode
pc	core/iss.h	/^    uint32_t pc;$/;"	m	struct:ISS	typeref:typename:uint32_t
pc	vp/iss.h	/^    uint32_t pc;$/;"	m	struct:ISS	typeref:typename:uint32_t
pending_interrupts	vp/plic.h	/^    uint64_t pending_interrupts = 0;$/;"	m	struct:PLIC	typeref:typename:uint64_t
performance_and_sync_update	core/iss.h	/^    void performance_and_sync_update(Opcode::mapping executed_op) {$/;"	f	struct:ISS	typeref:typename:void
performance_and_sync_update	vp/iss.h	/^    void performance_and_sync_update(Opcode::mapping executed_op) {$/;"	f	struct:ISS	typeref:typename:void
phid	RFU/contextreg_if.h	/^			unsigned phid		:5;$/;"	m	struct:slc::__anone86e04c8050a::__anone86e04c80808	typeref:typename:unsigned:5
plen	vp/ethernet.h	/^    uint8_t  plen;$/;"	m	struct:arp_eth_header	typeref:typename:uint8_t
plic	core/dma.h	/^    interrupt_gateway *plic = 0;$/;"	m	struct:SimpleDMA	typeref:typename:interrupt_gateway *
plic	vp/basic_timer.h	/^    interrupt_gateway *plic = 0;$/;"	m	struct:BasicTimer	typeref:typename:interrupt_gateway *
plic	vp/dma.h	/^    interrupt_gateway *plic = 0;$/;"	m	struct:SimpleDMA	typeref:typename:interrupt_gateway *
plic	vp/ethernet.h	/^    interrupt_gateway *plic = 0;$/;"	m	struct:EthernetDevice	typeref:typename:interrupt_gateway *
plic	vp/sensor.h	/^    interrupt_gateway *plic = 0;$/;"	m	struct:SimpleSensor	typeref:typename:interrupt_gateway *
plic	vp/sensor2.h	/^    interrupt_gateway *plic = 0;$/;"	m	struct:SimpleSensor2	typeref:typename:interrupt_gateway *
plic_end_addr	vp/main.cpp	/^    addr_t plic_end_addr      = 0x40001000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
plic_end_addr	vp/sifive/sifive_main.cpp	/^    addr_t plic_end_addr      = 0x0FFFFFFF;$/;"	m	struct:Options	typeref:typename:addr_t	file:
plic_start_addr	vp/main.cpp	/^    addr_t plic_start_addr    = 0x40000000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
plic_start_addr	vp/sifive/sifive_main.cpp	/^    addr_t plic_start_addr    = 0x0C000000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
pllcfg	vp/sifive/prci.h	/^    uint32_t pllcfg = 0;$/;"	m	struct:PRCI	typeref:typename:uint32_t
plloutdiv	vp/sifive/prci.h	/^    uint32_t plloutdiv = 0;$/;"	m	struct:PRCI	typeref:typename:uint32_t
pmpaddr0	core/csr.h	/^    csr_32 *pmpaddr0 = 0;$/;"	m	struct:csr_table	typeref:typename:csr_32 *
pmpaddr0	vp/csr.h	/^    csr_32 *pmpaddr0 = 0;$/;"	m	struct:csr_table	typeref:typename:csr_32 *
pmpcfg0	core/csr.h	/^    csr_pmpcfg *pmpcfg0 = 0;$/;"	m	struct:csr_table	typeref:typename:csr_pmpcfg *
pmpcfg0	vp/csr.h	/^    csr_pmpcfg *pmpcfg0 = 0;$/;"	m	struct:csr_table	typeref:typename:csr_pmpcfg *
ports	core/bus.h	/^	PortMapping * ports[NR_OF_TARGETS];$/;"	m	struct:Bus	typeref:typename:PortMapping * []
ports	vp/bus.h	/^    std::array<PortMapping *, NR_OF_TARGETS> ports;$/;"	m	struct:SimpleBus	typeref:typename:std::array<PortMapping *,NR_OF_TARGETS>
ppn	core/csr.h	/^            unsigned ppn: 22;   \/\/ WARL$/;"	m	struct:csr_satp::__anon50a6ad1b100a::__anon50a6ad1b1108	typeref:typename:unsigned:22
ppn	vp/csr.h	/^            unsigned ppn: 22;   \/\/ WARL$/;"	m	struct:csr_satp::__anon8468e878100a::__anon8468e8781108	typeref:typename:unsigned:22
prci_end_addr	vp/sifive/sifive_main.cpp	/^    addr_t prci_end_addr      = 0x1000FFFF;$/;"	m	struct:Options	typeref:typename:addr_t	file:
prci_start_addr	vp/sifive/sifive_main.cpp	/^    addr_t prci_start_addr    = 0x10008000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
printDec	vp/ethernet.cpp	/^void printDec(const unsigned char* buf, const uint32_t len)$/;"	f	typeref:typename:void
printHex	vp/ethernet.cpp	/^void printHex(const unsigned char* buf, const uint32_t len)$/;"	f	typeref:typename:void
priority_threshold	vp/plic.h	/^    uint32_t priority_threshold = 0;$/;"	m	struct:PLIC	typeref:typename:uint32_t
ptype	vp/ethernet.h	/^    uint16_t ptype;$/;"	m	struct:arp_eth_header	typeref:typename:uint16_t
quadrant	core/instr.h	/^    inline uint32_t quadrant() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
quadrant	vp/instr.h	/^    inline uint32_t quadrant() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
quantum_keeper	vp/iss.h	/^    tlm_utils::tlm_quantumkeeper &quantum_keeper;$/;"	m	struct:CombinedMemoryInterface	typeref:typename:tlm_utils::tlm_quantumkeeper &
quantum_keeper	vp/iss.h	/^    tlm_utils::tlm_quantumkeeper &quantum_keeper;$/;"	m	struct:DataMemoryProxy	typeref:typename:tlm_utils::tlm_quantumkeeper &
quantum_keeper	vp/iss.h	/^    tlm_utils::tlm_quantumkeeper &quantum_keeper;$/;"	m	struct:InstrMemoryProxy	typeref:typename:tlm_utils::tlm_quantumkeeper &
quantum_keeper	vp/iss.h	/^    tlm_utils::tlm_quantumkeeper quantum_keeper;$/;"	m	struct:ISS	typeref:typename:tlm_utils::tlm_quantumkeeper
ra	core/regfile.h	/^        ra = x1,$/;"	e	enum:RegFile::e
ra	vp/iss.h	/^        ra = x1,$/;"	e	enum:RegFile::e
raw	vp/display.hpp	/^		uint8_t* raw;$/;"	m	union:Display::__anone801af26010a	typeref:typename:uint8_t *
rd	core/instr.h	/^    inline uint32_t rd() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
rd	vp/instr.h	/^    inline uint32_t rd() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
read	core/csr.h	/^	int32_t read()$/;"	f	struct:csr_base	typeref:typename:int32_t
read	core/regfile.h	/^    int32_t read(uint32_t index) {$/;"	f	struct:RegFile	typeref:typename:int32_t
read	vp/csr.h	/^    int32_t read(PrivilegeLevel access_level=PrivilegeLevel::Machine) {$/;"	f	struct:csr_base	typeref:typename:int32_t
read	vp/iss.h	/^    int32_t read(uint32_t index) {$/;"	f	struct:RegFile	typeref:typename:int32_t
read	vp/tlm_map.h	/^        bool read;$/;"	m	struct:vp::map::register_access_t	typeref:typename:bool
readBlock	vp/flash.h	/^	void readBlock(uint64_t blockOffset)$/;"	f	struct:Blockbuffer	typeref:typename:void
read_data	vp/memory.h	/^    void read_data(unsigned addr, uint8_t *dst, unsigned num_bytes) {$/;"	f	struct:SimpleMemory	typeref:typename:void
read_data	vp/mram.h	/^    void read_data(unsigned addr, uint8_t *dst, unsigned num_bytes) {$/;"	f	struct:SimpleMRAM	typeref:typename:void
read_memory	vp/gdb_stub.cpp	/^std::string debug_memory_mapping::read_memory(unsigned start, int nbytes) {$/;"	f	class:debug_memory_mapping	typeref:typename:std::string
read_only	vp/tlm_map.h	/^    constexpr access_mode read_only = {true, false};$/;"	v	namespace:vp::map	typeref:typename:access_mode
read_write	vp/tlm_map.h	/^    constexpr access_mode read_write = {true, true};$/;"	v	namespace:vp::map	typeref:typename:access_mode
receive_dst	vp/ethernet.h	/^    uint32_t receive_dst = 0;$/;"	m	struct:EthernetDevice	typeref:typename:uint32_t
receive_packet	vp/gdb_stub.cpp	/^std::string DebugCoreRunner::receive_packet(int conn) {$/;"	f	class:DebugCoreRunner	typeref:typename:std::string
receive_size	vp/ethernet.h	/^    uint32_t receive_size = 0;$/;"	m	struct:EthernetDevice	typeref:typename:uint32_t
recv_frame_buf	vp/ethernet.h	/^	uint8_t recv_frame_buf[FRAME_SIZE];$/;"	m	struct:EthernetDevice	typeref:typename:uint8_t[]
reg	PEs/PE.h	/^		uint32_t reg;$/;"	m	union:first_level_config::__anon1f78fa87010a	typeref:typename:uint32_t
reg	RFU/contextreg_if.h	/^		uint32_t	reg;$/;"	m	union:slc::__anone86e04c8050a	typeref:typename:uint32_t
reg	RFU/contextreg_if.h	/^		uint32_t reg;$/;"	m	union:flc::__anone86e04c8010a	typeref:typename:uint32_t
reg	core/csr.h	/^        int32_t reg = 0;$/;"	m	union:csr_mcause::__anon50a6ad1b0e0a	typeref:typename:int32_t
reg	core/csr.h	/^        int32_t reg = 0;$/;"	m	union:csr_mepc::__anon50a6ad1b0d0a	typeref:typename:int32_t
reg	core/csr.h	/^        int32_t reg = 0;$/;"	m	union:csr_mie::__anon50a6ad1b090a	typeref:typename:int32_t
reg	core/csr.h	/^        int32_t reg = 0;$/;"	m	union:csr_mip::__anon50a6ad1b0b0a	typeref:typename:int32_t
reg	core/csr.h	/^        int32_t reg = 0;$/;"	m	union:csr_misa::__anon50a6ad1b010a	typeref:typename:int32_t
reg	core/csr.h	/^        int32_t reg = 0;$/;"	m	union:csr_mstatus::__anon50a6ad1b050a	typeref:typename:int32_t
reg	core/csr.h	/^        int32_t reg = 0;$/;"	m	union:csr_mtvec::__anon50a6ad1b070a	typeref:typename:int32_t
reg	core/csr.h	/^        int32_t reg = 0;$/;"	m	union:csr_mvendorid::__anon50a6ad1b030a	typeref:typename:int32_t
reg	core/csr.h	/^        int32_t reg = 0;$/;"	m	union:csr_pmpcfg::__anon50a6ad1b120a	typeref:typename:int32_t
reg	core/csr.h	/^        int32_t reg = 0;$/;"	m	union:csr_satp::__anon50a6ad1b100a	typeref:typename:int32_t
reg	core/csr.h	/^        int64_t reg = 0;$/;"	m	union:csr_64::__anon50a6ad1b140a	typeref:typename:int64_t
reg	core/csr.h	/^    int32_t reg = 0;$/;"	m	struct:csr_32	typeref:typename:int32_t
reg	vp/csr.h	/^        int32_t reg = 0;$/;"	m	union:csr_mcause::__anon8468e8780e0a	typeref:typename:int32_t
reg	vp/csr.h	/^        int32_t reg = 0;$/;"	m	union:csr_mepc::__anon8468e8780d0a	typeref:typename:int32_t
reg	vp/csr.h	/^        int32_t reg = 0;$/;"	m	union:csr_mie::__anon8468e878090a	typeref:typename:int32_t
reg	vp/csr.h	/^        int32_t reg = 0;$/;"	m	union:csr_mip::__anon8468e8780b0a	typeref:typename:int32_t
reg	vp/csr.h	/^        int32_t reg = 0;$/;"	m	union:csr_misa::__anon8468e878010a	typeref:typename:int32_t
reg	vp/csr.h	/^        int32_t reg = 0;$/;"	m	union:csr_mstatus::__anon8468e878050a	typeref:typename:int32_t
reg	vp/csr.h	/^        int32_t reg = 0;$/;"	m	union:csr_mtvec::__anon8468e878070a	typeref:typename:int32_t
reg	vp/csr.h	/^        int32_t reg = 0;$/;"	m	union:csr_mvendorid::__anon8468e878030a	typeref:typename:int32_t
reg	vp/csr.h	/^        int32_t reg = 0;$/;"	m	union:csr_pmpcfg::__anon8468e878120a	typeref:typename:int32_t
reg	vp/csr.h	/^        int32_t reg = 0;$/;"	m	union:csr_satp::__anon8468e878100a	typeref:typename:int32_t
reg	vp/csr.h	/^        int64_t reg = 0;$/;"	m	union:csr_64::__anon8468e878140a	typeref:typename:int64_t
reg	vp/csr.h	/^    int32_t reg = 0;$/;"	m	struct:csr_32	typeref:typename:int32_t
reg_mapping_t	vp/tlm_map.h	/^    struct reg_mapping_t {$/;"	s	namespace:vp::map
reg_t	core/syscall.cpp	/^typedef int32_t reg_t;$/;"	t	typeref:typename:int32_t	file:
reg_t	vp/syscall.cpp	/^typedef int32_t reg_t;$/;"	t	typeref:typename:int32_t	file:
regfile	vp/gdb_stub.h	/^    RegFile &regfile;$/;"	m	struct:DebugCoreRunner	typeref:typename:RegFile &
register_access_callback	vp/ethernet.h	/^    void register_access_callback(const vp::map::register_access_t &r) {$/;"	f	struct:EthernetDevice	typeref:typename:void
register_access_callback	vp/sensor2.h	/^    void register_access_callback(const vp::map::register_access_t &r) {$/;"	f	struct:SimpleSensor2	typeref:typename:void
register_access_callback	vp/sifive/gpio.h	/^    void register_access_callback(const vp::map::register_access_t &r) {$/;"	f	struct:GPIO	typeref:typename:void
register_access_callback	vp/sifive/prci.h	/^    void register_access_callback(const vp::map::register_access_t &r) {$/;"	f	struct:PRCI	typeref:typename:void
register_access_callback	vp/sifive/spi.h	/^    void register_access_callback(const vp::map::register_access_t &r) {$/;"	f	struct:SPI	typeref:typename:void
register_access_callback	vp/sifive/uart.h	/^    void register_access_callback(const vp::map::register_access_t &r) {$/;"	f	struct:UART	typeref:typename:void
register_access_t	vp/tlm_map.h	/^    struct register_access_t {$/;"	s	namespace:vp::map
register_handler	vp/tlm_map.h	/^        AddressMapping &register_handler(AddressMapping::fn_transport_t fn) {$/;"	f	struct:vp::map::AddressMapping	typeref:typename:AddressMapping &
register_handler	vp/tlm_map.h	/^        AddressMapping &register_handler(Module *this_, MemberFun fn) {$/;"	f	struct:vp::map::AddressMapping	typeref:typename:AddressMapping &
register_handler	vp/tlm_map.h	/^        RegisterMapping &register_handler(Module *this_, MemberFun fn) {$/;"	f	struct:vp::map::RegisterMapping	typeref:typename:RegisterMapping &
register_handler	vp/tlm_map.h	/^        RegisterMapping &register_handler(RegisterMapping::handler_t fn) {$/;"	f	struct:vp::map::RegisterMapping	typeref:typename:RegisterMapping &
regs	core/iss.h	/^    RegFile regs;$/;"	m	struct:ISS	typeref:typename:RegFile
regs	core/regfile.h	/^    int32_t regs[NUM_REGS];$/;"	m	struct:RegFile	typeref:typename:int32_t[]
regs	vp/iss.h	/^    RegFile regs;$/;"	m	struct:ISS	typeref:typename:RegFile
regs	vp/iss.h	/^    int32_t regs[NUM_REGS];$/;"	m	struct:RegFile	typeref:typename:int32_t[]
release	core/mem_if.h	/^				release                                               \/\/\/ release entry$/;"	f	class:CombinedMemoryInterface::tg_queue_c	typeref:typename:void
reserved	PEs/PE.h	/^			unsigned reserved: 14;$/;"	m	struct:first_level_config::__anon1f78fa87010a::__anon1f78fa870208	typeref:typename:unsigned:14
reserved	RFU/contextreg_if.h	/^			unsigned reserved	:12;$/;"	m	struct:slc::__anone86e04c8050a::__anone86e04c80608	typeref:typename:unsigned:12
reserved	RFU/contextreg_if.h	/^			unsigned reserved	:14;$/;"	m	struct:flc::__anone86e04c8010a::__anone86e04c80208	typeref:typename:unsigned:14
return_from_trap_handler	core/iss.h	/^    void return_from_trap_handler() {$/;"	f	struct:ISS	typeref:typename:void
return_from_trap_handler	vp/iss.h	/^    void return_from_trap_handler() {$/;"	f	struct:ISS	typeref:typename:void
rfu_end_addr	core/main.cpp	/^	addr_t rfu_end_addr			= 0x30000100;$/;"	m	struct:Options	typeref:typename:addr_t	file:
rfu_start_addr	core/main.cpp	/^	addr_t rfu_start_addr		= 0x30000000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
riscv-vp	vp/CMakeLists.txt	/^add_executable(riscv-vp$/;"	t
rl	core/instr.h	/^    inline bool rl() {$/;"	f	struct:Instruction	typeref:typename:bool
rl	vp/instr.h	/^    inline bool rl() {$/;"	f	struct:Instruction	typeref:typename:bool
router	vp/ethernet.h	/^    vp::map::LocalRouter router;$/;"	m	struct:EthernetDevice	typeref:typename:vp::map::LocalRouter
router	vp/sensor2.h	/^    vp::map::LocalRouter router;$/;"	m	struct:SimpleSensor2	typeref:typename:vp::map::LocalRouter
router	vp/sifive/gpio.h	/^    vp::map::LocalRouter router;$/;"	m	struct:GPIO	typeref:typename:vp::map::LocalRouter
router	vp/sifive/prci.h	/^    vp::map::LocalRouter router;$/;"	m	struct:PRCI	typeref:typename:vp::map::LocalRouter
router	vp/sifive/spi.h	/^    vp::map::LocalRouter router;$/;"	m	struct:SPI	typeref:typename:vp::map::LocalRouter
router	vp/sifive/uart.h	/^    vp::map::LocalRouter router;$/;"	m	struct:UART	typeref:typename:vp::map::LocalRouter
rs1	core/instr.h	/^    inline uint32_t rs1() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
rs1	vp/instr.h	/^    inline uint32_t rs1() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
rs2	core/instr.h	/^    inline uint32_t rs2() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
rs2	vp/instr.h	/^    inline uint32_t rs2() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
run	core/clint_if.cpp	/^void Clint::run()$/;"	f	class:Clint	typeref:typename:void
run	core/dma.h	/^    void run() {$/;"	f	struct:SimpleDMA	typeref:typename:void
run	core/iss.h	/^    void run() {$/;"	f	struct:DirectCoreRunner	typeref:typename:void
run	core/iss.h	/^    void run() {$/;"	f	struct:ISS	typeref:typename:void
run	vp/basic_timer.h	/^    void run() {$/;"	f	struct:BasicTimer	typeref:typename:void
run	vp/clint.h	/^    void run() { \/\/设置好cmp寄存器后，此进程被触发，之后再挂起等待定时/;"	f	struct:CLINT	typeref:typename:void
run	vp/dma.h	/^    void run() {$/;"	f	struct:SimpleDMA	typeref:typename:void
run	vp/ethernet.h	/^    void run() {$/;"	f	struct:EthernetDevice	typeref:typename:void
run	vp/gdb_stub.cpp	/^void DebugCoreRunner::run() {$/;"	f	class:DebugCoreRunner	typeref:typename:void
run	vp/iss.h	/^    void run() {$/;"	f	struct:DirectCoreRunner	typeref:typename:void
run	vp/iss.h	/^    void run() {$/;"	f	struct:ISS	typeref:typename:void
run	vp/plic.h	/^    void run() {$/;"	f	struct:PLIC	typeref:typename:void
run	vp/sensor.h	/^    void run() {$/;"	f	struct:SimpleSensor	typeref:typename:void
run	vp/sensor2.h	/^    void run() {$/;"	f	struct:SimpleSensor2	typeref:typename:void
run_event	core/dma.h	/^    sc_core::sc_event run_event;$/;"	m	struct:SimpleDMA	typeref:typename:sc_core::sc_event
run_event	vp/dma.h	/^    sc_core::sc_event run_event;$/;"	m	struct:SimpleDMA	typeref:typename:sc_core::sc_event
run_event	vp/ethernet.h	/^    sc_core::sc_event run_event;$/;"	m	struct:EthernetDevice	typeref:typename:sc_core::sc_event
run_event	vp/sensor.h	/^    sc_core::sc_event run_event;$/;"	m	struct:SimpleSensor	typeref:typename:sc_core::sc_event
run_event	vp/sensor2.h	/^    sc_core::sc_event run_event;$/;"	m	struct:SimpleSensor2	typeref:typename:sc_core::sc_event
run_step	core/iss.h	/^    void run_step() {$/;"	f	struct:ISS	typeref:typename:void
run_step	vp/iss.h	/^    void run_step() {$/;"	f	struct:ISS	typeref:typename:void
rv32g_stat	core/syscall.cpp	/^struct rv32g_stat$/;"	s	file:
rv32g_stat	vp/syscall.cpp	/^struct rv32g_stat$/;"	s	file:
rv32g_time_t	core/syscall.cpp	/^typedef int32_t rv32g_time_t;$/;"	t	typeref:typename:int32_t	file:
rv32g_time_t	vp/syscall.cpp	/^typedef int32_t rv32g_time_t;$/;"	t	typeref:typename:int32_t	file:
rv32g_timespec	core/syscall.cpp	/^struct rv32g_timespec {$/;"	s	file:
rv32g_timespec	vp/syscall.cpp	/^struct rv32g_timespec {$/;"	s	file:
rx_fifo	vp/sifive/uart.h	/^    std::deque<uint8_t> rx_fifo;$/;"	m	struct:UART	typeref:typename:std::deque<uint8_t>
rxctrl	vp/sifive/uart.h	/^    uint32_t rxctrl = 0;$/;"	m	struct:UART	typeref:typename:uint32_t
rxdata	vp/sifive/uart.h	/^    uint32_t rxdata = 0;$/;"	m	struct:UART	typeref:typename:uint32_t
s0	core/regfile.h	/^        s0 = x8,$/;"	e	enum:RegFile::e
s0	vp/iss.h	/^        s0 = x8,$/;"	e	enum:RegFile::e
s1	core/regfile.h	/^        s1 = x9,$/;"	e	enum:RegFile::e
s1	vp/iss.h	/^        s1 = x9,$/;"	e	enum:RegFile::e
s10	core/regfile.h	/^        s10 = x26,$/;"	e	enum:RegFile::e
s10	vp/iss.h	/^        s10 = x26,$/;"	e	enum:RegFile::e
s11	core/regfile.h	/^        s11 = x27,$/;"	e	enum:RegFile::e
s11	vp/iss.h	/^        s11 = x27,$/;"	e	enum:RegFile::e
s2	core/regfile.h	/^        s2 = x18,$/;"	e	enum:RegFile::e
s2	vp/iss.h	/^        s2 = x18,$/;"	e	enum:RegFile::e
s3	core/regfile.h	/^        s3 = x19,$/;"	e	enum:RegFile::e
s3	vp/iss.h	/^        s3 = x19,$/;"	e	enum:RegFile::e
s4	core/regfile.h	/^        s4 = x20,$/;"	e	enum:RegFile::e
s4	vp/iss.h	/^        s4 = x20,$/;"	e	enum:RegFile::e
s5	core/regfile.h	/^        s5 = x21,$/;"	e	enum:RegFile::e
s5	vp/iss.h	/^        s5 = x21,$/;"	e	enum:RegFile::e
s6	core/regfile.h	/^        s6 = x22,$/;"	e	enum:RegFile::e
s6	vp/iss.h	/^        s6 = x22,$/;"	e	enum:RegFile::e
s7	core/regfile.h	/^        s7 = x23,$/;"	e	enum:RegFile::e
s7	vp/iss.h	/^        s7 = x23,$/;"	e	enum:RegFile::e
s8	core/regfile.h	/^        s8 = x24,$/;"	e	enum:RegFile::e
s8	vp/iss.h	/^        s8 = x24,$/;"	e	enum:RegFile::e
s9	core/regfile.h	/^        s9 = x25,$/;"	e	enum:RegFile::e
s9	vp/iss.h	/^        s9 = x25,$/;"	e	enum:RegFile::e
satp	core/csr.h	/^    csr_satp *satp = 0;$/;"	m	struct:csr_table	typeref:typename:csr_satp *
satp	vp/csr.h	/^    csr_satp *satp = 0;$/;"	m	struct:csr_table	typeref:typename:csr_satp *
sc_main	core/main.cpp	/^int sc_main(int argc, char **argv)$/;"	f	typeref:typename:int
sc_main	helloworld/helloworld.cpp	/^int sc_main(int argc, char *argv[]){	$/;"	f	typeref:typename:int
sc_main	vp/main.cpp	/^int sc_main(int argc, char **argv) {$/;"	f	typeref:typename:int
sc_main	vp/sifive/sifive_main.cpp	/^int sc_main(int argc, char **argv) {$/;"	f	typeref:typename:int
scaler	core/clint_if.h	/^	static constexpr uint64_t scaler = 1000000;$/;"	m	struct:Clint	typeref:typename:uint64_t
scaler	vp/clint.h	/^    static constexpr uint64_t scaler = 1000000;    \/\/ scale from PS resolution (default in Sys/;"	m	struct:CLINT	typeref:typename:uint64_t
scaler	vp/sensor.h	/^    uint32_t scaler = 25;$/;"	m	struct:SimpleSensor	typeref:typename:uint32_t
scaler	vp/sensor2.h	/^    uint32_t scaler = 25;$/;"	m	struct:SimpleSensor2	typeref:typename:uint32_t
sckdiv	vp/sifive/spi.h	/^    uint32_t sckdiv = 0;$/;"	m	struct:SPI	typeref:typename:uint32_t
sd	core/csr.h	/^            unsigned sd: 1;$/;"	m	struct:csr_mstatus::__anon50a6ad1b050a::__anon50a6ad1b0608	typeref:typename:unsigned:1
sd	vp/csr.h	/^            unsigned sd: 1;$/;"	m	struct:csr_mstatus::__anon8468e878050a::__anon8468e8780608	typeref:typename:unsigned:1
seie	core/csr.h	/^            unsigned seie: 1;$/;"	m	struct:csr_mie::__anon50a6ad1b090a::__anon50a6ad1b0a08	typeref:typename:unsigned:1
seie	vp/csr.h	/^            unsigned seie: 1;$/;"	m	struct:csr_mie::__anon8468e878090a::__anon8468e8780a08	typeref:typename:unsigned:1
seip	core/csr.h	/^            unsigned seip: 1;$/;"	m	struct:csr_mip::__anon50a6ad1b0b0a::__anon50a6ad1b0c08	typeref:typename:unsigned:1
seip	vp/csr.h	/^            unsigned seip: 1;$/;"	m	struct:csr_mip::__anon8468e8780b0a::__anon8468e8780c08	typeref:typename:unsigned:1
send_packet	vp/gdb_stub.cpp	/^void DebugCoreRunner::send_packet(int conn, const std::string &msg) {$/;"	f	class:DebugCoreRunner	typeref:typename:void
send_raw	vp/gdb_stub.cpp	/^void send_raw(int conn, const std::string &msg) {$/;"	f	typeref:typename:void
send_raw_frame	vp/ethernet.cpp	/^void EthernetDevice::send_raw_frame() {$/;"	f	class:EthernetDevice	typeref:typename:void
send_size	vp/ethernet.h	/^    uint32_t send_size = 0;$/;"	m	struct:EthernetDevice	typeref:typename:uint32_t
send_src	vp/ethernet.h	/^    uint32_t send_src = 0;$/;"	m	struct:EthernetDevice	typeref:typename:uint32_t
sender_ip	vp/ethernet.h	/^    uint8_t sender_ip[4];$/;"	m	struct:arp_eth_header	typeref:typename:uint8_t[4]
sender_mac	vp/ethernet.h	/^    uint8_t sender_mac[6];$/;"	m	struct:arp_eth_header	typeref:typename:uint8_t[6]
sensor2_end_addr	vp/main.cpp	/^    addr_t sensor2_end_addr   = 0x50004000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
sensor2_start_addr	vp/main.cpp	/^    addr_t sensor2_start_addr = 0x50002000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
sensor_end_addr	vp/main.cpp	/^    addr_t sensor_end_addr    = 0x50001000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
sensor_start_addr	vp/main.cpp	/^    addr_t sensor_start_addr  = 0x50000000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
setData	vp/flash.h	/^	void setData(const uint8_t* source, uint16_t pos, uint16_t length)$/;"	f	struct:Blockbuffer	typeref:typename:void
setPos	vp/flash.h	/^	void setPos(uint64_t blockOffset)$/;"	f	struct:Blockbuffer	typeref:typename:void
set_bits	core/csr.h	/^    void set_bits(int32_t mask) {$/;"	f	struct:csr_base	typeref:typename:void
set_bits	vp/csr.h	/^    void set_bits(int32_t mask, PrivilegeLevel access_level=PrivilegeLevel::Machine) {$/;"	f	struct:csr_base	typeref:typename:void
setup	core/csr.h	/^    void setup() {$/;"	f	struct:csr_table	typeref:typename:void
setup	vp/csr.h	/^    void setup() {$/;"	f	struct:csr_table	typeref:typename:void
sh_addr	core/elf_loader.h	/^    Elf32_Addr	sh_addr;$/;"	m	struct:__anon947b0a800308	typeref:typename:Elf32_Addr
sh_addr	vp/elf_loader.h	/^    Elf32_Addr	sh_addr;$/;"	m	struct:__anonb9f73b3d0308	typeref:typename:Elf32_Addr
sh_addralign	core/elf_loader.h	/^    Elf32_Word	sh_addralign;$/;"	m	struct:__anon947b0a800308	typeref:typename:Elf32_Word
sh_addralign	vp/elf_loader.h	/^    Elf32_Word	sh_addralign;$/;"	m	struct:__anonb9f73b3d0308	typeref:typename:Elf32_Word
sh_entsize	core/elf_loader.h	/^    Elf32_Word	sh_entsize;$/;"	m	struct:__anon947b0a800308	typeref:typename:Elf32_Word
sh_entsize	vp/elf_loader.h	/^    Elf32_Word	sh_entsize;$/;"	m	struct:__anonb9f73b3d0308	typeref:typename:Elf32_Word
sh_flags	core/elf_loader.h	/^    Elf32_Word	sh_flags;$/;"	m	struct:__anon947b0a800308	typeref:typename:Elf32_Word
sh_flags	vp/elf_loader.h	/^    Elf32_Word	sh_flags;$/;"	m	struct:__anonb9f73b3d0308	typeref:typename:Elf32_Word
sh_info	core/elf_loader.h	/^    Elf32_Word	sh_info;$/;"	m	struct:__anon947b0a800308	typeref:typename:Elf32_Word
sh_info	vp/elf_loader.h	/^    Elf32_Word	sh_info;$/;"	m	struct:__anonb9f73b3d0308	typeref:typename:Elf32_Word
sh_link	core/elf_loader.h	/^    Elf32_Word	sh_link;$/;"	m	struct:__anon947b0a800308	typeref:typename:Elf32_Word
sh_link	vp/elf_loader.h	/^    Elf32_Word	sh_link;$/;"	m	struct:__anonb9f73b3d0308	typeref:typename:Elf32_Word
sh_name	core/elf_loader.h	/^    Elf32_Word	sh_name;$/;"	m	struct:__anon947b0a800308	typeref:typename:Elf32_Word
sh_name	vp/elf_loader.h	/^    Elf32_Word	sh_name;$/;"	m	struct:__anonb9f73b3d0308	typeref:typename:Elf32_Word
sh_offset	core/elf_loader.h	/^    Elf32_Off	sh_offset;$/;"	m	struct:__anon947b0a800308	typeref:typename:Elf32_Off
sh_offset	vp/elf_loader.h	/^    Elf32_Off	sh_offset;$/;"	m	struct:__anonb9f73b3d0308	typeref:typename:Elf32_Off
sh_size	core/elf_loader.h	/^    Elf32_Word	sh_size;$/;"	m	struct:__anon947b0a800308	typeref:typename:Elf32_Word
sh_size	vp/elf_loader.h	/^    Elf32_Word	sh_size;$/;"	m	struct:__anonb9f73b3d0308	typeref:typename:Elf32_Word
sh_type	core/elf_loader.h	/^    Elf32_Word	sh_type;$/;"	m	struct:__anon947b0a800308	typeref:typename:Elf32_Word
sh_type	vp/elf_loader.h	/^    Elf32_Word	sh_type;$/;"	m	struct:__anonb9f73b3d0308	typeref:typename:Elf32_Word
shall_exit	core/syscall.h	/^	bool  shall_exit = false;$/;"	m	struct:SyscallHandler	typeref:typename:bool
shall_exit	vp/syscall.h	/^    bool shall_exit = false;$/;"	m	struct:SyscallHandler	typeref:typename:bool
shamt	core/instr.h	/^    inline uint32_t shamt() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
shamt	core/regfile.h	/^    uint32_t shamt(uint32_t index) {$/;"	f	struct:RegFile	typeref:typename:uint32_t
shamt	vp/instr.h	/^    inline uint32_t shamt() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
shamt	vp/iss.h	/^    uint32_t shamt(uint32_t index) {$/;"	f	struct:RegFile	typeref:typename:uint32_t
show	core/iss.h	/^    void show() {$/;"	f	struct:ISS	typeref:typename:void
show	core/regfile.h	/^    void show() {$/;"	f	struct:RegFile	typeref:typename:void
show	vp/iss.h	/^    void show() {$/;"	f	struct:ISS	typeref:typename:void
show	vp/iss.h	/^    void show() {$/;"	f	struct:RegFile	typeref:typename:void
show	vp/main.cpp	/^    void show() {$/;"	f	struct:Options	typeref:typename:void	file:
show	vp/sifive/sifive_main.cpp	/^    void show() {$/;"	f	struct:Options	typeref:typename:void	file:
sie	core/csr.h	/^            unsigned sie: 1;$/;"	m	struct:csr_mstatus::__anon50a6ad1b050a::__anon50a6ad1b0608	typeref:typename:unsigned:1
sie	vp/csr.h	/^            unsigned sie: 1;$/;"	m	struct:csr_mstatus::__anon8468e878050a::__anon8468e8780608	typeref:typename:unsigned:1
sifive-vp	vp/sifive/CMakeLists.txt	/^add_executable(sifive-vp$/;"	t
size	core/mem_if.h	/^				size                                                  \/\/\/ queue size$/;"	f	class:CombinedMemoryInterface::tg_queue_c	typeref:typename:size_t
size	vp/iss.h	/^    uint32_t size; $/;"	m	struct:direct_memory_interface	typeref:typename:uint32_t
size	vp/memory.h	/^    uint32_t size;$/;"	m	struct:SimpleMemory	typeref:typename:uint32_t
slc	RFU/contextreg_if.h	/^	slc(uint32_t slc)$/;"	f	struct:slc
slc	RFU/contextreg_if.h	/^struct slc$/;"	s
slcs_if	RFU/slcs_if.h	/^class slcs_if$/;"	c
soc	build/Makefile	/^soc:$(OBJs)$/;"	t
sockfd	vp/ethernet.h	/^    int sockfd = 0;$/;"	m	struct:EthernetDevice	typeref:typename:int
sp	core/regfile.h	/^        sp = x2,$/;"	e	enum:RegFile::e
sp	vp/iss.h	/^        sp = x2,$/;"	e	enum:RegFile::e
spi0_end_addr	vp/sifive/sifive_main.cpp	/^    addr_t spi0_end_addr      = 0x10014FFF;$/;"	m	struct:Options	typeref:typename:addr_t	file:
spi0_start_addr	vp/sifive/sifive_main.cpp	/^    addr_t spi0_start_addr    = 0x10014000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
spie	core/csr.h	/^            unsigned spie: 1;$/;"	m	struct:csr_mstatus::__anon50a6ad1b050a::__anon50a6ad1b0608	typeref:typename:unsigned:1
spie	vp/csr.h	/^            unsigned spie: 1;$/;"	m	struct:csr_mstatus::__anon8468e878050a::__anon8468e8780608	typeref:typename:unsigned:1
spp	core/csr.h	/^            unsigned spp: 1;$/;"	m	struct:csr_mstatus::__anon50a6ad1b050a::__anon50a6ad1b0608	typeref:typename:unsigned:1
spp	vp/csr.h	/^            unsigned spp: 1;$/;"	m	struct:csr_mstatus::__anon8468e878050a::__anon8468e8780608	typeref:typename:unsigned:1
src	core/dma.h	/^    uint32_t src  = 0;$/;"	m	struct:SimpleDMA	typeref:typename:uint32_t
src	vp/dma.h	/^    uint32_t src  = 0;$/;"	m	struct:SimpleDMA	typeref:typename:uint32_t
ssie	core/csr.h	/^            unsigned ssie: 1;$/;"	m	struct:csr_mie::__anon50a6ad1b090a::__anon50a6ad1b0a08	typeref:typename:unsigned:1
ssie	vp/csr.h	/^            unsigned ssie: 1;$/;"	m	struct:csr_mie::__anon8468e878090a::__anon8468e8780a08	typeref:typename:unsigned:1
ssip	core/csr.h	/^            unsigned ssip: 1;$/;"	m	struct:csr_mip::__anon50a6ad1b0b0a::__anon50a6ad1b0c08	typeref:typename:unsigned:1
ssip	vp/csr.h	/^            unsigned ssip: 1;$/;"	m	struct:csr_mip::__anon8468e8780b0a::__anon8468e8780c08	typeref:typename:unsigned:1
st_atim	core/syscall.cpp	/^    rv32g_timespec st_atim;$/;"	m	struct:rv32g_stat	typeref:typename:rv32g_timespec	file:
st_atim	vp/syscall.cpp	/^    rv32g_timespec st_atim;$/;"	m	struct:rv32g_stat	typeref:typename:rv32g_timespec	file:
st_blksize	core/syscall.cpp	/^    int32_t st_blksize;$/;"	m	struct:rv32g_stat	typeref:typename:int32_t	file:
st_blksize	vp/syscall.cpp	/^    int32_t st_blksize;$/;"	m	struct:rv32g_stat	typeref:typename:int32_t	file:
st_blocks	core/syscall.cpp	/^    int64_t st_blocks;$/;"	m	struct:rv32g_stat	typeref:typename:int64_t	file:
st_blocks	vp/syscall.cpp	/^    int64_t st_blocks;$/;"	m	struct:rv32g_stat	typeref:typename:int64_t	file:
st_ctim	core/syscall.cpp	/^    rv32g_timespec st_ctim;$/;"	m	struct:rv32g_stat	typeref:typename:rv32g_timespec	file:
st_ctim	vp/syscall.cpp	/^    rv32g_timespec st_ctim;$/;"	m	struct:rv32g_stat	typeref:typename:rv32g_timespec	file:
st_dev	core/syscall.cpp	/^    uint64_t st_dev;$/;"	m	struct:rv32g_stat	typeref:typename:uint64_t	file:
st_dev	vp/syscall.cpp	/^    uint64_t st_dev;$/;"	m	struct:rv32g_stat	typeref:typename:uint64_t	file:
st_gid	core/syscall.cpp	/^    uint32_t st_gid;$/;"	m	struct:rv32g_stat	typeref:typename:uint32_t	file:
st_gid	vp/syscall.cpp	/^    uint32_t st_gid;$/;"	m	struct:rv32g_stat	typeref:typename:uint32_t	file:
st_info	core/elf_loader.h	/^    unsigned char st_info;$/;"	m	struct:__anon947b0a800408	typeref:typename:unsigned char
st_info	vp/elf_loader.h	/^    unsigned char st_info;$/;"	m	struct:__anonb9f73b3d0408	typeref:typename:unsigned char
st_ino	core/syscall.cpp	/^    uint64_t st_ino;$/;"	m	struct:rv32g_stat	typeref:typename:uint64_t	file:
st_ino	vp/syscall.cpp	/^    uint64_t st_ino;$/;"	m	struct:rv32g_stat	typeref:typename:uint64_t	file:
st_mode	core/syscall.cpp	/^    uint32_t st_mode;$/;"	m	struct:rv32g_stat	typeref:typename:uint32_t	file:
st_mode	vp/syscall.cpp	/^    uint32_t st_mode;$/;"	m	struct:rv32g_stat	typeref:typename:uint32_t	file:
st_mtim	core/syscall.cpp	/^    rv32g_timespec st_mtim;$/;"	m	struct:rv32g_stat	typeref:typename:rv32g_timespec	file:
st_mtim	vp/syscall.cpp	/^    rv32g_timespec st_mtim;$/;"	m	struct:rv32g_stat	typeref:typename:rv32g_timespec	file:
st_name	core/elf_loader.h	/^    Elf32_Word st_name;$/;"	m	struct:__anon947b0a800408	typeref:typename:Elf32_Word
st_name	vp/elf_loader.h	/^    Elf32_Word st_name;$/;"	m	struct:__anonb9f73b3d0408	typeref:typename:Elf32_Word
st_nlink	core/syscall.cpp	/^    uint32_t st_nlink;$/;"	m	struct:rv32g_stat	typeref:typename:uint32_t	file:
st_nlink	vp/syscall.cpp	/^    uint32_t st_nlink;$/;"	m	struct:rv32g_stat	typeref:typename:uint32_t	file:
st_other	core/elf_loader.h	/^    unsigned char st_other;$/;"	m	struct:__anon947b0a800408	typeref:typename:unsigned char
st_other	vp/elf_loader.h	/^    unsigned char st_other;$/;"	m	struct:__anonb9f73b3d0408	typeref:typename:unsigned char
st_rdev	core/syscall.cpp	/^    uint64_t st_rdev;$/;"	m	struct:rv32g_stat	typeref:typename:uint64_t	file:
st_rdev	vp/syscall.cpp	/^    uint64_t st_rdev;$/;"	m	struct:rv32g_stat	typeref:typename:uint64_t	file:
st_shndx	core/elf_loader.h	/^    Elf32_Half st_shndx;$/;"	m	struct:__anon947b0a800408	typeref:typename:Elf32_Half
st_shndx	vp/elf_loader.h	/^    Elf32_Half st_shndx;$/;"	m	struct:__anonb9f73b3d0408	typeref:typename:Elf32_Half
st_size	core/elf_loader.h	/^    Elf32_Word st_size;$/;"	m	struct:__anon947b0a800408	typeref:typename:Elf32_Word
st_size	core/syscall.cpp	/^    int64_t st_size;$/;"	m	struct:rv32g_stat	typeref:typename:int64_t	file:
st_size	vp/elf_loader.h	/^    Elf32_Word st_size;$/;"	m	struct:__anonb9f73b3d0408	typeref:typename:Elf32_Word
st_size	vp/syscall.cpp	/^    int64_t st_size;$/;"	m	struct:rv32g_stat	typeref:typename:int64_t	file:
st_uid	core/syscall.cpp	/^    uint32_t st_uid;$/;"	m	struct:rv32g_stat	typeref:typename:uint32_t	file:
st_uid	vp/syscall.cpp	/^    uint32_t st_uid;$/;"	m	struct:rv32g_stat	typeref:typename:uint32_t	file:
st_value	core/elf_loader.h	/^    Elf32_Addr st_value;$/;"	m	struct:__anon947b0a800408	typeref:typename:Elf32_Addr
st_value	vp/elf_loader.h	/^    Elf32_Addr st_value;$/;"	m	struct:__anonb9f73b3d0408	typeref:typename:Elf32_Addr
start	vp/bus.h	/^    uint64_t start;$/;"	m	struct:PortMapping	typeref:typename:uint64_t
start	vp/gdb_stub.cpp	/^    unsigned start;$/;"	m	struct:memory_access_t	typeref:typename:unsigned	file:
start	vp/sifive/uart.h	/^    unsigned start;$/;"	m	struct:Reg32Field	typeref:typename:unsigned
start	vp/tlm_map.h	/^        uint64_t start;$/;"	m	struct:vp::map::AddressMapping	typeref:typename:uint64_t
start_heap	core/syscall.h	/^	uint32_t start_heap = 0;$/;"	m	struct:SyscallHandler	typeref:typename:uint32_t
start_heap	vp/syscall.h	/^    uint32_t start_heap = 0;$/;"	m	struct:SyscallHandler	typeref:typename:uint32_t
stat	core/dma.h	/^    uint32_t stat = 0;$/;"	m	struct:SimpleDMA	typeref:typename:uint32_t
stat	vp/dma.h	/^    uint32_t stat = 0;$/;"	m	struct:SimpleDMA	typeref:typename:uint32_t
status	core/iss.h	/^    CoreExecStatus status = CoreExecStatus::Runnable;$/;"	m	struct:ISS	typeref:typename:CoreExecStatus
status	vp/ethernet.h	/^    uint32_t status = 0;$/;"	m	struct:EthernetDevice	typeref:typename:uint32_t
status	vp/iss.h	/^    CoreExecStatus status = CoreExecStatus::Runnable;$/;"	m	struct:ISS	typeref:typename:CoreExecStatus
stie	core/csr.h	/^            unsigned stie: 1;$/;"	m	struct:csr_mie::__anon50a6ad1b090a::__anon50a6ad1b0a08	typeref:typename:unsigned:1
stie	vp/csr.h	/^            unsigned stie: 1;$/;"	m	struct:csr_mie::__anon8468e878090a::__anon8468e8780a08	typeref:typename:unsigned:1
stip	core/csr.h	/^            unsigned stip: 1;$/;"	m	struct:csr_mip::__anon50a6ad1b0b0a::__anon50a6ad1b0c08	typeref:typename:unsigned:1
stip	vp/csr.h	/^            unsigned stip: 1;$/;"	m	struct:csr_mip::__anon8468e8780b0a::__anon8468e8780c08	typeref:typename:unsigned:1
store_byte	core/mem_if.h	/^	void store_byte(addr_t addr, uint8_t value) { _store_data(addr, value); }$/;"	f	struct:CombinedMemoryInterface	typeref:typename:void
store_byte	vp/iss.h	/^    virtual void store_byte(addr_t addr, uint8_t value) { _store_data(addr, value); }$/;"	f	struct:DataMemoryProxy	typeref:typename:void
store_byte	vp/iss.h	/^    void store_byte(addr_t addr, uint8_t value) { _store_data(addr, value); }$/;"	f	struct:CombinedMemoryInterface	typeref:typename:void
store_half	core/mem_if.h	/^	void store_half(addr_t addr, uint16_t value) { _store_data(addr, value); }$/;"	f	struct:CombinedMemoryInterface	typeref:typename:void
store_half	vp/iss.h	/^    virtual void store_half(addr_t addr, uint16_t value) { _store_data(addr, value); }$/;"	f	struct:DataMemoryProxy	typeref:typename:void
store_half	vp/iss.h	/^    void store_half(addr_t addr, uint16_t value) { _store_data(addr, value); }$/;"	f	struct:CombinedMemoryInterface	typeref:typename:void
store_word	core/mem_if.h	/^	void store_word(addr_t addr, uint32_t value) { _store_data(addr, value); }$/;"	f	struct:CombinedMemoryInterface	typeref:typename:void
store_word	vp/iss.h	/^    virtual void store_word(addr_t addr, uint32_t value) { _store_data(addr, value); }$/;"	f	struct:DataMemoryProxy	typeref:typename:void
store_word	vp/iss.h	/^    void store_word(addr_t addr, uint32_t value) { _store_data(addr, value); }$/;"	f	struct:CombinedMemoryInterface	typeref:typename:void
sum	core/csr.h	/^            unsigned sum: 1;$/;"	m	struct:csr_mstatus::__anon50a6ad1b050a::__anon50a6ad1b0608	typeref:typename:unsigned:1
sum	vp/csr.h	/^            unsigned sum: 1;$/;"	m	struct:csr_mstatus::__anon8468e878050a::__anon8468e8780608	typeref:typename:unsigned:1
swap_byte_order	vp/gdb_stub.cpp	/^uint32_t swap_byte_order(uint32_t n) {$/;"	f	typeref:typename:uint32_t
switch_to_trap_handler	core/iss.h	/^    void switch_to_trap_handler() {$/;"	f	struct:ISS	typeref:typename:void
switch_to_trap_handler	vp/iss.h	/^    void switch_to_trap_handler() {$/;"	f	struct:ISS	typeref:typename:void
sys	core/iss.h	/^    SyscallHandler *sys;$/;"	m	struct:ISS	typeref:typename:SyscallHandler *
sys	vp/iss.h	/^    SyscallHandler *sys;$/;"	m	struct:ISS	typeref:typename:SyscallHandler *
sys_brk	core/syscall.cpp	/^int sys_brk(SyscallHandler *sys, void *addr) {$/;"	f	typeref:typename:int
sys_brk	vp/syscall.cpp	/^int sys_brk(SyscallHandler *sys, void *addr) {$/;"	f	typeref:typename:int
sys_close	core/syscall.cpp	/^int sys_close(int fd) {$/;"	f	typeref:typename:int
sys_close	vp/syscall.cpp	/^int sys_close(int fd) {$/;"	f	typeref:typename:int
sys_fstat	core/syscall.cpp	/^int sys_fstat(SyscallHandler *sys, int fd, rv32g_stat *s_addr) {$/;"	f	typeref:typename:int
sys_fstat	vp/syscall.cpp	/^int sys_fstat(SyscallHandler *sys, int fd, rv32g_stat *s_addr) {$/;"	f	typeref:typename:int
sys_gettimeofday	core/syscall.cpp	/^int sys_gettimeofday(SyscallHandler *sys, struct timeval *tp, void *tzp) {$/;"	f	typeref:typename:int
sys_gettimeofday	vp/syscall.cpp	/^int sys_gettimeofday(SyscallHandler *sys, struct timeval *tp, void *tzp) {$/;"	f	typeref:typename:int
sys_lseek	core/syscall.cpp	/^int sys_lseek(int fd, off_t offset, int whence) {$/;"	f	typeref:typename:int
sys_lseek	vp/syscall.cpp	/^int sys_lseek(int fd, off_t offset, int whence) {$/;"	f	typeref:typename:int
sys_open	core/syscall.cpp	/^int sys_open(SyscallHandler *sys, const char *pathname, int flags, mode_t mode) {$/;"	f	typeref:typename:int
sys_open	vp/syscall.cpp	/^int sys_open(SyscallHandler *sys, const char *pathname, int flags, mode_t mode) {$/;"	f	typeref:typename:int
sys_read	core/syscall.cpp	/^int sys_read(SyscallHandler *sys, int fd, void *buf, size_t count) {$/;"	f	typeref:typename:int
sys_read	vp/syscall.cpp	/^int sys_read(SyscallHandler *sys, int fd, void *buf, size_t count) {$/;"	f	typeref:typename:int
sys_time	core/syscall.cpp	/^int sys_time(SyscallHandler *sys, rv32g_time_t *tloc) {$/;"	f	typeref:typename:int
sys_time	vp/syscall.cpp	/^int sys_time(SyscallHandler *sys, rv32g_time_t *tloc) {$/;"	f	typeref:typename:int
sys_write	core/syscall.cpp	/^int sys_write(SyscallHandler *sys, int fd, const void *buf, size_t count) {$/;"	f	typeref:typename:int
sys_write	vp/syscall.cpp	/^int sys_write(SyscallHandler *sys, int fd, const void *buf, size_t count) {$/;"	f	typeref:typename:int
t0	core/regfile.h	/^        t0 = x5,$/;"	e	enum:RegFile::e
t0	vp/iss.h	/^        t0 = x5,$/;"	e	enum:RegFile::e
t1	core/regfile.h	/^        t1 = x6,$/;"	e	enum:RegFile::e
t1	vp/iss.h	/^        t1 = x6,$/;"	e	enum:RegFile::e
t2	core/regfile.h	/^        t2 = x7,$/;"	e	enum:RegFile::e
t2	vp/iss.h	/^        t2 = x7,$/;"	e	enum:RegFile::e
t3	core/regfile.h	/^        t3 = x28,$/;"	e	enum:RegFile::e
t3	vp/iss.h	/^        t3 = x28,$/;"	e	enum:RegFile::e
t4	core/regfile.h	/^        t4 = x29,$/;"	e	enum:RegFile::e
t4	vp/iss.h	/^        t4 = x29,$/;"	e	enum:RegFile::e
t5	core/regfile.h	/^        t5 = x30,$/;"	e	enum:RegFile::e
t5	vp/iss.h	/^        t5 = x30,$/;"	e	enum:RegFile::e
t6	core/regfile.h	/^        t6 = x31,$/;"	e	enum:RegFile::e
t6	vp/iss.h	/^        t6 = x31,$/;"	e	enum:RegFile::e
target	core/csr.h	/^    csr_64 &target;$/;"	m	struct:csr_64_high	typeref:typename:csr_64 &
target	core/csr.h	/^    csr_64 &target;$/;"	m	struct:csr_64_low	typeref:typename:csr_64 &
target	vp/csr.h	/^    csr_64 &target;$/;"	m	struct:csr_64_high	typeref:typename:csr_64 &
target	vp/csr.h	/^    csr_64 &target;$/;"	m	struct:csr_64_low	typeref:typename:csr_64 &
target_hart	vp/clint.h	/^    timer_interrupt_target *target_hart = nullptr;$/;"	m	struct:CLINT	typeref:typename:timer_interrupt_target *
target_hart	vp/plic.h	/^    external_interrupt_target *target_hart = nullptr;$/;"	m	struct:PLIC	typeref:typename:external_interrupt_target *
target_ip	vp/ethernet.h	/^    uint8_t target_ip[4];$/;"	m	struct:arp_eth_header	typeref:typename:uint8_t[4]
target_mac	vp/ethernet.h	/^    uint8_t target_mac[6];$/;"	m	struct:arp_eth_header	typeref:typename:uint8_t[6]
target_signal	vp/gdb_stub.cpp	/^enum target_signal {$/;"	g	file:
term_end_addr	core/main.cpp	/^	addr_t term_end_addr		= term_start_addr + 16;$/;"	m	struct:Options	typeref:typename:addr_t	file:
term_end_addr	vp/main.cpp	/^    addr_t term_end_addr      = term_start_addr + 16;$/;"	m	struct:Options	typeref:typename:addr_t	file:
term_start_addr	core/main.cpp	/^	addr_t term_start_addr		= 0x20000000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
term_start_addr	vp/main.cpp	/^    addr_t term_start_addr    = 0x20000000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
test_signature	vp/main.cpp	/^    std::string test_signature;$/;"	m	struct:Options	typeref:typename:std::string	file:
tg_queue_c	core/mem_if.h	/^			tg_queue_c                                            \/\/\/ tg_queue_c constructor$/;"	f	class:CombinedMemoryInterface::tg_queue_c
tg_queue_c	core/mem_if.h	/^	class tg_queue_c                                        \/\/\/ memory managed queue class$/;"	c	struct:CombinedMemoryInterface
timer_interrupt_target	core/irq_if.h	/^struct timer_interrupt_target {$/;"	s
timer_interrupt_target	vp/irq_if.h	/^struct timer_interrupt_target {$/;"	s
tlm_global_quantum	core/main.cpp	/^	unsigned int tlm_global_quantum = 10;$/;"	m	struct:Options	typeref:typename:unsigned int	file:
tlm_global_quantum	vp/main.cpp	/^    unsigned int tlm_global_quantum = 10;$/;"	m	struct:Options	typeref:typename:unsigned int	file:
tlm_global_quantum	vp/sifive/sifive_main.cpp	/^    unsigned int tlm_global_quantum = 10;$/;"	m	struct:Options	typeref:typename:unsigned int	file:
to	core/bus.h	/^		tlm_utils::simple_initiator_socket_tagged<Bus> * to;$/;"	m	struct:Bus::ConnectionInfo	typeref:typename:tlm_utils::simple_initiator_socket_tagged<Bus> *
tp	core/regfile.h	/^        tp = x4,$/;"	e	enum:RegFile::e
tp	vp/iss.h	/^        tp = x4,$/;"	e	enum:RegFile::e
transport	core/dma.h	/^    void transport(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay) {$/;"	f	struct:SimpleDMA	typeref:typename:void
transport	vp/bus.h	/^    void transport(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay) {$/;"	f	struct:SimpleBus	typeref:typename:void
transport	vp/clint.h	/^    void transport(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay) {$/;"	f	struct:CLINT	typeref:typename:void
transport	vp/display.cpp	/^void Display::transport(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay)$/;"	f	class:Display	typeref:typename:void
transport	vp/dma.h	/^    void transport(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay) {$/;"	f	struct:SimpleDMA	typeref:typename:void
transport	vp/ethernet.h	/^    void transport(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay) {$/;"	f	struct:EthernetDevice	typeref:typename:void
transport	vp/flash.h	/^    void transport(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay) {$/;"	f	struct:Flashcontroller	typeref:typename:void
transport	vp/memory.h	/^    void transport(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay) {$/;"	f	struct:SimpleMemory	typeref:typename:void
transport	vp/mram.h	/^    void transport(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay) {$/;"	f	struct:SimpleMRAM	typeref:typename:void
transport	vp/plic.h	/^    void transport(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay) {$/;"	f	struct:PLIC	typeref:typename:void
transport	vp/random_source.h	/^    void transport(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay) {$/;"	f	struct:RandomSource	typeref:typename:void
transport	vp/sensor.h	/^    void transport(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay) {$/;"	f	struct:SimpleSensor	typeref:typename:void
transport	vp/sensor2.h	/^    void transport(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay) {$/;"	f	struct:SimpleSensor2	typeref:typename:void
transport	vp/sifive/aon.h	/^    void transport(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay) {$/;"	f	struct:AON	typeref:typename:void
transport	vp/sifive/gpio.h	/^    void transport(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay) {$/;"	f	struct:GPIO	typeref:typename:void
transport	vp/sifive/prci.h	/^    void transport(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay) {$/;"	f	struct:PRCI	typeref:typename:void
transport	vp/sifive/spi.h	/^    void transport(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay) {$/;"	f	struct:SPI	typeref:typename:void
transport	vp/sifive/uart.h	/^    void transport(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay) {$/;"	f	struct:UART	typeref:typename:void
transport	vp/terminal.h	/^    void transport(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay) {$/;"	f	struct:SimpleTerminal	typeref:typename:void
transport	vp/tlm_map.h	/^        void transport(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay) {$/;"	f	struct:vp::map::LocalRouter	typeref:typename:void
trigger_external_interrupt	core/iss.h	/^    virtual void trigger_external_interrupt() override {$/;"	f	struct:ISS	typeref:typename:void
trigger_external_interrupt	vp/iss.h	/^    virtual void trigger_external_interrupt() override {$/;"	f	struct:ISS	typeref:typename:void
trigger_timer_interrupt	core/iss.h	/^    virtual void trigger_timer_interrupt(bool status) override {$/;"	f	struct:ISS	typeref:typename:void
trigger_timer_interrupt	vp/iss.h	/^    virtual void trigger_timer_interrupt(bool status) override {$/;"	f	struct:ISS	typeref:typename:void
try_handle	vp/tlm_map.h	/^        bool try_handle(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay) {$/;"	f	struct:vp::map::AddressMapping	typeref:typename:bool
try_handle	vp/tlm_map.h	/^        bool try_handle(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay) {$/;"	f	struct:vp::map::RegisterMapping	typeref:typename:bool
try_recv_raw_frame	vp/ethernet.cpp	/^bool EthernetDevice::try_recv_raw_frame() {$/;"	f	class:EthernetDevice	typeref:typename:bool
tsock	RFU/RFA.h	/^		tlm_utils::simple_target_socket<RFA> tsock;$/;"	m	class:RFA	typeref:typename:tlm_utils::simple_target_socket<RFA>
tsock	core/bus.h	/^	tlm_utils::simple_target_socket_tagged<Bus> tsock[NR_OF_INITIATORS];$/;"	m	struct:Bus	typeref:typename:tlm_utils::simple_target_socket_tagged<Bus>[]
tsock	core/device_proxy.h	/^	tlm_utils::simple_target_socket<DeviceProxy> tsock;$/;"	m	struct:DeviceProxy	typeref:typename:tlm_utils::simple_target_socket<DeviceProxy>
tsock	core/dma.h	/^    tlm_utils::simple_target_socket<SimpleDMA> tsock;$/;"	m	struct:SimpleDMA	typeref:typename:tlm_utils::simple_target_socket<SimpleDMA>
tsock	vp/clint.h	/^    tlm_utils::simple_target_socket<CLINT> tsock;$/;"	m	struct:CLINT	typeref:typename:tlm_utils::simple_target_socket<CLINT>
tsock	vp/display.hpp	/^	simple_target_socket<Display> tsock;$/;"	m	struct:Display	typeref:typename:simple_target_socket<Display>
tsock	vp/dma.h	/^    tlm_utils::simple_target_socket<SimpleDMA> tsock;$/;"	m	struct:SimpleDMA	typeref:typename:tlm_utils::simple_target_socket<SimpleDMA>
tsock	vp/ethernet.h	/^    tlm_utils::simple_target_socket<EthernetDevice> tsock;$/;"	m	struct:EthernetDevice	typeref:typename:tlm_utils::simple_target_socket<EthernetDevice>
tsock	vp/flash.h	/^    simple_target_socket<Flashcontroller> tsock;$/;"	m	struct:Flashcontroller	typeref:typename:simple_target_socket<Flashcontroller>
tsock	vp/memory.h	/^    tlm_utils::simple_target_socket<SimpleMemory> tsock;$/;"	m	struct:SimpleMemory	typeref:typename:tlm_utils::simple_target_socket<SimpleMemory>
tsock	vp/mram.h	/^    simple_target_socket<SimpleMRAM> tsock;$/;"	m	struct:SimpleMRAM	typeref:typename:simple_target_socket<SimpleMRAM>
tsock	vp/plic.h	/^    tlm_utils::simple_target_socket<PLIC> tsock;$/;"	m	struct:PLIC	typeref:typename:tlm_utils::simple_target_socket<PLIC>
tsock	vp/random_source.h	/^    tlm_utils::simple_target_socket<RandomSource> tsock;$/;"	m	struct:RandomSource	typeref:typename:tlm_utils::simple_target_socket<RandomSource>
tsock	vp/sensor.h	/^    tlm_utils::simple_target_socket<SimpleSensor> tsock;$/;"	m	struct:SimpleSensor	typeref:typename:tlm_utils::simple_target_socket<SimpleSensor>
tsock	vp/sensor2.h	/^    tlm_utils::simple_target_socket<SimpleSensor2> tsock;$/;"	m	struct:SimpleSensor2	typeref:typename:tlm_utils::simple_target_socket<SimpleSensor2>
tsock	vp/sifive/aon.h	/^    tlm_utils::simple_target_socket<AON> tsock;$/;"	m	struct:AON	typeref:typename:tlm_utils::simple_target_socket<AON>
tsock	vp/sifive/gpio.h	/^    tlm_utils::simple_target_socket<GPIO> tsock;$/;"	m	struct:GPIO	typeref:typename:tlm_utils::simple_target_socket<GPIO>
tsock	vp/sifive/prci.h	/^    tlm_utils::simple_target_socket<PRCI> tsock;$/;"	m	struct:PRCI	typeref:typename:tlm_utils::simple_target_socket<PRCI>
tsock	vp/sifive/spi.h	/^    tlm_utils::simple_target_socket<SPI> tsock;$/;"	m	struct:SPI	typeref:typename:tlm_utils::simple_target_socket<SPI>
tsock	vp/sifive/uart.h	/^    tlm_utils::simple_target_socket<UART> tsock;$/;"	m	struct:UART	typeref:typename:tlm_utils::simple_target_socket<UART>
tsock	vp/terminal.h	/^    tlm_utils::simple_target_socket<SimpleTerminal> tsock;$/;"	m	struct:SimpleTerminal	typeref:typename:tlm_utils::simple_target_socket<SimpleTerminal>
tsocks	vp/bus.h	/^    std::array<tlm_utils::simple_target_socket<SimpleBus>, NR_OF_INITIATORS> tsocks;$/;"	m	struct:SimpleBus	typeref:typename:std::array<tlm_utils::simple_target_socket<SimpleBus>,NR_OF_INITIATORS>
tv_nsec	core/syscall.cpp	/^    int32_t tv_nsec;$/;"	m	struct:rv32g_timespec	typeref:typename:int32_t	file:
tv_nsec	vp/syscall.cpp	/^    int32_t tv_nsec;$/;"	m	struct:rv32g_timespec	typeref:typename:int32_t	file:
tv_sec	core/syscall.cpp	/^    int32_t tv_sec;$/;"	m	struct:rv32g_timespec	typeref:typename:int32_t	file:
tv_sec	vp/syscall.cpp	/^    int32_t tv_sec;$/;"	m	struct:rv32g_timespec	typeref:typename:int32_t	file:
tvm	core/csr.h	/^            unsigned tvm: 1;$/;"	m	struct:csr_mstatus::__anon50a6ad1b050a::__anon50a6ad1b0608	typeref:typename:unsigned:1
tvm	vp/csr.h	/^            unsigned tvm: 1;$/;"	m	struct:csr_mstatus::__anon8468e878050a::__anon8468e8780608	typeref:typename:unsigned:1
tw	core/csr.h	/^            unsigned tw: 1;$/;"	m	struct:csr_mstatus::__anon50a6ad1b050a::__anon50a6ad1b0608	typeref:typename:unsigned:1
tw	vp/csr.h	/^            unsigned tw: 1;$/;"	m	struct:csr_mstatus::__anon8468e878050a::__anon8468e8780608	typeref:typename:unsigned:1
tx_fifo	vp/sifive/uart.h	/^    std::deque<uint8_t> tx_fifo;$/;"	m	struct:UART	typeref:typename:std::deque<uint8_t>
txctrl	vp/sifive/uart.h	/^    uint32_t txctrl = 0;$/;"	m	struct:UART	typeref:typename:uint32_t
txdata	vp/sifive/uart.h	/^    uint32_t txdata = 0;$/;"	m	struct:UART	typeref:typename:uint32_t
txr	core/csr.h	/^            unsigned txr: 1;$/;"	m	struct:csr_mstatus::__anon50a6ad1b050a::__anon50a6ad1b0608	typeref:typename:unsigned:1
txr	vp/csr.h	/^            unsigned txr: 1;$/;"	m	struct:csr_mstatus::__anon8468e878050a::__anon8468e8780608	typeref:typename:unsigned:1
uart0_end_addr	vp/sifive/sifive_main.cpp	/^    addr_t uart0_end_addr     = 0x10013FFF;$/;"	m	struct:Options	typeref:typename:addr_t	file:
uart0_start_addr	vp/sifive/sifive_main.cpp	/^    addr_t uart0_start_addr   = 0x10013000;$/;"	m	struct:Options	typeref:typename:addr_t	file:
ueie	core/csr.h	/^            unsigned ueie: 1;$/;"	m	struct:csr_mie::__anon50a6ad1b090a::__anon50a6ad1b0a08	typeref:typename:unsigned:1
ueie	vp/csr.h	/^            unsigned ueie: 1;$/;"	m	struct:csr_mie::__anon8468e878090a::__anon8468e8780a08	typeref:typename:unsigned:1
ueip	core/csr.h	/^            unsigned ueip: 1;$/;"	m	struct:csr_mip::__anon50a6ad1b0b0a::__anon50a6ad1b0c08	typeref:typename:unsigned:1
ueip	vp/csr.h	/^            unsigned ueip: 1;$/;"	m	struct:csr_mip::__anon8468e8780b0a::__anon8468e8780c08	typeref:typename:unsigned:1
uie	core/csr.h	/^            unsigned uie: 1;$/;"	m	struct:csr_mstatus::__anon50a6ad1b050a::__anon50a6ad1b0608	typeref:typename:unsigned:1
uie	vp/csr.h	/^            unsigned uie: 1;$/;"	m	struct:csr_mstatus::__anon8468e878050a::__anon8468e8780608	typeref:typename:unsigned:1
ulong	core/syscall.h	/^	typedef unsigned long int ulong;$/;"	t	struct:SyscallHandler	typeref:typename:unsigned long int
ulong	vp/syscall.h	/^    typedef unsigned long int ulong;$/;"	t	struct:SyscallHandler	typeref:typename:unsigned long int
unchecked_read	core/csr.h	/^    virtual int32_t unchecked_read() override {$/;"	f	struct:csr_64_high	typeref:typename:int32_t
unchecked_read	core/csr.h	/^    virtual int32_t unchecked_read() override {$/;"	f	struct:csr_64_low	typeref:typename:int32_t
unchecked_read	core/csr.h	/^    virtual int32_t unchecked_read() override {$/;"	f	struct:csr_mtvec	typeref:typename:int32_t
unchecked_read	vp/csr.h	/^    virtual int32_t unchecked_read() override {$/;"	f	struct:csr_64_high	typeref:typename:int32_t
unchecked_read	vp/csr.h	/^    virtual int32_t unchecked_read() override {$/;"	f	struct:csr_64_low	typeref:typename:int32_t
unchecked_read	vp/csr.h	/^    virtual int32_t unchecked_read() override {$/;"	f	struct:csr_mtvec	typeref:typename:int32_t
unchecked_write	core/csr.h	/^    virtual void unchecked_write(int32_t val) override {$/;"	f	struct:csr_64_high	typeref:typename:void
unchecked_write	core/csr.h	/^    virtual void unchecked_write(int32_t val) override {$/;"	f	struct:csr_64_low	typeref:typename:void
unchecked_write	core/csr.h	/^    virtual void unchecked_write(int32_t val) override {$/;"	f	struct:csr_mtvec	typeref:typename:void
unchecked_write	vp/csr.h	/^    virtual void unchecked_write(int32_t val) override {$/;"	f	struct:csr_64_high	typeref:typename:void
unchecked_write	vp/csr.h	/^    virtual void unchecked_write(int32_t val) override {$/;"	f	struct:csr_64_low	typeref:typename:void
unchecked_write	vp/csr.h	/^    virtual void unchecked_write(int32_t val) override {$/;"	f	struct:csr_mtvec	typeref:typename:void
update_and_get_mtime	core/clint_if.cpp	/^uint64_t Clint::update_and_get_mtime() $/;"	f	class:Clint	typeref:typename:uint64_t
update_and_get_mtime	vp/clint.h	/^    uint64_t update_and_get_mtime() override { \/\/ 用现在的时间计算出mtime寄存器的/;"	f	struct:CLINT	typeref:typename:uint64_t
upie	core/csr.h	/^            unsigned upie: 1;$/;"	m	struct:csr_mstatus::__anon50a6ad1b050a::__anon50a6ad1b0608	typeref:typename:unsigned:1
upie	vp/csr.h	/^            unsigned upie: 1;$/;"	m	struct:csr_mstatus::__anon8468e878050a::__anon8468e8780608	typeref:typename:unsigned:1
use_data_dmi	vp/main.cpp	/^    bool use_data_dmi = false;$/;"	m	struct:Options	typeref:typename:bool	file:
use_data_dmi	vp/sifive/sifive_main.cpp	/^    bool use_data_dmi = false;$/;"	m	struct:Options	typeref:typename:bool	file:
use_debug_runner	vp/main.cpp	/^    bool use_debug_runner = false;$/;"	m	struct:Options	typeref:typename:bool	file:
use_instr_dmi	vp/main.cpp	/^    bool use_instr_dmi = false;$/;"	m	struct:Options	typeref:typename:bool	file:
use_instr_dmi	vp/sifive/sifive_main.cpp	/^    bool use_instr_dmi = false;$/;"	m	struct:Options	typeref:typename:bool	file:
usie	core/csr.h	/^            unsigned usie: 1;$/;"	m	struct:csr_mie::__anon50a6ad1b090a::__anon50a6ad1b0a08	typeref:typename:unsigned:1
usie	vp/csr.h	/^            unsigned usie: 1;$/;"	m	struct:csr_mie::__anon8468e878090a::__anon8468e8780a08	typeref:typename:unsigned:1
usip	core/csr.h	/^            unsigned usip: 1;$/;"	m	struct:csr_mip::__anon50a6ad1b0b0a::__anon50a6ad1b0c08	typeref:typename:unsigned:1
usip	vp/csr.h	/^            unsigned usip: 1;$/;"	m	struct:csr_mip::__anon8468e8780b0a::__anon8468e8780c08	typeref:typename:unsigned:1
utie	core/csr.h	/^            unsigned utie: 1;$/;"	m	struct:csr_mie::__anon50a6ad1b090a::__anon50a6ad1b0a08	typeref:typename:unsigned:1
utie	vp/csr.h	/^            unsigned utie: 1;$/;"	m	struct:csr_mie::__anon8468e878090a::__anon8468e8780a08	typeref:typename:unsigned:1
utip	core/csr.h	/^            unsigned utip: 1;$/;"	m	struct:csr_mip::__anon50a6ad1b0b0a::__anon50a6ad1b0c08	typeref:typename:unsigned:1
utip	vp/csr.h	/^            unsigned utip: 1;$/;"	m	struct:csr_mip::__anon8468e8780b0a::__anon8468e8780c08	typeref:typename:unsigned:1
value	vp/sifive/uart.h	/^    uint32_t value;$/;"	m	struct:Reg32	typeref:typename:uint32_t
value	vp/tlm_map.h	/^        uint32_t value() {$/;"	f	struct:vp::map::reg_mapping_t	typeref:typename:uint32_t
vp	vp/tlm_map.h	/^namespace vp { namespace map {$/;"	n
vptr	vp/tlm_map.h	/^        uint32_t *vptr;$/;"	m	struct:vp::map::reg_mapping_t	typeref:typename:uint32_t *
vptr	vp/tlm_map.h	/^        uint32_t *vptr;$/;"	m	struct:vp::map::register_access_t	typeref:typename:uint32_t *
wfi_event	core/iss.h	/^    sc_core::sc_event wfi_event;$/;"	m	struct:ISS	typeref:typename:sc_core::sc_event
wfi_event	vp/iss.h	/^    sc_core::sc_event wfi_event;$/;"	m	struct:ISS	typeref:typename:sc_core::sc_event
wiri	core/csr.h	/^            unsigned wiri: 4;$/;"	m	struct:csr_misa::__anon50a6ad1b010a::__anon50a6ad1b0208	typeref:typename:unsigned:4
wiri	vp/csr.h	/^            unsigned wiri: 4;$/;"	m	struct:csr_misa::__anon8468e878010a::__anon8468e8780208	typeref:typename:unsigned:4
wiri1	core/csr.h	/^            unsigned wiri1: 1;$/;"	m	struct:csr_mip::__anon50a6ad1b0b0a::__anon50a6ad1b0c08	typeref:typename:unsigned:1
wiri1	vp/csr.h	/^            unsigned wiri1: 1;$/;"	m	struct:csr_mip::__anon8468e8780b0a::__anon8468e8780c08	typeref:typename:unsigned:1
wiri2	core/csr.h	/^            unsigned wiri2: 1;$/;"	m	struct:csr_mip::__anon50a6ad1b0b0a::__anon50a6ad1b0c08	typeref:typename:unsigned:1
wiri2	vp/csr.h	/^            unsigned wiri2: 1;$/;"	m	struct:csr_mip::__anon8468e8780b0a::__anon8468e8780c08	typeref:typename:unsigned:1
wiri3	core/csr.h	/^            unsigned wiri3: 1;$/;"	m	struct:csr_mip::__anon50a6ad1b0b0a::__anon50a6ad1b0c08	typeref:typename:unsigned:1
wiri3	vp/csr.h	/^            unsigned wiri3: 1;$/;"	m	struct:csr_mip::__anon8468e8780b0a::__anon8468e8780c08	typeref:typename:unsigned:1
wiri4	core/csr.h	/^            unsigned wiri4: 20;$/;"	m	struct:csr_mip::__anon50a6ad1b0b0a::__anon50a6ad1b0c08	typeref:typename:unsigned:20
wiri4	vp/csr.h	/^            unsigned wiri4: 20;$/;"	m	struct:csr_mip::__anon8468e8780b0a::__anon8468e8780c08	typeref:typename:unsigned:20
wpri1	core/csr.h	/^            unsigned wpri1: 1;$/;"	m	struct:csr_mie::__anon50a6ad1b090a::__anon50a6ad1b0a08	typeref:typename:unsigned:1
wpri1	core/csr.h	/^            unsigned wpri1: 1;$/;"	m	struct:csr_mstatus::__anon50a6ad1b050a::__anon50a6ad1b0608	typeref:typename:unsigned:1
wpri1	vp/csr.h	/^            unsigned wpri1: 1;$/;"	m	struct:csr_mie::__anon8468e878090a::__anon8468e8780a08	typeref:typename:unsigned:1
wpri1	vp/csr.h	/^            unsigned wpri1: 1;$/;"	m	struct:csr_mstatus::__anon8468e878050a::__anon8468e8780608	typeref:typename:unsigned:1
wpri2	core/csr.h	/^            unsigned wpri2: 1;$/;"	m	struct:csr_mie::__anon50a6ad1b090a::__anon50a6ad1b0a08	typeref:typename:unsigned:1
wpri2	core/csr.h	/^            unsigned wpri2: 1;$/;"	m	struct:csr_mstatus::__anon50a6ad1b050a::__anon50a6ad1b0608	typeref:typename:unsigned:1
wpri2	vp/csr.h	/^            unsigned wpri2: 1;$/;"	m	struct:csr_mie::__anon8468e878090a::__anon8468e8780a08	typeref:typename:unsigned:1
wpri2	vp/csr.h	/^            unsigned wpri2: 1;$/;"	m	struct:csr_mstatus::__anon8468e878050a::__anon8468e8780608	typeref:typename:unsigned:1
wpri3	core/csr.h	/^            unsigned wpri3: 1;$/;"	m	struct:csr_mie::__anon50a6ad1b090a::__anon50a6ad1b0a08	typeref:typename:unsigned:1
wpri3	core/csr.h	/^            unsigned wpri3: 2;$/;"	m	struct:csr_mstatus::__anon50a6ad1b050a::__anon50a6ad1b0608	typeref:typename:unsigned:2
wpri3	vp/csr.h	/^            unsigned wpri3: 1;$/;"	m	struct:csr_mie::__anon8468e878090a::__anon8468e8780a08	typeref:typename:unsigned:1
wpri3	vp/csr.h	/^            unsigned wpri3: 2;$/;"	m	struct:csr_mstatus::__anon8468e878050a::__anon8468e8780608	typeref:typename:unsigned:2
wpri4	core/csr.h	/^            unsigned wpri4: 20;$/;"	m	struct:csr_mie::__anon50a6ad1b090a::__anon50a6ad1b0a08	typeref:typename:unsigned:20
wpri4	core/csr.h	/^            unsigned wpri4: 8;$/;"	m	struct:csr_mstatus::__anon50a6ad1b050a::__anon50a6ad1b0608	typeref:typename:unsigned:8
wpri4	vp/csr.h	/^            unsigned wpri4: 20;$/;"	m	struct:csr_mie::__anon8468e878090a::__anon8468e8780a08	typeref:typename:unsigned:20
wpri4	vp/csr.h	/^            unsigned wpri4: 8;$/;"	m	struct:csr_mstatus::__anon8468e878050a::__anon8468e8780608	typeref:typename:unsigned:8
write	core/csr.h	/^	void write(int32_t val)$/;"	f	struct:csr_base	typeref:typename:void
write	core/regfile.h	/^    void write(uint32_t index, int32_t value) {$/;"	f	struct:RegFile	typeref:typename:void
write	vp/csr.h	/^    void write(int32_t val, PrivilegeLevel access_level=PrivilegeLevel::Machine) {$/;"	f	struct:csr_base	typeref:typename:void
write	vp/iss.h	/^    void write(uint32_t index, int32_t value) {$/;"	f	struct:RegFile	typeref:typename:void
write	vp/tlm_map.h	/^        bool write;$/;"	m	struct:vp::map::register_access_t	typeref:typename:bool
writeBlock	vp/flash.h	/^	void writeBlock(uint64_t blockOffset)$/;"	f	struct:Blockbuffer	typeref:typename:void
write_data	vp/memory.h	/^    void write_data(unsigned addr, uint8_t *src, unsigned num_bytes) {$/;"	f	struct:SimpleMemory	typeref:typename:void
write_data	vp/mram.h	/^    void write_data(unsigned addr, uint8_t *src, unsigned num_bytes) {$/;"	f	struct:SimpleMRAM	typeref:typename:void
write_memory	vp/gdb_stub.cpp	/^void debug_memory_mapping::write_memory(unsigned start, int nbytes, const std::string &data) {$/;"	f	class:debug_memory_mapping	typeref:typename:void
write_only	vp/tlm_map.h	/^    constexpr access_mode write_only = {false, true};$/;"	v	namespace:vp::map	typeref:typename:access_mode
x0	core/regfile.h	/^        x0 = 0,$/;"	e	enum:RegFile::e
x0	vp/iss.h	/^        x0 = 0,$/;"	e	enum:RegFile::e
x1	core/regfile.h	/^        x1,$/;"	e	enum:RegFile::e
x1	vp/iss.h	/^        x1,$/;"	e	enum:RegFile::e
x10	core/regfile.h	/^        x10,$/;"	e	enum:RegFile::e
x10	vp/iss.h	/^        x10,$/;"	e	enum:RegFile::e
x11	core/regfile.h	/^        x11,$/;"	e	enum:RegFile::e
x11	vp/iss.h	/^        x11,$/;"	e	enum:RegFile::e
x12	core/regfile.h	/^        x12,$/;"	e	enum:RegFile::e
x12	vp/iss.h	/^        x12,$/;"	e	enum:RegFile::e
x13	core/regfile.h	/^        x13,$/;"	e	enum:RegFile::e
x13	vp/iss.h	/^        x13,$/;"	e	enum:RegFile::e
x14	core/regfile.h	/^        x14,$/;"	e	enum:RegFile::e
x14	vp/iss.h	/^        x14,$/;"	e	enum:RegFile::e
x15	core/regfile.h	/^        x15,$/;"	e	enum:RegFile::e
x15	vp/iss.h	/^        x15,$/;"	e	enum:RegFile::e
x16	core/regfile.h	/^        x16,$/;"	e	enum:RegFile::e
x16	vp/iss.h	/^        x16,$/;"	e	enum:RegFile::e
x17	core/regfile.h	/^        x17,$/;"	e	enum:RegFile::e
x17	vp/iss.h	/^        x17,$/;"	e	enum:RegFile::e
x18	core/regfile.h	/^        x18,$/;"	e	enum:RegFile::e
x18	vp/iss.h	/^        x18,$/;"	e	enum:RegFile::e
x19	core/regfile.h	/^        x19,$/;"	e	enum:RegFile::e
x19	vp/iss.h	/^        x19,$/;"	e	enum:RegFile::e
x2	core/regfile.h	/^        x2,$/;"	e	enum:RegFile::e
x2	vp/iss.h	/^        x2,$/;"	e	enum:RegFile::e
x20	core/regfile.h	/^        x20,$/;"	e	enum:RegFile::e
x20	vp/iss.h	/^        x20,$/;"	e	enum:RegFile::e
x21	core/regfile.h	/^        x21,$/;"	e	enum:RegFile::e
x21	vp/iss.h	/^        x21,$/;"	e	enum:RegFile::e
x22	core/regfile.h	/^        x22,$/;"	e	enum:RegFile::e
x22	vp/iss.h	/^        x22,$/;"	e	enum:RegFile::e
x23	core/regfile.h	/^        x23,$/;"	e	enum:RegFile::e
x23	vp/iss.h	/^        x23,$/;"	e	enum:RegFile::e
x24	core/regfile.h	/^        x24,$/;"	e	enum:RegFile::e
x24	vp/iss.h	/^        x24,$/;"	e	enum:RegFile::e
x25	core/regfile.h	/^        x25,$/;"	e	enum:RegFile::e
x25	vp/iss.h	/^        x25,$/;"	e	enum:RegFile::e
x26	core/regfile.h	/^        x26,$/;"	e	enum:RegFile::e
x26	vp/iss.h	/^        x26,$/;"	e	enum:RegFile::e
x27	core/regfile.h	/^        x27,$/;"	e	enum:RegFile::e
x27	vp/iss.h	/^        x27,$/;"	e	enum:RegFile::e
x28	core/regfile.h	/^        x28,$/;"	e	enum:RegFile::e
x28	vp/iss.h	/^        x28,$/;"	e	enum:RegFile::e
x29	core/regfile.h	/^        x29,$/;"	e	enum:RegFile::e
x29	vp/iss.h	/^        x29,$/;"	e	enum:RegFile::e
x3	core/regfile.h	/^        x3,$/;"	e	enum:RegFile::e
x3	vp/iss.h	/^        x3,$/;"	e	enum:RegFile::e
x30	core/regfile.h	/^        x30,$/;"	e	enum:RegFile::e
x30	vp/iss.h	/^        x30,$/;"	e	enum:RegFile::e
x31	core/regfile.h	/^        x31,$/;"	e	enum:RegFile::e
x31	vp/iss.h	/^        x31,$/;"	e	enum:RegFile::e
x4	core/regfile.h	/^        x4,$/;"	e	enum:RegFile::e
x4	vp/iss.h	/^        x4,$/;"	e	enum:RegFile::e
x5	core/regfile.h	/^        x5,$/;"	e	enum:RegFile::e
x5	vp/iss.h	/^        x5,$/;"	e	enum:RegFile::e
x6	core/regfile.h	/^        x6,$/;"	e	enum:RegFile::e
x6	vp/iss.h	/^        x6,$/;"	e	enum:RegFile::e
x7	core/regfile.h	/^        x7,$/;"	e	enum:RegFile::e
x7	vp/iss.h	/^        x7,$/;"	e	enum:RegFile::e
x8	core/regfile.h	/^        x8,$/;"	e	enum:RegFile::e
x8	vp/iss.h	/^        x8,$/;"	e	enum:RegFile::e
x9	core/regfile.h	/^        x9,$/;"	e	enum:RegFile::e
x9	vp/iss.h	/^        x9,$/;"	e	enum:RegFile::e
xs	core/csr.h	/^            unsigned xs: 2;$/;"	m	struct:csr_mstatus::__anon50a6ad1b050a::__anon50a6ad1b0608	typeref:typename:unsigned:2
xs	vp/csr.h	/^            unsigned xs: 2;$/;"	m	struct:csr_mstatus::__anon8468e878050a::__anon8468e8780608	typeref:typename:unsigned:2
zero	core/regfile.h	/^        zero = x0,$/;"	e	enum:RegFile::e
zero	vp/iss.h	/^        zero = x0,$/;"	e	enum:RegFile::e
zero_memory	vp/gdb_stub.cpp	/^std::string debug_memory_mapping::zero_memory(int nbytes) {$/;"	f	class:debug_memory_mapping	typeref:typename:std::string
zimm	core/instr.h	/^    inline uint32_t zimm() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
zimm	vp/instr.h	/^    inline uint32_t zimm() {$/;"	f	struct:Instruction	typeref:typename:uint32_t
~AbstractMapping	vp/tlm_map.h	/^        virtual ~AbstractMapping() {}$/;"	f	struct:vp::map::AbstractMapping
~DebugCoreRunner	vp/gdb_stub.h	/^    ~DebugCoreRunner()$/;"	f	struct:DebugCoreRunner
~Flashcontroller	vp/flash.h	/^    ~Flashcontroller()$/;"	f	struct:Flashcontroller
~LocalRouter	vp/tlm_map.h	/^        ~LocalRouter() {$/;"	f	struct:vp::map::LocalRouter
~SimpleMRAM	vp/mram.h	/^    ~SimpleMRAM()$/;"	f	struct:SimpleMRAM
~clint_if	core/clint_if.h	/^	~clint_if() $/;"	f	struct:clint_if
~clint_if	vp/clint.h	/^    virtual ~clint_if() {}$/;"	f	struct:clint_if
~csr_base	core/csr.h	/^    virtual ~csr_base() {}$/;"	f	struct:csr_base
~csr_base	vp/csr.h	/^    virtual ~csr_base() {}$/;"	f	struct:csr_base
~data_memory_interface	core/mem_if.h	/^	virtual ~data_memory_interface()$/;"	f	struct:data_memory_interface
~data_memory_interface	vp/iss.h	/^    virtual ~data_memory_interface() {}$/;"	f	struct:data_memory_interface
~external_interrupt_target	core/irq_if.h	/^    virtual ~external_interrupt_target() {}$/;"	f	struct:external_interrupt_target
~external_interrupt_target	vp/irq_if.h	/^    virtual ~external_interrupt_target() {}$/;"	f	struct:external_interrupt_target
~instr_memory_interface	core/mem_if.h	/^	virtual ~instr_memory_interface()$/;"	f	struct:instr_memory_interface
~instr_memory_interface	vp/iss.h	/^    virtual ~instr_memory_interface() {}$/;"	f	struct:instr_memory_interface
~interrupt_gateway	core/irq_if.h	/^    virtual ~interrupt_gateway() {}$/;"	f	struct:interrupt_gateway
~interrupt_gateway	vp/irq_if.h	/^    virtual ~interrupt_gateway() {}$/;"	f	struct:interrupt_gateway
~timer_interrupt_target	core/irq_if.h	/^    virtual ~timer_interrupt_target() {}$/;"	f	struct:timer_interrupt_target
~timer_interrupt_target	vp/irq_if.h	/^    virtual ~timer_interrupt_target() {}$/;"	f	struct:timer_interrupt_target
